/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/@vladmandic/face-api@1.7.2/dist/face-api.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var faceapi=(()=>{var e,t=Object.defineProperty,n=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,s=(e=function(e){if("undefined"!=typeof require)return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')},"undefined"!=typeof require?require:"undefined"!=typeof Proxy?new Proxy(e,{get:(e,t)=>("undefined"!=typeof require?require:e)[t]}):e),i=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})},o={};i(o,{AgeGenderNet:()=>SY,BoundingBox:()=>DK,Box:()=>RK,ComposableTask:()=>bZ,ComputeAllFaceDescriptorsTask:()=>tJ,ComputeFaceDescriptorsTaskBase:()=>eJ,ComputeSingleFaceDescriptorTask:()=>nJ,DetectAllFaceLandmarksTask:()=>aJ,DetectAllFacesTask:()=>oJ,DetectFaceLandmarksTaskBase:()=>rJ,DetectFacesTaskBase:()=>iJ,DetectSingleFaceLandmarksTask:()=>sJ,DetectSingleFaceTask:()=>lJ,Dimensions:()=>yK,FACE_EXPRESSION_LABELS:()=>iY,FaceDetection:()=>OK,FaceDetectionNet:()=>tZ,FaceExpressionNet:()=>lY,FaceExpressions:()=>oY,FaceLandmark68Net:()=>TY,FaceLandmark68TinyNet:()=>CY,FaceLandmarkNet:()=>EY,FaceLandmarks:()=>qK,FaceLandmarks5:()=>KK,FaceLandmarks68:()=>XK,FaceMatch:()=>YK,FaceMatcher:()=>mJ,FaceRecognitionNet:()=>LY,Gender:()=>IY,LabeledBox:()=>ZK,LabeledFaceDescriptors:()=>JK,NetInput:()=>CX,NeuralNetwork:()=>BX,ObjectDetection:()=>MK,Point:()=>FK,PredictedBox:()=>QK,Rect:()=>jK,SsdMobilenetv1:()=>JY,SsdMobilenetv1Options:()=>ZY,TinyFaceDetector:()=>IZ,TinyFaceDetectorOptions:()=>yZ,TinyYolov2:()=>mZ,TinyYolov2Options:()=>dZ,allFaces:()=>cJ,allFacesSsdMobilenetv1:()=>hJ,allFacesTinyYolov2:()=>dJ,awaitMediaLoaded:()=>vX,bufferToImage:()=>wX,computeFaceDescriptor:()=>$Z,createCanvas:()=>IX,createCanvasFromMedia:()=>SX,createFaceDetectionNet:()=>eZ,createFaceRecognitionNet:()=>zY,createSsdMobilenetv1:()=>QY,createTinyFaceDetector:()=>gJ,createTinyYolov2:()=>gZ,detectAllFaces:()=>pJ,detectFaceLandmarks:()=>CZ,detectFaceLandmarksTiny:()=>EZ,detectLandmarks:()=>UZ,detectSingleFace:()=>uJ,draw:()=>fK,env:()=>uX,euclideanDistance:()=>fJ,extendWithAge:()=>WY,extendWithFaceDescriptor:()=>PY,extendWithFaceDetection:()=>tX,extendWithFaceExpressions:()=>pY,extendWithFaceLandmarks:()=>cY,extendWithGender:()=>UY,extractFaceTensors:()=>AX,extractFaces:()=>$X,fetchImage:()=>RX,fetchJson:()=>DX,fetchNetWeights:()=>MX,fetchOrThrow:()=>FX,fetchVideo:()=>OX,getContext2dOrThrow:()=>hX,getMediaDimensions:()=>kX,imageTensorToCanvas:()=>NX,imageToSquare:()=>_X,inverseSigmoid:()=>GK,iou:()=>LK,isMediaElement:()=>TX,isMediaLoaded:()=>xX,isWithAge:()=>BY,isWithFaceDetection:()=>eX,isWithFaceExpressions:()=>uY,isWithFaceLandmarks:()=>dY,isWithGender:()=>VY,loadAgeGenderModel:()=>BZ,loadFaceDetectionModel:()=>WZ,loadFaceExpressionModel:()=>PZ,loadFaceLandmarkModel:()=>OZ,loadFaceLandmarkTinyModel:()=>LZ,loadFaceRecognitionModel:()=>zZ,loadSsdMobilenetv1Model:()=>RZ,loadTinyFaceDetectorModel:()=>DZ,loadTinyYolov2Model:()=>MZ,loadWeightMap:()=>zX,locateFaces:()=>VZ,matchDimensions:()=>PX,minBbox:()=>zK,nets:()=>SZ,nonMaxSuppression:()=>PK,normalize:()=>BK,padToSquare:()=>WK,predictAgeAndGender:()=>FZ,recognizeFaceExpressions:()=>AZ,resizeResults:()=>yJ,resolveInput:()=>pX,shuffleArray:()=>VK,sigmoid:()=>UK,ssdMobilenetv1:()=>NZ,tf:()=>l,tinyFaceDetector:()=>TZ,tinyYolov2:()=>_Z,toNetInput:()=>EX,utils:()=>gK,validateConfig:()=>iZ,version:()=>bJ});var l={};i(l,{Abs:()=>Ge,Acos:()=>He,Acosh:()=>je,AdadeltaOptimizer:()=>Yc,AdagradOptimizer:()=>Zc,AdamOptimizer:()=>Jc,AdamaxOptimizer:()=>Qc,Add:()=>qe,AddN:()=>Ke,All:()=>Xe,Any:()=>Ye,ArgMax:()=>Ze,ArgMin:()=>Je,Asin:()=>Qe,Asinh:()=>et,Atan:()=>tt,Atan2:()=>rt,Atanh:()=>nt,AvgPool:()=>at,AvgPool3D:()=>it,AvgPool3DGrad:()=>ot,AvgPoolGrad:()=>st,BackendWasm:()=>Zq,BatchMatMul:()=>lt,BatchToSpaceND:()=>ut,Bincount:()=>pt,BroadcastArgs:()=>dt,BroadcastTo:()=>ht,Callback:()=>sN,CallbackList:()=>rv,Cast:()=>ct,Ceil:()=>ft,ClipByValue:()=>mt,Complex:()=>gt,ComplexAbs:()=>yt,Concat:()=>bt,Conv2D:()=>xt,Conv2DBackpropFilter:()=>vt,Conv2DBackpropInput:()=>wt,Conv3D:()=>kt,Conv3DBackpropFilterV2:()=>It,Conv3DBackpropInputV2:()=>St,Cos:()=>Nt,Cosh:()=>Tt,CropAndResize:()=>Et,Cumprod:()=>_t,Cumsum:()=>Ct,CustomCallback:()=>iv,DataStorage:()=>P,DenseBincount:()=>$t,DepthToSpace:()=>At,DepthwiseConv2dNative:()=>Ft,DepthwiseConv2dNativeBackpropFilter:()=>Rt,DepthwiseConv2dNativeBackpropInput:()=>Dt,Diag:()=>Mt,Dilation2D:()=>Ot,Dilation2DBackpropFilter:()=>zt,Dilation2DBackpropInput:()=>Lt,ENV:()=>We,EarlyStopping:()=>lN,Einsum:()=>Bt,Elu:()=>Wt,EluGrad:()=>Vt,Environment:()=>Le,Equal:()=>Gt,Erf:()=>Ut,Exp:()=>Ht,ExpandDims:()=>jt,Expm1:()=>qt,FFT:()=>Kt,Fill:()=>Xt,FlipLeftRight:()=>Yt,Floor:()=>Zt,FloorDiv:()=>Jt,FromPixels:()=>Yr,FusedBatchNorm:()=>Qt,FusedConv2D:()=>Qr,FusedDepthwiseConv2D:()=>ea,GPGPUContext:()=>RO,GatherNd:()=>tn,GatherV2:()=>en,GraphModel:()=>qT,Greater:()=>nn,GreaterEqual:()=>rn,History:()=>sv,IFFT:()=>sn,Identity:()=>an,Imag:()=>on,InputSpec:()=>sx,IsFinite:()=>ln,IsInf:()=>un,IsNan:()=>pn,KernelBackend:()=>B,LRN:()=>In,LRNGrad:()=>Sn,LayerVariable:()=>nx,LayersModel:()=>lw,LeakyRelu:()=>hn,Less:()=>dn,LessEqual:()=>cn,LinSpace:()=>fn,Log:()=>mn,Log1p:()=>gn,LogSoftmax:()=>wn,LogicalAnd:()=>yn,LogicalNot:()=>bn,LogicalOr:()=>xn,LogicalXor:()=>vn,LowerBound:()=>kn,MathBackendWebGL:()=>VL,Max:()=>Nn,MaxPool:()=>_n,MaxPool3D:()=>En,MaxPool3DGrad:()=>$n,MaxPoolGrad:()=>Cn,MaxPoolWithArgmax:()=>An,Maximum:()=>Tn,Mean:()=>Fn,Min:()=>Rn,Minimum:()=>Dn,MirrorPad:()=>Mn,Mod:()=>On,MomentumOptimizer:()=>tf,Multinomial:()=>Ln,Multiply:()=>zn,Neg:()=>Pn,NonMaxSuppressionV3:()=>Wn,NonMaxSuppressionV4:()=>Vn,NonMaxSuppressionV5:()=>Un,NotEqual:()=>Bn,OP_SCOPE_SUFFIX:()=>Ts,OneHot:()=>Hn,OnesLike:()=>Gn,Optimizer:()=>Xc,OptimizerConstructors:()=>rf,Pack:()=>jn,PadV2:()=>qn,Pool:()=>Kn,Pow:()=>Xn,Prelu:()=>Yn,Prod:()=>Zn,RMSPropOptimizer:()=>nf,RNN:()=>mk,Range:()=>Jn,Rank:()=>Xa,Real:()=>Qn,RealDiv:()=>Pt,Reciprocal:()=>er,Reduction:()=>Sc,Relu:()=>tr,Relu6:()=>or,Reshape:()=>nr,ResizeBilinear:()=>sr,ResizeBilinearGrad:()=>ir,ResizeNearestNeighbor:()=>rr,ResizeNearestNeighborGrad:()=>ar,Reverse:()=>lr,RotateWithOffset:()=>Zr,Round:()=>ur,Rsqrt:()=>pr,SGDOptimizer:()=>ef,ScatterNd:()=>hr,SearchSorted:()=>dr,Select:()=>cr,Selu:()=>fr,Sequential:()=>dw,Sigmoid:()=>xr,Sign:()=>br,Sin:()=>gr,Sinh:()=>yr,Slice:()=>mr,Softmax:()=>Nr,Softplus:()=>vr,SpaceToBatchND:()=>Ir,SparseFillEmptyRows:()=>Tr,SparseReshape:()=>_r,SparseSegmentMean:()=>Cr,SparseSegmentSum:()=>Er,SparseToDense:()=>$r,SplitV:()=>Sr,Sqrt:()=>wr,Square:()=>Fr,SquaredDifference:()=>Ar,Step:()=>Xr,StridedSlice:()=>Rr,StringNGrams:()=>Dr,StringSplit:()=>Mr,StringToHashBucketFast:()=>Or,Sub:()=>Lr,Sum:()=>kr,SymbolicTensor:()=>ix,Tan:()=>zr,Tanh:()=>Pr,Tensor:()=>ja,TensorBuffer:()=>Ua,Tile:()=>Br,TopK:()=>Wr,Transform:()=>Vr,Transpose:()=>Ur,Unique:()=>Gr,Unpack:()=>Hr,UnsortedSegmentSum:()=>jr,UpperBound:()=>qr,Variable:()=>Ka,ZerosLike:()=>Kr,_FusedMatMul:()=>Jr,abs:()=>$l,acos:()=>Al,acosh:()=>Fl,add:()=>Tl,addN:()=>Rl,all:()=>Dl,any:()=>Ml,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Wl,atanh:()=>Vl,avgPool:()=>au,avgPool3d:()=>su,backend:()=>yo,backend_util:()=>lf,basicLSTMCell:()=>pu,batchNorm:()=>cu,batchNorm2d:()=>fu,batchNorm3d:()=>mu,batchNorm4d:()=>gu,batchToSpaceND:()=>hu,bincount:()=>yu,booleanMaskAsync:()=>_d,broadcastArgs:()=>bu,broadcastTo:()=>xu,broadcast_util:()=>So,browser:()=>Eo,buffer:()=>Ii,callbacks:()=>hN,cast:()=>Si,ceil:()=>vu,clipByValue:()=>wu,clone:()=>Ni,complex:()=>Cs,concat:()=>iu,concat1d:()=>ku,concat2d:()=>Iu,concat3d:()=>Su,concat4d:()=>Nu,constraints:()=>wx,conv1d:()=>_u,conv2d:()=>Tu,conv2dTranspose:()=>Eu,conv3d:()=>$u,conv3dTranspose:()=>Fu,copyRegisteredKernels:()=>da,cos:()=>Ru,cosh:()=>Du,cosineWindow:()=>Dd,cumprod:()=>Mu,cumsum:()=>Ou,customGrad:()=>Pp,data:()=>ZT,denseBincount:()=>Lu,deprecationWarn:()=>eo,depthToSpace:()=>zu,depthwiseConv2d:()=>Pu,deregisterOp:()=>mN,device_util:()=>gs,diag:()=>Bu,dilation2d:()=>Wu,disableDeprecationWarnings:()=>Qi,dispose:()=>io,disposeVariables:()=>to,div:()=>Cl,divNoNan:()=>Hu,dot:()=>ju,dropout:()=>Fd,einsum:()=>qu,elu:()=>Ku,enableDebugMode:()=>Ji,enableProdMode:()=>Zi,enclosingPowerOfTwo:()=>Rd,engine:()=>no,env:()=>Pe,equal:()=>Vu,erf:()=>Xu,euclideanNorm:()=>cp,exp:()=>fp,expandDims:()=>mp,expm1:()=>gp,eye:()=>bp,fft:()=>nd,fill:()=>xp,findBackend:()=>fo,findBackendFactory:()=>mo,floor:()=>vp,floorDiv:()=>_l,forceHalfFloat:()=>GL,fused:()=>Od,gather:()=>wp,gatherND:()=>Ad,gather_util:()=>Oo,getBackend:()=>ho,getGradient:()=>ia,getKernel:()=>sa,getKernelsForBackend:()=>oa,getThreadsCount:()=>hK,gpgpu_util:()=>pO,grad:()=>Dp,grads:()=>Mp,greater:()=>kp,greaterEqual:()=>Ip,ifft:()=>rd,imag:()=>xo,image:()=>Gc,inTopKAsync:()=>Md,initializers:()=>Ox,input:()=>gw,io:()=>_i,irfft:()=>ad,isFinite:()=>Sp,isInf:()=>Np,isNaN:()=>Tp,keep:()=>oo,kernel_impls:()=>pm,layers:()=>Qx,leakyRelu:()=>_p,less:()=>Cp,lessEqual:()=>Ep,linalg:()=>Hc,linspace:()=>$p,loadGraphModel:()=>KT,loadGraphModelSync:()=>XT,loadLayersModel:()=>mw,localResponseNormalization:()=>Ap,log:()=>Fp,log1p:()=>Rp,logSigmoid:()=>Vp,logSoftmax:()=>Gp,logSumExp:()=>Hp,logicalAnd:()=>jp,logicalNot:()=>qp,logicalOr:()=>Kp,logicalXor:()=>Xp,losses:()=>jc,lowerBound:()=>Jp,matMul:()=>Xi,math:()=>Ki,max:()=>ap,maxPool:()=>Qp,maxPool3d:()=>eh,maxPoolWithArgmax:()=>th,maximum:()=>nh,mean:()=>rh,memory:()=>ro,meshgrid:()=>ih,metrics:()=>zS,min:()=>sp,minimum:()=>oh,mirrorPad:()=>lh,mod:()=>uh,model:()=>cw,models:()=>eN,moments:()=>ph,movingAverage:()=>Cd,mul:()=>El,multiRNNCell:()=>hh,multinomial:()=>dh,neg:()=>vo,nextFrame:()=>of,norm:()=>dp,notEqual:()=>ch,oneHot:()=>Yi,ones:()=>sh,onesLike:()=>fh,op:()=>_s,outerProduct:()=>mh,pad:()=>gh,pad1d:()=>yh,pad2d:()=>bh,pad3d:()=>xh,pad4d:()=>vh,pool:()=>kh,pow:()=>ip,prelu:()=>Ih,print:()=>Ti,prod:()=>Sh,profile:()=>ao,rand:()=>Nh,randomGamma:()=>$h,randomNormal:()=>Ah,randomStandardNormal:()=>Fh,randomUniform:()=>Rh,range:()=>Dh,ready:()=>po,real:()=>wo,reciprocal:()=>Mh,registerBackend:()=>go,registerCallbackConstructor:()=>yw,registerGradient:()=>ua,registerKernel:()=>la,registerOp:()=>cN,regularizers:()=>tN,relu:()=>Oh,relu6:()=>Lh,removeBackend:()=>co,reshape:()=>ru,reverse:()=>zh,reverse1d:()=>Ph,reverse2d:()=>Bh,reverse3d:()=>Wh,reverse4d:()=>Vh,rfft:()=>id,round:()=>Uh,rsqrt:()=>Gh,scalar:()=>op,scatterND:()=>Ed,scatter_util:()=>zo,searchSorted:()=>Zp,selu:()=>Hh,separableConv2d:()=>jh,sequential:()=>fw,serialization:()=>ll,setBackend:()=>uo,setPlatform:()=>bo,setThreadsCount:()=>pK,setWasmPath:()=>iK,setWasmPaths:()=>oK,setWebGLContext:()=>ED,setdiff1dAsync:()=>qh,sigmoid:()=>ou,sign:()=>Kh,signal:()=>Uc,sin:()=>Xh,sinh:()=>Yh,slice:()=>lu,slice1d:()=>Zh,slice2d:()=>Jh,slice3d:()=>Qh,slice4d:()=>ed,slice_util:()=>Vo,softmax:()=>td,softplus:()=>Wp,spaceToBatchND:()=>wh,sparse:()=>qc,sparseToDense:()=>$d,spectral:()=>Vc,split:()=>sd,sqrt:()=>lp,square:()=>up,squaredDifference:()=>od,squeeze:()=>ld,stack:()=>ud,step:()=>pd,stridedSlice:()=>hd,string:()=>Kc,sub:()=>Up,sum:()=>pp,sumOutType:()=>rs,tan:()=>dd,tanh:()=>uu,tensor:()=>$s,tensor1d:()=>cd,tensor2d:()=>fd,tensor3d:()=>$o,tensor4d:()=>md,tensor5d:()=>gd,tensor6d:()=>yd,tensor_util:()=>es,test_util:()=>dl,tidy:()=>so,tile:()=>yp,time:()=>lo,topk:()=>bd,train:()=>af,transpose:()=>ko,truncatedNormal:()=>xd,unique:()=>vd,unregisterGradient:()=>ha,unregisterKernel:()=>pa,unsortedSegmentSum:()=>wd,unstack:()=>kd,upcastType:()=>ns,upperBound:()=>Id,util:()=>fa,valueAndGrad:()=>Op,valueAndGrads:()=>Lp,variable:()=>Sd,variableGrads:()=>zp,version:()=>cK,version_converter:()=>YT,version_core:()=>Nl,version_layers:()=>Vv,version_wasm:()=>dK,version_webgl:()=>UL,webgl:()=>HL,webgl_util:()=>ID,where:()=>Uu,whereAsync:()=>Td,zeros:()=>ah,zerosLike:()=>Gu});var u=Object.create,p=Object.defineProperty,h=Object.getOwnPropertyDescriptor,d=Object.getOwnPropertyNames,c=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var n in t)p(e,n,{get:t[n],enumerable:!0})},y=(e,t,n)=>(n=null!=e?u(c(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of d(t))!f.call(e,a)&&a!==n&&p(e,a,{get:()=>t[a],enumerable:!(r=h(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:p(n,"default",{value:e,enumerable:!0}),e)),b=m(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var p=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=l(p(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(p(n,o));s=s.mul(d).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(p(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,p=0,h=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,h+=(c+=r+l)>>>16,p+=(h+=n+o)>>>16,p+=t+i,u((c&=65535)<<16|(f&=65535),(p&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,p=65535&e.high,h=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*p)>>>16,f+=t*c+r*h+s*p+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:p(2,i-48),h=l(t),c=h.mul(e);c.isNegative()||c.gt(r);)c=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),x=m((()=>{})),v=m((()=>{})),w=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=m((()=>{})),C=m(((e,t)=>{!function(e,n,r){var a,s=256,i="random",o=r.pow(s,6),l=r.pow(2,52),u=2*l,p=255;function h(t,p,h){var y=[],b=m(f((p=1==p?{entropy:!0}:p||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,i=r&&r.plugins;return[+new Date,e,i,e.screen,g(n)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),n),(p.pass||h||function(e,t,n,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),n?(r[i]=e,t):e})(v,b,"global"in p?p.global:this==r,p.state)}function d(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=p&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*s+o[p&(o[a]=o[i=p&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=h;try{a=_()}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return h})):r["seed"+i]=h}("undefined"!=typeof self?self:e,[],Math)})),E=m(((e,t)=>{var n=w(),r=k(),a=I(),s=S(),i=N(),o=T(),l=C();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),$=m((()=>{})),A=m((()=>{})),F=m((()=>{})),R=m((()=>{})),D=m((()=>{})),M=m((()=>{})),O=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return L.buffer!=G&&ee(L.buffer),H}function r(){return L.buffer!=G&&ee(L.buffer),j}function a(){return L.buffer!=G&&ee(L.buffer),q}function s(){return L.buffer!=G&&ee(L.buffer),K}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h,d,c,f,m,g=Object.assign({},u),y=[],b=(e,t)=>{throw t},x="object"==typeof window,v="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,k=u.ENVIRONMENT_IS_PTHREAD||!1,I="";function S(e){return u.locateFile?u.locateFile(e,I):I+e}if(w){let e;I=v?F().dirname(I)+"/":__dirname+"/",m=()=>{f||(c=A(),f=F())},p=function(e,t){return m(),e=f.normalize(e),c.readFileSync(e,t?void 0:"utf8")},d=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{m(),e=f.normalize(e),c.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ft))throw e})),process.on("unhandledRejection",(function(e){throw e})),b=(e,t)=>{if(le())throw process.exitCode=e,t;(function(e){e instanceof ft||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=R()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(x||v)&&(v?I=self.location.href:"undefined"!=typeof document&&document.currentScript&&(I=document.currentScript.src),void 0!==n&&n&&(I=n),I=0!==I.indexOf("blob:")?I.substr(0,I.replace(/[?#].*/,"").lastIndexOf("/")+1):"",w||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},v&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&"undefined"==typeof performance&&(global.performance=D().performance);var N=console.log.bind(console),T=console.warn.bind(console);w&&(m(),N=e=>c.writeSync(1,e+"\n"),T=e=>c.writeSync(2,e+"\n"));var _,C=u.print||N,E=u.printErr||T;function $(e){$.shown||($.shown={}),$.shown[e]||($.shown[e]=1,E(e))}Object.assign(u,g),g=null,u.arguments&&(y=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(b=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(_=u.wasmBinary);var O=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&fe("no native wasm support detected");var L,z,P,B=!1;function W(e){return u["_"+e]}function V(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);J(e,t=dt(n),n)}return t},array:function(e){var n=dt(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=W(e),l=[],u=0;if(a)for(var p=0;p<a.length;p++){var h=i[r[p]];h?(0===u&&(u=pt()),l[p]=h(a[p])):l[p]=a[p]}var d,c=o.apply(null,l);return d=c,0!==u&&ht(u),c=function(e){return"string"===n?Z(e):"boolean"===n?Boolean(e):e}(d),c}function U(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var G,H,j,q,K,X="undefined"!=typeof TextDecoder?new U("utf8"):void 0;function Y(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&X)return X.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function Z(e,t){return e?Y(r(),e,t):""}function J(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,r(),t,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){G=e,u.HEAP8=H=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=q=new Int32Array(e),u.HEAPU8=j=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=K=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new U("utf-16le"),k&&(G=u.buffer);var te=u.INITIAL_MEMORY||16777216;if(k)L=u.wasmMemory,G=u.buffer;else if(u.wasmMemory)L=u.wasmMemory;else if(!((L=new WebAssembly.Memory({initial:te/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");L&&(G=L.buffer),te=G.byteLength,ee(G);var ne,re=[],ae=[],se=[],ie=[],oe=0;function le(){return O||oe>0}function ue(){!k&&xe(ae)}var pe,he=0,de=null,ce=null;function fe(e){k?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),B=!0,P=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function me(e){return e.startsWith("data:application/octet-stream;base64,")}function ge(e){return e.startsWith("file://")}function ye(e){try{if(e==pe&&_)return new Uint8Array(_);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}catch(e){fe(e)}}u.preloadedImages={},u.preloadedAudios={},me(pe="tfjs-backend-wasm-threaded-simd.wasm")||(pe=S(pe));var be={};function xe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?_e(n)():_e(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function ve(e){var t=pt(),n=e();return ht(t),n}function we(e){var t=Ie.pthreads[e];if(t){a()[e>>2]=0;var n=t.worker;Ie.returnWorkerToPool(n)}}function ke(e){!function(e,t){if(P=e,!t&&k)throw Se(e),"unwind";le()||k||Ie.terminateAllThreads(),function(e){P=e,le()||(Ie.terminateAllThreads(),u.onExit&&u.onExit(e),B=!0),b(e,new ft(e))}(e)}(e)}var Ie={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){k?Ie.initWorker():Ie.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)Ie.allocateUnusedWorker()},initWorker:function(){O=!1},pthreads:{},setExitStatus:function(e){P=e},terminateAllThreads:function(){for(var e in Ie.pthreads){var t=Ie.pthreads[e];t&&t.worker&&Ie.returnWorkerToPool(t.worker)}for(var n=0;n<Ie.unusedWorkers.length;++n)Ie.unusedWorkers[n].terminate();Ie.unusedWorkers=[]},returnWorkerToPool:function(e){Ie.runWithoutMainThreadQueuedCalls((function(){delete Ie.pthreads[e.pthread.threadInfoStruct],Ie.unusedWorkers.push(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(e),1),lt(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[ct>>2]=0;try{e()}finally{a()[ct>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in Ie.tlsInitFunctions)Ie.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,s=r.cmd;if(e.pthread&&(Ie.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=nt()){var i=Ie.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ie.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?rt():"spawnThread"===s?Ee(r):"cleanupThread"===s?we(r.thread):"killThread"===s?function(e){a()[e>>2]=0;var t=Ie.pthreads[e];delete Ie.pthreads[e],t.worker.terminate(),lt(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===s?function(e){Ie.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?C("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===s?u.onAbort&&u.onAbort(r.arg):E("worker sent an unknown command "+s),Ie.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},w&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:L,wasmModule:z})},allocateUnusedWorker:function(){var e=S("tfjs-backend-wasm-threaded-simd.worker.js");Ie.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ie.unusedWorkers.length&&(Ie.allocateUnusedWorker(),Ie.loadWasmModuleToWorker(Ie.unusedWorkers[0])),Ie.unusedWorkers.pop()}};function Se(e){if(k)return Ae(1,0,e);try{ke(e)}catch(e){!function(e){if(e instanceof ft||"unwind"==e)return P;b(1,e)}(e)}}u.establishStackSpace=function(){var e=nt(),t=a()[e+44>>2],n=a()[e+48>>2];ut(t,t-n),ht(t)};var Ne,Te=[];function _e(e){var t=Te[e];return t||(e>=Te.length&&(Te.length=e+1),Te[e]=t=ne.get(e)),t}function Ce(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return function(e){a()[tt()>>2]=e}(28),-1;n=Ne()}return a()[t>>2]=n/1e3|0,a()[t+4>>2]=n%1e3*1e3*1e3|0,0}function Ee(e){var t=Ie.getNewWorker();if(!t)return 6;Ie.runningWorkers.push(t);var n=Ie.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function $e(){return 2147483648}function Ae(e,t){var n=arguments.length-2,r=arguments;return ve((function(){for(var a=n,i=dt(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return it(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){return _e(e)(t)},Ne=w?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:k?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Fe=[];function Re(e){try{return L.grow(e-G.byteLength+65535>>>16),ee(L.buffer),1}catch(e){}}var De={inEventHandler:0,removeAllEventListeners:function(){for(var e=De.eventHandlers.length-1;e>=0;--e)De._removeHandler(e);De.eventHandlers=[],De.deferredCalls=[]},registerRemoveEventListeners:function(){De.removeEventListenersRegistered||(se.push(De.removeAllEventListeners),De.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in De.deferredCalls){var s=De.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}De.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),De.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<De.deferredCalls.length;++t)De.deferredCalls[t].targetFunction==e&&(De.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return De.inEventHandler&&De.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(De.canPerformEventHandlerRequests())for(var e=0;e<De.deferredCalls.length;++e){var t=De.deferredCalls[e];De.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e&&(!t||t==De.eventHandlers[n].eventTypeString)&&De._removeHandler(n--)},_removeHandler:function(e){var t=De.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),De.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++De.inEventHandler,De.currentEventHandler=e,De.runDeferredCalls(),e.handlerFunc(t),De.runDeferredCalls(),--De.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),De.eventHandlers.push(e),De.registerRemoveEventListeners();else for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e.target&&De.eventHandlers[n].eventTypeString==e.eventTypeString&&De._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){ve((function(){var i=dt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,ot(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ie.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Me(e,t,n,r){ve((function(){var s=dt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Qe(t);return J(e,n,t),n}(t)),a()[s>>2]=i,a()[s+4>>2]=n,a()[s+8>>2]=r,ot(e,657457152,0,i,s)}))}var Oe=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Le(e){return e=function(e){return e>2?Z(e):e}(e),Oe[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ze(e){return Le(e)}function Pe(e,t,n){var r=ze(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Me(e,t=t?Z(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Be(e,t,n){return k?Ae(2,1,e,t,n):Pe(e,t,n)}var We={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){We.lastError||(We.lastError=e)},getNewId:function(e){for(var t=We.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=Z(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?We.registerContext(n,t):0},registerContext:function(e,t){var n=Qe(8);a()[n+4>>2]=nt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),We.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&We.initExtensions(r),n},makeContextCurrent:function(e){return We.currentContext=We.contexts[e],u.ctx=qe=We.currentContext&&We.currentContext.GLctx,!(e&&!qe)},getContext:function(e){return We.contexts[e]},deleteContext:function(e){We.currentContext===We.contexts[e]&&(We.currentContext=null),"object"==typeof De&&De.removeAllHandlersOnTarget(We.contexts[e].GLctx.canvas),We.contexts[e]&&We.contexts[e].GLctx.canvas&&(We.contexts[e].GLctx.canvas.GLctxObject=void 0),et(We.contexts[e].handle),We.contexts[e]=null},initExtensions:function(e){if(e||(e=We.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Ve=["default","low-power","high-performance"],Ue={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ue.buffers[e];0===t||10===t?((1===e?C:E)(Y(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ue.varargs+=4,a()[Ue.varargs-4>>2]},getStr:function(e){return Z(e)},get64:function(e,t){return e}};function Ge(e){return k?Ae(3,1,e):0}function He(e,t,n,r,a){if(k)return Ae(4,1,e,t,n,r,a)}function je(e,t,n,s){if(k)return Ae(5,1,e,t,n,s);for(var i=0,o=0;o<n;o++){var l=a()[t>>2],u=a()[t+4>>2];t+=8;for(var p=0;p<u;p++)Ue.printChar(e,r()[l+p]);i+=u}return a()[s>>2]=i,0}Ie.init();var qe,Ke,Xe,Ye,Ze=[null,Se,Be,Ge,He,je],Je={__clock_gettime:function(e,t){return Ce(e,t)},__emscripten_init_main_thread_js:function(e){at(e,!v,1,!x),Ie.threadInit()},__emscripten_thread_cleanup:function(e){k?postMessage({cmd:"cleanupThread",thread:e}):we(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(k&&0===a.length)return st(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return k?(s.cmd="spawnThread",postMessage(s,a),0):Ee(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ie.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){fe("")},emscripten_check_blocking_allowed:function(){w||v||$("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:$e,emscripten_get_now:Ne,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e,t,t+n)},emscripten_num_logical_cores:function(){return w?M().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Fe.length=t;for(var r=n>>3,a=0;a<t;a++)Fe[a]=s()[r+a];return(e<0?be[-e-1]:Ze[e]).apply(null,Fe)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+100663296),Re(Math.min(n,Q(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return ze(e)?Pe(e,t,n):Be(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:Ve[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=ze(e);return!i||s.explicitSwapControl?0:We.createContext(i,s)}(e,t)},exit:ke,fd_close:Ge,fd_seek:He,fd_write:je,memory:L||u.wasmMemory,setTempRet0:function(e){}},Qe=(function(){var e={env:Je,wasi_snapshot_preview1:Je};function t(e,t){var n=e.exports;if(u.asm=n,function(e){Ie.tlsInitFunctions.push(e)}(u.asm.emscripten_tls_init),ne=u.asm.__indirect_function_table,function(e){ae.unshift(e)}(u.asm.__wasm_call_ctors),z=t,!k){var r=Ie.unusedWorkers.length;Ie.unusedWorkers.forEach((function(e){Ie.loadWasmModuleToWorker(e,(function(){--r||function(){if(he--,u.monitorRunDependencies&&u.monitorRunDependencies(he),0==he&&(null!==de&&(clearInterval(de),de=null),ce)){var e=ce;ce=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!_&&(x||v)){if("function"==typeof fetch&&!ge(pe))return fetch(pe,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+pe+"'";return e.arrayBuffer()})).catch((function(){return ye(pe)}));if(h)return new Promise((function(e,t){h(pe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ye(pe)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),fe(e)}))}if(k||(he++,u.monitorRunDependencies&&u.monitorRunDependencies(he)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}(_||"function"!=typeof WebAssembly.instantiateStreaming||me(pe)||ge(pe)||"function"!=typeof fetch?r(n):fetch(pe,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(Qe=u._malloc=u.asm.malloc).apply(null,arguments)}),et=u._free=function(){return(et=u._free=u.asm.free).apply(null,arguments)},tt=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},u.___errno_location=function(){return(tt=u.___errno_location=u.asm.__errno_location).apply(null,arguments)}),nt=u._pthread_self=function(){return(nt=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},rt=u._emscripten_main_thread_process_queued_calls=function(){return(rt=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},at=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u.__emscripten_thread_init=function(){return(at=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),st=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(st=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),it=u._emscripten_run_in_main_runtime_thread_js=function(){return(it=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},ot=u._emscripten_dispatch_to_thread_=function(){return(ot=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},lt=u.__emscripten_thread_free_data=function(){return(lt=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},ut=(u.__emscripten_thread_exit=function(){return(u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u._memalign=function(){return(u._memalign=u.asm.memalign).apply(null,arguments)},u._emscripten_stack_set_limits=function(){return(ut=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)}),pt=u.stackSave=function(){return(pt=u.stackSave=u.asm.stackSave).apply(null,arguments)},ht=u.stackRestore=function(){return(ht=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},dt=u.stackAlloc=function(){return(dt=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},ct=(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.__emscripten_allow_main_runtime_queued_calls=21672);function ft(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function mt(e){if(e=e||y,!(he>0)){if(k)return i(u),ue(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),re.unshift(e);var e;xe(re)})(),he>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Ke||(Ke=!0,u.calledRun=!0,!B&&(ue(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!k){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),ie.unshift(e);xe(ie)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?W(e):function(){return V(e,t,n,arguments)}},u.keepRuntimeAlive=le,u.PThread=Ie,u.PThread=Ie,u.wasmMemory=L,u.ExitStatus=ft,ce=function e(){Ke||mt(),Ke||(ce=e)},u.run=mt,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(mt(),l&&(Xe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Ye=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Ye=e}if(Xe){var gt=Ye._dispose;Ye._dispose=function(){gt(),Xe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Xe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),L=m(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'})),z=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,r=n})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,p,h,d=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y="";g?(y=m?F().dirname(y)+"/":__dirname+"/",h=()=>{p||(u=A(),p=F())},i=function(e,t){return h(),e=p.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{h(),e=p.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),n&&(y=n),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,x=s.print||console.log.bind(console),v=s.printErr||console.warn.bind(console);Object.assign(s,d),d=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(b=s.wasmBinary);s.noExitRuntime;"object"!=typeof WebAssembly&&H("no native wasm support detected");var w,k=!1;function I(e){return s["_"+e]}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,_,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=I(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var p=s[n[u]];p?(0===l&&(l=se()),o[u]=p(r[u])):o[u]=r[u]}var h,d=i.apply(null,o);return h=d,0!==l&&ie(l),d=function(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}(h),d}var N,T,_,C,E="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function $(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&E)return E.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?$(_,e,t):""}function D(e,t){return e%t>0&&(e+=t-e%t),e}function M(e){N=e,s.HEAP8=T=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=C=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var O,L=[],z=[],P=[];var B,W,V=0,U=null,G=null;function H(e){s.onAbort&&s.onAbort(e),v(e="Aborted("+e+")"),k=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function j(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function K(e){try{if(e==B&&b)return new Uint8Array(b);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z(n)():Z(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},j(B="tfjs-backend-wasm.wasm")||(W=B,B=s.locateFile?s.locateFile(W,y):y+W);var Y=[];function Z(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=O.get(e)),t}function J(){return 2147483648}function Q(e){try{return w.grow(e-N.byteLength+65535>>>16),M(w.buffer),1}catch(e){}}var ee,te,ne,re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=re.buffers[e];0===t||10===t?((1===e?x:v)($(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return re.varargs+=4,C[re.varargs-4>>2]},getStr:function(e){return R(e)},get64:function(e,t){return e}},ae={abort:function(){H("")},emscripten_get_heap_max:J,emscripten_memcpy_big:function(e,t,n){_.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=_.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Q(Math.min(n,D(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=C[t>>2],o=C[t+4>>2];t+=8;for(var l=0;l<o;l++)re.printChar(e,_[i+l]);a+=o}return C[r>>2]=a,0},setTempRet0:function(e){}},se=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n=e.exports;s.asm=n,M((w=s.asm.memory).buffer),O=s.asm.__indirect_function_table,function(e){z.unshift(e)}(s.asm.__wasm_call_ctors),function(){if(V--,s.monitorRunDependencies&&s.monitorRunDependencies(V),0==V&&(null!==U&&(clearInterval(U),U=null),G)){var e=G;G=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!b&&(f||m)){if("function"==typeof fetch&&!q(B))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return K(B)}));if(o)return new Promise((function(e,t){o(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(B)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),H(e)}))}if(V++,s.monitorRunDependencies&&s.monitorRunDependencies(V),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(b||"function"!=typeof WebAssembly.instantiateStreaming||j(B)||q(B)||"function"!=typeof fetch?a(n):fetch(B,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(se=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ie=s.stackRestore=function(){return(ie=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){ee||(ee=!0,s.calledRun=!0,!k&&(X(z),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),P.unshift(e);var e;X(P)}()))}e=e||c,V>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),L.unshift(e);var e;X(L)}(),V>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?I(e):function(){return S(e,t,n,arguments)}},G=function e(){ee||ue(),ee||(G=e)},s.run=ue,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ue(),a&&(te={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)ne=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var pe=ne._dispose;ne._dispose=function(){pe(),te.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),te.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),P=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},B=class{refCount(e){return W("refCount")}incRef(e){return W("incRef")}timerAvailable(){return!0}time(e){return W("time")}read(e){return W("read")}readSync(e){return W("readSync")}readToGPU(e,t){return W("readToGPU")}numDataIds(){return W("numDataIds")}disposeData(e,t){return W("disposeData")}write(e,t,n){return W("write")}move(e,t,n,r,a){return W("move")}memory(){return W("memory")}floatPrecision(){return W("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return W("dispose")}};function W(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,j(e,t,n)}function U(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,j(e,n,r),j(t,n,r)}function G(e,t,n){return Math.max(e,Math.min(t,n))}function H(e){return e%2==0?e:e+1}function j(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function K(e,t){let n=Math.random();return t*n+(1-n)*e}function X(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Z(e,t,n=""){Y(ne(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function J(e){Y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Q(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ye(e)&&!n)for(let r=0;r<e.length;++r)Q(e[r],t,n);else t.push(e);return t}function ee(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function te(e){return 0===e.length}function ne(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function re(e){return e%1==0}function ae(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function se(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ie(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return V(t),t}function oe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function le(e,t=e=>0,n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function ue(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function pe(e,t){let n=t.length;return Y((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Y(e.every((e=>re(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function he(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pe(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function de(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ce(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function fe(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function me(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ge(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ye(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function be(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function xe(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ve(e){return"string"==typeof e||e instanceof String}function we(e){return"boolean"==typeof e}function ke(e){return"number"==typeof e}function Ie(e){return Array.isArray(e)?Ie(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ke(e)?"float32":ve(e)?"string":we(e)?"bool":"float32"}function Se(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ne(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Te(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function _e(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=_e(e+t*o,i,n,r)}return a}function Ce(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return _e(0,e,t,n)}function Ee(e,t){let n=$e(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function $e(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ae(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ce(e,new Float32Array(n));if("int32"===t)return Ce(e,new Int32Array(n));if("bool"===t)return Ce(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Fe(e){e.forEach((t=>{Y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Re(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function De(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Me(e){return e&&e.then&&"function"==typeof e.then}var Oe="tfjsflags",Le=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ze,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Me(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Oe in e&&e[Oe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function ze(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Pe(){return We}var Be,We=null;function Ve(){if(null==Be){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Be=e}return Be}function Ue(e,t){let n=function(){let e=Ve();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ge="Abs",He="Acos",je="Acosh",qe="Add",Ke="AddN",Xe="All",Ye="Any",Ze="ArgMax",Je="ArgMin",Qe="Asin",et="Asinh",tt="Atan",nt="Atanh",rt="Atan2",at="AvgPool",st="AvgPoolGrad",it="AvgPool3D",ot="AvgPool3DGrad",lt="BatchMatMul",ut="BatchToSpaceND",pt="Bincount",ht="BroadcastTo",dt="BroadcastArgs",ct="Cast",ft="Ceil",mt="ClipByValue",gt="Complex",yt="ComplexAbs",bt="Concat",xt="Conv2D",vt="Conv2DBackpropFilter",wt="Conv2DBackpropInput",kt="Conv3D",It="Conv3DBackpropFilterV2",St="Conv3DBackpropInputV2",Nt="Cos",Tt="Cosh",_t="Cumprod",Ct="Cumsum",Et="CropAndResize",$t="DenseBincount",At="DepthToSpace",Ft="DepthwiseConv2dNative",Rt="DepthwiseConv2dNativeBackpropFilter",Dt="DepthwiseConv2dNativeBackpropInput",Mt="Diag",Ot="Dilation2D",Lt="Dilation2DBackpropInput",zt="Dilation2DBackpropFilter",Pt="RealDiv",Bt="Einsum",Wt="Elu",Vt="EluGrad",Ut="Erf",Gt="Equal",Ht="Exp",jt="ExpandDims",qt="Expm1",Kt="FFT",Xt="Fill",Yt="FlipLeftRight",Zt="Floor",Jt="FloorDiv",Qt="FusedBatchNorm",en="GatherV2",tn="GatherNd",nn="Greater",rn="GreaterEqual",an="Identity",sn="IFFT",on="Imag",ln="IsFinite",un="IsInf",pn="IsNan",hn="LeakyRelu",dn="Less",cn="LessEqual",fn="LinSpace",mn="Log",gn="Log1p",yn="LogicalAnd",bn="LogicalNot",xn="LogicalOr",vn="LogicalXor",wn="LogSoftmax",kn="LowerBound",In="LRN",Sn="LRNGrad",Nn="Max",Tn="Maximum",_n="MaxPool",Cn="MaxPoolGrad",En="MaxPool3D",$n="MaxPool3DGrad",An="MaxPoolWithArgmax",Fn="Mean",Rn="Min",Dn="Minimum",Mn="MirrorPad",On="Mod",Ln="Multinomial",zn="Multiply",Pn="Neg",Bn="NotEqual",Wn="NonMaxSuppressionV3",Vn="NonMaxSuppressionV4",Un="NonMaxSuppressionV5",Gn="OnesLike",Hn="OneHot",jn="Pack",qn="PadV2",Kn="Pool",Xn="Pow",Yn="Prelu",Zn="Prod",Jn="Range",Qn="Real",er="Reciprocal",tr="Relu",nr="Reshape",rr="ResizeNearestNeighbor",ar="ResizeNearestNeighborGrad",sr="ResizeBilinear",ir="ResizeBilinearGrad",or="Relu6",lr="Reverse",ur="Round",pr="Rsqrt",hr="ScatterNd",dr="SearchSorted",cr="Select",fr="Selu",mr="Slice",gr="Sin",yr="Sinh",br="Sign",xr="Sigmoid",vr="Softplus",wr="Sqrt",kr="Sum",Ir="SpaceToBatchND",Sr="SplitV",Nr="Softmax",Tr="SparseFillEmptyRows",_r="SparseReshape",Cr="SparseSegmentMean",Er="SparseSegmentSum",$r="SparseToDense",Ar="SquaredDifference",Fr="Square",Rr="StridedSlice",Dr="StringNGrams",Mr="StringSplit",Or="StringToHashBucketFast",Lr="Sub",zr="Tan",Pr="Tanh",Br="Tile",Wr="TopK",Vr="Transform",Ur="Transpose",Gr="Unique",Hr="Unpack",jr="UnsortedSegmentSum",qr="UpperBound",Kr="ZerosLike",Xr="Step",Yr="FromPixels",Zr="RotateWithOffset",Jr="_FusedMatMul",Qr="FusedConv2D",ea="FusedDepthwiseConv2D";function ta(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(...e)}function na(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.log(...e)}var ra=Ue("kernelRegistry",(()=>new Map)),aa=Ue("gradRegistry",(()=>new Map));function sa(e,t){let n=ca(e,t);return ra.get(n)}function ia(e){return aa.get(e)}function oa(e){let t=ra.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function la(e){let{kernelName:t,backendName:n}=e,r=ca(t,n);ra.has(r)&&ta(`The kernel '${t}' for backend '${n}' is already registered`),ra.set(r,e)}function ua(e){let{kernelName:t}=e;aa.has(t)&&Pe().getBool("DEBUG")&&ta(`Overriding the gradient for '${t}'`),aa.set(t,e)}function pa(e,t){let n=ca(e,t);if(!ra.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ra.delete(n)}function ha(e){if(!aa.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);aa.delete(e)}function da(e,t){oa(e).forEach((e=>{la(Object.assign({},e,{backendName:t}))}))}function ca(e,t){return`${t}_${e}`}var fa={};g(fa,{arraysEqual:()=>ne,assert:()=>Y,assertNonNegativeIntegerDimensions:()=>Fe,assertNonNull:()=>J,assertShapesMatch:()=>Z,bytesFromStringArray:()=>xe,bytesPerElement:()=>be,checkConversionForErrors:()=>fe,clamp:()=>G,computeStrides:()=>Te,createScalarValue:()=>Ea,createShuffledIndices:()=>ie,decodeString:()=>Da,distSquared:()=>X,encodeString:()=>Ra,fetch:()=>Fa,fingerPrint64:()=>Ca,flatten:()=>Q,getArrayFromDType:()=>ce,getTypedArrayFromDType:()=>de,hasEncodingLoss:()=>ge,hexToLong:()=>ya,indexToLoc:()=>De,inferDtype:()=>Ie,inferFromImplicitShape:()=>ue,isBoolean:()=>we,isFunction:()=>Se,isInt:()=>re,isNumber:()=>ke,isPromise:()=>Me,isScalarShape:()=>te,isString:()=>ve,isTypedArray:()=>ye,isValidDtype:()=>me,locToIndex:()=>Re,makeOnesTypedArray:()=>Ee,makeZerosNestedTypedArray:()=>Ae,makeZerosTypedArray:()=>$e,nearestDivisor:()=>Ne,nearestLargerEven:()=>H,now:()=>Aa,parseAxisParam:()=>pe,randUniform:()=>K,repeatedTry:()=>le,rightPad:()=>oe,shuffle:()=>V,shuffleCombo:()=>U,sizeFromShape:()=>ee,sizeToSquarishShape:()=>se,squeezeShape:()=>he,sum:()=>q,swap:()=>j,tanh:()=>ae,toNestedArray:()=>Ce,toTypedArray:()=>$a});var ma=y(b()),ga=ma.default||ma;function ya(e){return ga.fromString(e,!0,16)}var ba=ya("c3a5c85c97cb3127"),xa=ya("b492b66fbe98f273"),va=ya("9ae16a3b2f90404f");function wa(e){return e.xor(e.shru(47))}function ka(e,t,n){let r=e.slice(t,t+n);return ga.fromBytes(Array.from(r),!0,!0)}function Ia(e,t){return ka(e,t,8)}function Sa(e,t){return ka(e,t,4)}function Na(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ta(e,t,n=ya("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function _a(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Na(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(Na(a,44)),[a.add(r),s.add(i)]}(Ia(e,t),Ia(e,t+8),Ia(e,t+16),Ia(e,t+24),n,r)}function Ca(e,t=e.length){let n=ga.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=va.add(2*t),r=Ia(e,0).add(va),a=Ia(e,t-8);return Ta(Na(a,37).mul(n).add(r),Na(r,25).add(a).mul(n),n)}if(t>=4){let n=va.add(2*t);return Ta(Sa(e,0).shl(3).add(t),Sa(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return wa(va.mul(n).xor(ba.mul(r))).mul(va)}return va}(e,t):function(e,t=e.length){let n=va.add(2*t),r=Ia(e,0).mul(xa),a=Ia(e,8),s=Ia(e,t-8).mul(n),i=Ia(e,t-16).mul(va);return Ta(Na(r.add(a),43).add(Na(s,30)).add(i),r.add(Na(a.add(va),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=va.add(2*t),r=Ia(e,0).mul(va),a=Ia(e,8),s=Ia(e,t-8).mul(n),i=Ia(e,t-16).mul(va),o=Na(r.add(a),43).add(Na(s,30)).add(i),l=Ta(o,r.add(Na(a.add(va),18)).add(s),n),u=Ia(e,16).mul(n),p=Ia(e,24),h=o.add(Ia(e,t-32)).mul(n),d=l.add(Ia(e,t-24)).mul(n);return Ta(Na(u.add(p),43).add(Na(h,30)).add(d),u.add(Na(p.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(xa).add(113),s=wa(a.mul(va).add(113)).mul(va),i=[ga.UZERO,ga.UZERO],o=[ga.UZERO,ga.UZERO];r=r.mul(va).add(Ia(e,0));let l=0,u=64*(t-1>>6),p=u+(t-1&63)-63;do{r=Na(r.add(a).add(i[0]).add(Ia(e,l+8)),37).mul(xa),a=Na(a.add(i[1]).add(Ia(e,l+48)),42).mul(xa),r=r.xor(o[1]),a=a.add(i[0]).add(Ia(e,l+40)),s=Na(s.add(o[0]),33).mul(xa),i=_a(e,l,i[1].mul(xa),r.add(o[0])),o=_a(e,l+32,s.add(o[1]),a.add(Ia(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=xa.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Na(r.add(a).add(i[0]).add(Ia(e,l+8)),37).mul(h),a=Na(a.add(i[1]).add(Ia(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Ia(e,l+40))),s=Na(s.add(o[0]),33).mul(h),i=_a(e,l,i[1].mul(h),r.add(o[0])),o=_a(e,l+32,s.add(o[1]),a.add(Ia(e,l+16))),[s,r]=[r,s],Ta(Ta(i[0],o[0],h).add(wa(a).mul(ba)).add(s),Ta(i[1],o[1],h).add(r),h)}function Ea(e,t){return"string"===t?Ra(e):$a([e],t)}function $a(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Q(e)),Pe().getBool("DEBUG")&&fe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Aa(){return Pe().platform.now()}function Fa(e,t){return Pe().platform.fetch(e,t)}function Ra(e,t="utf-8"){return t=t||"utf-8",Pe().platform.encode(e,t)}function Da(e,t="utf-8"){return t=t||"utf-8",Pe().platform.decode(e,t)}var Ma=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new La)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Aa();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Aa()-i})}if(Pe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{Oa(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function Oa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var La=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?oe(`${r}ms`,9):r.error,o=oe(e,25),l=t.rank,u=t.size,p=oe(t.shape.toString(),14),h="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${p}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function za(e,t,n,r){let a=Te(t),s=function(e,t,n,r){let a=ee(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Va(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Pa(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Wa(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Pa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ve(e)?`'${e}'`:"bool"===n?Ba(e):parseFloat(e.toFixed(7)).toString(),oe(r,t)}function Ba(e){return 0===e?"false":"true"}function Wa(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Pa(Va(e)[0],0,n)]}return"bool"===n?[Ba(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Va(r),s=Va(s)),["["+r.map(((e,t)=>Pa(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Pa(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Va(e):Array.from(e)).map(((e,t)=>Pa(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),p=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){let r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),u,n,p,a,!1))}d.push("...");for(let t=o-3;t<o;t++){let r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),u,n,p,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),u,n,p,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Va(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ua=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ee(e),null!=n){let e=n.length;Y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ce(t,this.size),this.strides=Te(e)}set(e,...t){0===t.length&&(t=[0]),Y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ga().makeTensor(this.values,this.shape,this.dtype)}},Ga=null,Ha=null;var ja=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ee(e),this.strides=Te(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Ha.buffer(this.shape,this.dtype,e)}bufferSync(){return Ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ce(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ce(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Ga().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ga().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ga().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Da(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ga().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ga().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ha.print(this,e)}clone(){return this.throwIfDisposed(),Ha.clone(this)}toString(e=!1){return za(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ha.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ga().makeVariable(this,e,t,n)}};function qa(){return Ue("Tensor",(()=>ja))}Object.defineProperty(ja,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),qa();var Ka=class extends ja{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ne(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ga().disposeTensor(this),this.dataId=e.dataId,Ga().incRef(this,null)}dispose(){Ga().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ka,Symbol.hasInstance,{value:e=>e instanceof ja&&null!=e.assign&&e.assign instanceof Function});var Xa,Ya,Za,Ja,Qa,es={};g(es,{assertTypesMatch:()=>ss,getTensorsInContainer:()=>os,isTensorInList:()=>is,makeTypesMatch:()=>as}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Xa||(Xa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ya||(Ya={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Za||(Za={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ja||(Ja={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Qa||(Qa={}));var ts={float32:Ja,int32:Ya,bool:Za,complex64:Qa};function ns(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ts[e][t]}function rs(e){return ns(e,"int32")}function as(e,t){if(e.dtype===t.dtype)return[e,t];let n=ns(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ss(e,t){Y(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function is(e,t){return t.some((t=>t.id===e.id))}function os(e){let t=[];return ls(e,t,new Set),t}function ls(e,t,n){if(null==e)return;if(e instanceof ja)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),ls(a,t,n))}}function us(e){return null!=e.kernelName}var ps=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},hs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ps}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ta(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ma(this.backendInstance),!0}setupRegisteredKernels(){oa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){oa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof B||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ta(`Initialization of backend ${e} failed`),ta(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ta(`Initialization of backend ${e} failed`),ta(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return hs.nextTensorId++}nextVariableId(){return hs.nextVariableId++}clone(e){let t=cs.runKernel(an,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return cs.runKernel(ct,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==sa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=us(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(us(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=sa(t,this.backendName);Y(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:p,attrs:h}=e,d=us(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,p,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,p,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=ia(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ve(e[0])&&(a=e.map((e=>Ra(e))));let s=r.write(a,t,n),i=new ja(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=xe(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new ja(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Ka(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*be(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ka||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*be(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ia(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=$e(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=os(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(Y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Y(a instanceof ja,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Ee(ee(e),"float32");return cs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ne(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),fs);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Y(Se(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{Y(t.every((e=>e instanceof ja)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Y(n.value instanceof ja,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Y(Se(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Y(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Y(s.every((e=>e instanceof ja)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Aa(),n=await this.backend.time(e);return n.wallMs=Aa()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ps;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function ds(){let e=Ve();if(null==e._tfengine){let t=new Le(e);e._tfengine=new hs(t)}return function(e){We=e}(e._tfengine.ENV),function(e){Ga=e}((()=>e._tfengine)),e._tfengine}hs.nextTensorId=0,hs.nextVariableId=0;var cs=ds();function fs(e,t){let n={a:e,b:t};return cs.runKernel(qe,n)}var ms,gs={};function ys(e){ms=e}function bs(e){if(void 0!==ms)return ms;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function xs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}g(gs,{isBrowser:()=>xs,isMobile:()=>bs,mockIsMobile:()=>ys});var vs=Pe();function ws(e,t){let n=e;if(ye(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ye(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Pe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ks(e,r,[]),r}function ks(e,t,n){if(n=n||[],!Array.isArray(e)&&!ye(e))return void Y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)ks(e[t],r,n.concat(t))}function Is(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ss(e,t,n,r="numeric"){if(e instanceof ja)return Is(r,e.dtype,t,n),e;let a=Ie(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Is(r,a,t,n),null==e||!ye(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=ws(e,a);!ye(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?$a(e,a):Q(e,[],!0);return cs.makeTensor(i,s,a)}function Ns(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ss(e,`${t}[${a}]`,n,r)))}vs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),vs.registerFlag("IS_BROWSER",(()=>xs())),vs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),vs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),vs.registerFlag("PROD",(()=>!1)),vs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>vs.getBool("DEBUG"))),vs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),vs.registerFlag("IS_TEST",(()=>!1)),vs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),vs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),vs.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var Ts="__op";function _s(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ts;let a=(...e)=>{cs.startScope(n);try{let t=r(...e);return Me(t)&&console.error("Cannot return a Promise inside of tidy."),cs.endScope(t),t}catch(e){throw cs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Cs=_s({complex_:function(e,t){let n=Ss(e,"real","complex"),r=Ss(t,"imag","complex");Z(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return cs.runKernel(gt,a)}});function Es(e,t,n,r){if(null==r&&(r=Ie(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ye(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Fe(t);let e=ee(t),r=ee(n);Y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==ee(t.slice(e));Y(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!ye(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?$a(e,r):Q(e,[],!0),cs.makeTensor(e,t,r)}function $s(e,t,n){return Es(e,t,ws(e,n),n)}var As={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Fs(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ds(await Promise.all(r)),specs:n}}function Rs(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=ee(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=As[r.dtype],p=e.slice(a,a+u*l),h="uint8"===r.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Vs()),t=n(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=ee(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=As[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=$s(e,l,"float32"),o=$s(n,l,"float32");r[i]=Cs(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=$s(t,l,o))}return r}function Ds(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Ms="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Os(e){return Ms?Buffer.byteLength(e):new Blob([e]).size}function Ls(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function zs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Ps(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Bs(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Ws(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Os(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Os(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Vs(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Us=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Us.instance&&(Us.instance=new Us),Us.instance}static registerSaveRouter(e){Us.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Us.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Us.getHandlers(e,"save")}static getLoadHandlers(e,t){return Us.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Us.getInstance().loadRouters:Us.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},Gs=e=>Us.registerSaveRouter(e),Hs=e=>Us.registerLoadRouter(e),js=e=>Us.getSaveHandlers(e),qs=(e,t)=>Us.getLoadHandlers(e,t),Ks="tensorflowjs",Xs="models_store",Ys="model_info_store";function Zs(){if(!Pe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Js(e){let t=e.result;t.createObjectStore(Xs,{keyPath:"modelPath"}),t.createObjectStore(Ys,{keyPath:"modelPath"})}var Qs=class{constructor(e){if(this.indexedDB=Zs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Ks,1);r.onupgradeneeded=()=>Js(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Xs,"readonly"),r=t.objectStore(Xs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Ws(t),i=a.transaction(Ys,"readwrite"),o=i.objectStore(Ys),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Xs,"readwrite");let l=r.objectStore(Xs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Ys);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Qs.URL_SCHEME="indexeddb://";var ei=e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qs.URL_SCHEME)?function(e){return new Qs(e)}(e.slice(Qs.URL_SCHEME.length)):null;Us.registerSaveRouter(ei),Us.registerLoadRouter(ei);var ti="/",ni="tensorflowjs_models",ri="info",ai="model_topology",si="weight_specs",ii="weight_data",oi="model_metadata";function li(e){return{info:[ni,e,ri].join(ti),topology:[ni,e,ai].join(ti),weightSpecs:[ni,e,si].join(ti),weightData:[ni,e,ii].join(ti),modelMetadata:[ni,e,oi].join(ti)}}function ui(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function pi(e){let t=e.split(ti);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ti)}var hi=class{constructor(e){if(!Pe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=li(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ws(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ms)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ui(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ms){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};hi.URL_SCHEME="localstorage://";var di=e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hi.URL_SCHEME)?function(e){return new hi(e)}(e.slice(hi.URL_SCHEME.length)):null;Us.registerSaveRouter(di),Us.registerLoadRouter(di);var ci="://",fi=class{constructor(){this.managers={}}static getInstance(){return null==fi.instance&&(fi.instance=new fi),fi.instance}static registerManager(e,t){Y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ci)&&(e=e.slice(0,e.indexOf(ci))),Y(e.length>0,(()=>"scheme must not be an empty string."));let n=fi.getInstance();Y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=fi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(fi.getInstance().managers)}};function mi(e){if(-1===e.indexOf(ci))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${fi.getSchemes().join(",")}`);return{scheme:e.split(ci)[0],path:e.split(ci)[1]}}async function gi(e,t,n=!1){Y(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Us.getLoadHandlers(e);Y(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Y(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Us.getSaveHandlers(t);Y(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Y(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=mi(e).scheme,l=mi(e).path,u=o===mi(e).scheme,p=await a.load();n&&u&&await fi.getManager(o).removeModel(l);let h=await i.save(p);return n&&!u&&await fi.getManager(o).removeModel(l),h.modelArtifactsInfo}async function yi(){let e=fi.getSchemes(),t={};for(let n of e){let e=await fi.getManager(n).listModels();for(let r in e){t[n+ci+r]=e[r]}}return t}async function bi(e){let t=mi(e);return fi.getManager(t.scheme).removeModel(t.path)}async function xi(e,t){return gi(e,t,!1)}async function vi(e,t){return gi(e,t,!0)}if(Pe().get("IS_BROWSER")){Pe().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{fi.registerManager(hi.URL_SCHEME,new class{constructor(){Y(Pe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Y("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=ni+ti,n=ti+ri;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[pi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=li(e=function(e){return e.startsWith(hi.URL_SCHEME)?e.slice(hi.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return ui(t),n}})}catch(e){}try{fi.registerManager(Qs.URL_SCHEME,new class{constructor(){this.indexedDB=Zs()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Ks,1);n.onupgradeneeded=()=>Js(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Ys,"readonly"),s=a.objectStore(Ys).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Qs.URL_SCHEME)?e.slice(Qs.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Ks,1);r.onupgradeneeded=()=>Js(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Ys,"readwrite"),o=i.objectStore(Ys),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Xs,"readwrite");let r=a.objectStore(Xs).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var wi,ki=()=>x();function Ii(e,t="float32",n){return t=t||"float32",Fe(e),new Ua(e,t,n)}Pe().get("IS_NODE")&&!Pe().get("IS_BROWSER")&&Pe().setPlatform("node",new class{constructor(){this.util=v(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Pe().global.fetch?Pe().global.fetch(e,t):(null==wi&&(wi=ki()),wi(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Si=_s({cast_:function(e,t){let n=Ss(e,"x","cast");if(!me(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return cs.runKernel(ct,r,a)}});var Ni=_s({clone_:function(e){let t={x:Ss(e,"x","clone","string_or_numeric")};return cs.runKernel(an,t)}});function Ti(e,t=!1){console.log(e.toString(t))}ds(),function(e){Ha=e}({buffer:Ii,cast:Si,clone:Ni,print:Ti});var _i={};g(_i,{browserFiles:()=>Ai,browserHTTPRequest:()=>Bi,concatenateArrayBuffers:()=>Ls,copyModel:()=>xi,decodeWeights:()=>Rs,encodeWeights:()=>Fs,fromMemory:()=>Gi,fromMemorySync:()=>Hi,getLoadHandlers:()=>qs,getModelArtifactsForJSON:()=>Bs,getModelArtifactsInfoForJSON:()=>Ws,getSaveHandlers:()=>js,http:()=>Pi,isHTTPScheme:()=>Li,listModels:()=>yi,loadWeights:()=>Di,moveModel:()=>vi,registerLoadRouter:()=>Hs,registerSaveRouter:()=>Gs,removeModel:()=>bi,weightsLoaderFactory:()=>Mi,withSaveHandler:()=>ji,withSaveHandlerSync:()=>qi});function Ci(e){return new Promise((e=>setTimeout(e))).then(e)}var Ei=class{constructor(e){if(!Pe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ei.URL_SCHEME)&&(e=e.slice(Ei.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Ps(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ci((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ci((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ws(e)}}}};Ei.URL_SCHEME="downloads://";var $i=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Bs(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ls(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>zs(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=zs(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function Ai(e){return new $i(e)}function Fi(e,t,n,r){var a;Y(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ri(e,t){null==t&&(t={});let n=null==t.fetchFunc?Pe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Fi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Fi(a,t.onProgress,.5,1)}async function Di(e,t="",n,r){return Mi((e=>Ri(e,{requestInit:r})))(e,t,n)}function Mi(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=As[l]*ee(e.shape),p=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(p(),i[n]=!0)})):p(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let p=await e(u),h={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=p[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(p[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Rs(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)h[e]=t[e]})),d+=n})),h}}Us.registerSaveRouter((e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ei.URL_SCHEME)?function(e="model"){return new Ei(e)}(e.slice(Ei.URL_SCHEME.length)):null));var Oi=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Y("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Pe().platform.fetch,Y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Ps(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ws(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Bs(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Ls(await Ri(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Li(e){return null!=e.match(Oi.URL_SCHEME_REGEX)}Oi.URL_SCHEME_REGEX=/^https?:\/\//;var zi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Li(e))):Li(e),n)return Pi(e,t)}return null};function Pi(e,t){return new Oi(e,t)}function Bi(e,t){return Pi(e,t)}Us.registerSaveRouter(zi),Us.registerLoadRouter(zi);var Wi=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Vi=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Ui=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function Gi(e,t,n,r){return new Ui(Hi(...arguments))}function Hi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Wi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ji(e){return new Vi(e)}function qi(e){return new Vi(e)}var Ki={};g(Ki,{confusionMatrix:()=>Io});var Xi=_s({matMul_:function(e,t,n=!1,r=!1){let a=Ss(e,"a","matMul"),s=Ss(t,"b","matMul");[a,s]=as(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return cs.runKernel(lt,i,o)}});var Yi=_s({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Ss(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return cs.runKernel(Hn,a,s)}});function Zi(){Pe().set("PROD",!0)}function Ji(){Pe().set("DEBUG",!0)}function Qi(){Pe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function eo(e){Pe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function to(){cs.disposeVariables()}function no(){return cs}function ro(){return cs.memory()}function ao(e){return cs.profile(e)}function so(e,t){return cs.tidy(e,t)}function io(e){os(e).forEach((e=>e.dispose()))}function oo(e){return cs.keep(e)}function lo(e){return cs.time(e)}function uo(e){return cs.setBackend(e)}function po(){return cs.ready()}function ho(){return cs.backendName}function co(e){cs.removeBackend(e)}function fo(e){return cs.findBackend(e)}function mo(e){return cs.findBackendFactory(e)}function go(e,t,n=1){return cs.registerBackend(e,t,n)}function yo(){return cs.backend}function bo(e,t){Pe().setPlatform(e,t)}!function(e){0}(eo);var xo=_s({imag_:function(e){let t={input:Ss(e,"input","imag")};return cs.runKernel(on,t)}});var vo=_s({neg_:function(e){let t={x:Ss(e,"x","neg")};return cs.runKernel(Pn,t)}});var wo=_s({real_:function(e){let t={input:Ss(e,"input","real")};return cs.runKernel(Qn,t)}});var ko=_s({transpose_:function(e,t,n){let r=Ss(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Y(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Y(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?so((()=>{let e=wo(r),t=xo(r);return e=cs.runKernel(Ur,{x:e},s),t=cs.runKernel(Ur,{x:t},s),n&&(t=vo(t)),Cs(e,t)})):cs.runKernel(Ur,a,s)}});var Io=_s({confusionMatrix_:function(e,t,n){let r=Ss(e,"labels","confusionMatrix"),a=Ss(t,"predictions","confusionMatrix");Y(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Y(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Y(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Y(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Y(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Yi(Si(r,"int32"),n),i=Yi(Si(a,"int32"),n),o=ko(s),l=Xi(o,i);return Si(l,"int32")}}),So={};function No(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function To(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function _o(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}g(So,{assertAndGetBroadcastShape:()=>_o,getBroadcastDims:()=>No,getReductionAxes:()=>To});var Co,Eo={};function $o(e,t,n){if(J(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=ws(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}function Ao(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=sa(Yr,cs.backendName)){let n={pixels:e},r={numChannels:t};return cs.runKernel(Yr,n,r)}let l,u,[p,h]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,p,h).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Co)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Co=new OffscreenCanvas(1,1).getContext("2d")}else Co=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Co.canvas.width=p,Co.canvas.height=h,Co.drawImage(e,0,0,p,h),l=Co.getImageData(0,0,p,h).data}if(4===t)u=new Int32Array(l);else{let e=p*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return $o(u,[h,p,t],"int32")}function Fo(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Ro(e,t=3){let n=null;if(Pe().getBool("WRAP_TO_IMAGEBITMAP")&&Fo(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ao(n,t)}async function Do(e,t){let n=Ss(e,"img","toPixels");if(!(e instanceof ja)){let e=n;n=Si(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}g(Eo,{fromPixels:()=>Mo,fromPixelsAsync:()=>Ro,toPixels:()=>Do});var Mo=_s({fromPixels_:Ao}),Oo={};function Lo(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ee(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let p=[...Te(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,p]}g(Oo,{prepareAndValidate:()=>Lo});var zo={};function Po(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Bo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Po(n,t,e)}function Wo(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:ee(t.shape)/o,sliceSize:i,strides:[...Te(n.slice(0,a)),1],outputSize:ee(n)}}g(zo,{calculateShapes:()=>Wo,validateInput:()=>Bo,validateUpdateShape:()=>Po});var Vo={};g(Vo,{assertParamsValid:()=>Ho,computeFlatOffset:()=>al,computeOutShape:()=>qo,getNormalizedAxes:()=>Zo,isSliceContinous:()=>rl,maskToAxes:()=>jo,parseSliceParams:()=>sl,sliceInfo:()=>il,startForAxis:()=>tl,startIndicesWithElidedDims:()=>Jo,stopForAxis:()=>nl,stopIndicesWithElidedDims:()=>Qo,stridesForAxis:()=>el,stridesWithElidedDims:()=>Ko});var Uo=-2,Go=-1;function Ho(e,t,n){let r=e.shape.length;Y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Y(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function jo(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function qo(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ko(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Xo(e,t,n){return n<=e?n:n-(t-1)}function Yo(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Zo(e,t,n,r,a,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;p=Jo(i,l,u,r,e),h=Qo(o,l,u,a,e),d=Ko(s,l,u,e)}else for(let t=0;t<u;t++)p[t]=tl(i,r,s,e,t,l),h[t]=nl(o,a,s,e,t,l),d[t]=el(s,t,l);return{begin:p,end:h,strides:d}}function Jo(e,t,n,r,a){let s=[...a],i=Yo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Xo(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Qo(e,t,n,r,a){let s=[...a],i=Yo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Xo(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=G(0,s[e],a[e])}return s}function el(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function tl(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=G(0,i,l-1),i}function nl(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?G(0,i,l):G(-1,i,l-1),i}function rl(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function al(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function sl(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function il(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)p&&!!(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Uo),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Go),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=ol(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=ol(d.end[t],1,d.strides[t],r,a,s);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Uo&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Uo)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function ol(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var ll={};g(ll,{Serializable:()=>ul,SerializationMap:()=>pl,registerClass:()=>hl});var ul=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},pl=class{constructor(){this.classNameMap={}}static getMap(){return null==pl.instance&&(pl.instance=new pl),pl.instance}static register(e){pl.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function hl(e){Y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Y("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),pl.register(e)}var dl={};g(dl,{TEST_EPSILON_FLOAT16:()=>fl,encodeStrings:()=>Sl,expectArrayBuffersEqual:()=>Il,expectArraysClose:()=>ml,expectArraysEqual:()=>xl,expectNumbersClose:()=>vl,expectPromiseToFail:()=>bl,expectValuesInRange:()=>kl,testEpsilon:()=>gl});var cl=.001,fl=.1;function ml(e,t,n){return null==n&&(n=gl()),yl(e,t,((e,t)=>wl(e,t,n)))}function gl(){return 32===cs.backend.floatPrecision()?cl:fl}function yl(e,t,n){let r=!0;if((ye(e)||ye(t))&&(r=!1),ye(e)&&ye(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=ws(e),r=ws(t);if(!ne(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ye(e)?e:Q(e),s=ye(t)?t:Q(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function bl(e,t){e().then((()=>t.fail()),(()=>t()))}function xl(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ve(e)||ve(e[0])||ve(t)||ve(t[0])?yl(e,n,((e,t)=>e==t)):yl(e,t,((e,t)=>wl(e,t,0)))}function vl(e,t,n){if(null==n&&(n=gl()),!wl(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function wl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function kl(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Il(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Sl(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Sl(n):e[t]=Ra(n)}return e}var Nl="3.19.0";var Tl=_s({add_:function(e,t){let n=Ss(e,"a","add"),r=Ss(t,"b","add");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(qe,a)}});var _l=_s({floorDiv_:function(e,t){let n=Ss(e,"a","floorDiv"),r=Ss(t,"b","floorDiv");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(Jt,a)}});var Cl=_s({div_:function(e,t){let n=Ss(e,"a","div"),r=Ss(t,"b","div");if([n,r]=as(n,r),"int32"===n.dtype&&"int32"===r.dtype)return _l(n,r);let a={a:n,b:r};return cs.runKernel(Pt,a,{})}});var El=_s({mul_:function(e,t){let n=Ss(e,"a","mul"),r=Ss(t,"b","mul");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(zn,a)}});var $l=_s({abs_:function(e){let t=Ss(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return cs.runKernel(yt,e)}{let e={x:t};return cs.runKernel(Ge,e)}}});var Al=_s({acos_:function(e){let t={x:Ss(e,"x","acos")};return cs.runKernel(He,t)}});var Fl=_s({acosh_:function(e){let t={x:Ss(e,"x","acosh")};return cs.runKernel(je,t)}});var Rl=_s({addN_:function(e){Y(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Y(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Ss(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ne(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return cs.runKernel(Ke,r)}});var Dl=_s({all_:function(e,t=null,n=!1){let r={x:Ss(e,"x","all","bool")},a={axis:t,keepDims:n};return cs.runKernel(Xe,r,a)}});var Ml=_s({any_:function(e,t=null,n=!1){let r={x:Ss(e,"x","any","bool")},a={axis:t,keepDims:n};return cs.runKernel(Ye,r,a)}});var Ol=_s({argMax_:function(e,t=0){let n={x:Ss(e,"x","argMax")},r={axis:t};return cs.runKernel(Ze,n,r)}});var Ll=_s({argMin_:function(e,t=0){let n={x:Ss(e,"x","argMin")},r={axis:t};return cs.runKernel(Je,n,r)}});var zl=_s({asin_:function(e){let t={x:Ss(e,"x","asin")};return cs.runKernel(Qe,t)}});var Pl=_s({asinh_:function(e){let t={x:Ss(e,"x","asinh")};return cs.runKernel(et,t)}});var Bl=_s({atan_:function(e){let t={x:Ss(e,"x","atan")};return cs.runKernel(tt,t)}});var Wl=_s({atan2_:function(e,t){let n=Ss(e,"a","atan2"),r=Ss(t,"b","atan2");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(rt,a)}});var Vl=_s({atanh_:function(e){let t={x:Ss(e,"x","atanh")};return cs.runKernel(nt,t)}});function Ul(e,t,n,r,a="NHWC",s){return jl(e,[...t,e[3]],n,s,r,null,null,tu(a))}function Gl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Xl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return jl(e,o,n,r,a,s,!1,i)}function Hl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,p,h]=Yl(t);if("NDHWC"===i)l="channelsLast",o=[u,p,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,p,h,e[1],e[1]]}return ql(e,o,n,r,a,!1,l,s)}function jl(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,p]=e}let d,[c,f,,m]=t,[g,y]=Xl(n),[b,x]=Xl(r),v=Zl(c,b),w=Zl(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,p,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Kl(e,t,n));let s=e[0],i=e[1],o=Jl((s-t+2*r)/n+1,a),l=Jl((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);p=a[0],h=a[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/a);let e=Math.max(0,(p-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},p=Jl((t-s+d+c)/r+1,o),h=Jl((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:p,outWidth:h}}(a,u,p,g,y,v,w,s,o),N=i?m*h:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function ql(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,p,h]=e}let c,[f,m,g,,y]=t,[b,x,v]=Yl(n),[w,k,I]=Yl(r),S=Zl(f,w),N=Zl(m,k),T=Zl(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,p){let h,d,c,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Kl(e,t,r));let i=e[0],o=e[1],l=e[2],u=Jl((i-t+2*a)/r+1,s),p=Jl((o-t+2*a)/r+1,s),h=Jl((l-t+2*a)/r+1,s);return[u,p,h,n]}([t,n,r,1],o,1,a,e,p);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,p=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(p/2),x=p-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}(a,u,p,h,b,x,v,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,C,E,$]:"channelsLast"===i&&(c=[l,C,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Kl(e,t,n,r=1){let a=Zl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Xl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Yl(e){return"number"==typeof e?[e,e,e]:e}function Zl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Jl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ql(e){let[t,n,r]=Xl(e);return 1===t&&1===n&&1===r}function eu(e,t){return Ql(e)||Ql(t)}function tu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function nu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Y(re(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Y(re(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var ru=_s({reshape_:function(e,t){let n={x:Ss(e,"x","reshape","string_or_numeric")},r={shape:t};return cs.runKernel(nr,n,r)}});var au=_s({avgPool_:function(e,t,n,r,a){let s=Ss(e,"x","avgPool","float32");Y(eu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=ru(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),nu("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=cs.runKernel(at,l,u);return p=Si(p,s.dtype),o?ru(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var su=_s({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=Ss(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=ru(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),nu("avgPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=cs.runKernel(it,u,p);return h=Si(h,o.dtype),l?ru(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var iu=_s({concat_:function(e,t=0){Y(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Ns(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ni(n[0]);let r=n,a={axis:t};return cs.runKernel(bt,r,a)}});var ou=_s({sigmoid_:function(e){let t={x:Ss(e,"x","sigmoid","float32")};return cs.runKernel(xr,t)}});var lu=_s({slice_:function(e,t,n){let r=Ss(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return cs.runKernel(mr,a,s)}});var uu=_s({tanh_:function(e){let t={x:Ss(e,"x","tanh","float32")};return cs.runKernel(Pr,t)}});var pu=_s({basicLSTMCell_:function(e,t,n,r,a,s){let i=Ss(e,"forgetBias","basicLSTMCell"),o=Ss(t,"lstmKernel","basicLSTMCell"),l=Ss(n,"lstmBias","basicLSTMCell"),u=Ss(r,"data","basicLSTMCell"),p=Ss(a,"c","basicLSTMCell"),h=Ss(s,"h","basicLSTMCell"),d=iu([u,h],1),c=Xi(d,o),f=Tl(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=lu(f,[0,0],y),x=lu(f,[0,g],y),v=lu(f,[0,2*g],y),w=lu(f,[0,3*g],y),k=Tl(El(ou(b),uu(x)),El(p,ou(Tl(i,v))));return[k,El(uu(k),ou(w))]}});var hu=_s({batchToSpaceND_:function(e,t,n){let r=Ss(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Y(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return cs.runKernel(ut,s,i)}});function du(e){let t;return t=0===e.rank||1===e.rank?ru(e,[1,1,1,e.size]):2===e.rank?ru(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ru(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var cu=_s({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Ss(e,"x","batchNorm"),u=Ss(t,"mean","batchNorm"),p=Ss(n,"variance","batchNorm");null!=a&&(i=Ss(a,"scale","batchNorm")),null!=r&&(o=Ss(r,"offset","batchNorm")),Y(u.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let h={x:du(l),scale:i,offset:o,mean:u,variance:p},d={varianceEpsilon:s},c=cs.runKernel(Qt,h,d);return ru(c,l.shape)}});var fu=_s({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Ss(e,"x","batchNorm"),u=Ss(t,"mean","batchNorm"),p=Ss(n,"variance","batchNorm");return null!=a&&(i=Ss(a,"scale","batchNorm")),null!=r&&(o=Ss(r,"offset","batchNorm")),Y(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Y(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),cu(l,u,p,o,i,s)}});var mu=_s({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Ss(e,"x","batchNorm"),u=Ss(t,"mean","batchNorm"),p=Ss(n,"variance","batchNorm");return null!=a&&(i=Ss(a,"scale","batchNorm")),null!=r&&(o=Ss(r,"offset","batchNorm")),Y(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Y(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),cu(l,u,p,o,i,s)}});var gu=_s({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Ss(e,"x","batchNorm"),u=Ss(t,"mean","batchNorm"),p=Ss(n,"variance","batchNorm");return null!=a&&(i=Ss(a,"scale","batchNorm")),null!=r&&(o=Ss(r,"offset","batchNorm")),Y(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Y(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),cu(l,u,p,o,i,s)}});var yu=_s({bincount_:function(e,t,n){let r=Ss(e,"x","bincount"),a=Ss(t,"weights","bincount");Y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return cs.runKernel(pt,s,i)}});var bu=_s({broadcastArgs_:function(e,t){let n=Ss(e,"s0","broadcastArgs","int32"),r=Ss(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return cs.runKernel(dt,a)}});var xu=_s({broadcastTo_:function(e,t){let n=Ss(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ru(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ni(n);let i={x:n},o={reps:s};return cs.runKernel(Br,i,o)}});var vu=_s({ceil_:function(e){let t={x:Ss(e,"x","ceil","float32")};return cs.runKernel(ft,t)}});var wu=_s({clipByValue_:function(e,t,n){let r=Ss(e,"x","clipByValue");Y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return cs.runKernel(mt,a,s)}});var ku=_s({concat1d_:function(e){return iu(e,0)}});var Iu=_s({concat2d_:function(e,t){return iu(e,t)}});var Su=_s({concat3d_:function(e,t){return iu(e,t)}});var Nu=_s({concat4d_:function(e,t){return iu(e,t)}});var Tu=_s({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ss(e,"x","conv2d","float32"),l=Ss(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=ru(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),nu("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];Y(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Y(eu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=cs.runKernel(xt,d,c);return p?ru(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var _u=_s({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=Ss(e,"x","conv1d"),l=Ss(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=ru(o,[1,o.shape[0],o.shape[1]])),Y(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Y(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),nu("conv1d",r,i),Y(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Y(eu(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Y("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let h=ru(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ru(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Tu(d,h,[1,n],r,"NHWC",[1,s],i);return ru(c,p?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Cu=_s({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=ru(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Y(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Y(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let p="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];Y(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),Y(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),nu("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=cs.runKernel(wt,d,c);return u?ru(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Eu=_s({conv2dTranspose_:function(e,t,n,r,a,s){let i=Ss(e,"x","conv2dTranspose"),o=Ss(t,"filter","conv2dTranspose");return Cu(n,i,o,r,a,"NHWC",s)}});var $u=_s({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Ss(e,"x","conv3d"),o=Ss(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=ru(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Y(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Y(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Y(eu(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Y("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let p={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=cs.runKernel(kt,p,h);return u?ru(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Au=_s({conv3DBackpropInput_:function(e,t,n,r,a){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=ru(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Y(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Y(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Y(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Y(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let p={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=cs.runKernel(St,p,h);return o?ru(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Fu=_s({conv3dTranspose_:function(e,t,n,r,a){let s=Ss(e,"x","conv3dTranspose"),i=Ss(t,"filter","conv3dTranspose");return Au(n,s,i,r,a)}});var Ru=_s({cos_:function(e){let t={x:Ss(e,"x","cos","float32")};return cs.runKernel(Nt,t)}});var Du=_s({cosh_:function(e){let t={x:Ss(e,"x","cosh","float32")};return cs.runKernel(Tt,t)}});var Mu=_s({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:Ss(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return cs.runKernel(_t,a,s)}});var Ou=_s({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:Ss(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return cs.runKernel(Ct,a,s)}});var Lu=_s({denseBincount_:function(e,t,n,r=!1){let a=Ss(e,"x","denseBincount"),s=Ss(t,"weights","denseBincount");Y("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Y(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return cs.runKernel($t,i,o)}});var zu=_s({depthToSpace_:function(e,t,n="NHWC"){let r=Ss(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Y(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Y(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Y(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return cs.runKernel(At,o,l)}});var Pu=_s({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ss(e,"x","depthwiseConv2d","float32"),l=Ss(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=ru(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let h="NHWC"===a?u.shape[3]:u.shape[1];Y(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),nu("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=cs.runKernel(Ft,d,c);return p?ru(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Bu=_s({diag_:function(e){let t={x:Ss(e,"x","diag")};return cs.runKernel(Mt,t)}});var Wu=_s({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=Ss(e,"x","dilation2d"),o=Ss(t,"filter","dilation2d");Y(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Y(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Y("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=ru(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let p={x:l,filter:o},h={strides:n,pad:r,dilations:a},d=cs.runKernel(Ot,p,h);return u?ru(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Vu=_s({equal_:function(e,t){let n=Ss(e,"a","equal","string_or_numeric"),r=Ss(t,"b","equal","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(Gt,a)}});var Uu=_s({where_:function(e,t,n){let r=Ss(t,"a","where"),a=Ss(n,"b","where"),s=Ss(e,"condition","where","bool"),i=_o(_o(s.shape,r.shape),a.shape),o={condition:xu(s,i),t:xu(r,i),e:xu(a,i)};return cs.runKernel(cr,o)}});var Gu=_s({zerosLike_:function(e){let t={x:Ss(e,"x","zerosLike")};return cs.runKernel(Kr,t)}});var Hu=_s({divNoNan_:function(e,t){let n=Ss(e,"a","div"),r=Ss(t,"b","div");[n,r]=as(n,r);let a=Cl(n,r),s=Gu(a),i=Vu(r,s);return Uu(i,s,a)}});var ju=_s({dot_:function(e,t){let n=Ss(e,"t1","dot"),r=Ss(t,"t2","dot");Y(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Y(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=ru(n,[1,-1]),t=ru(r,[-1,1]),a=Xi(e,t);return ru(a,[])}if(1===n.rank&&2===r.rank){let e=ru(n,[1,-1]),t=ru(r,[r.shape[0],r.shape[1]]),a=Xi(e,t);return ru(a,[a.size])}if(2===n.rank&&1===r.rank){let e=ru(r,[-1,1]),t=Xi(n,e);return ru(t,[t.size])}{let e=ru(r,[r.shape[0],r.shape[1]]);return Xi(n,e)}}});var qu=_s({einsum_:function(e,...t){let n=t.map(((e,t)=>Ss(e,`tensors${t}`,"einsum"))),r={equation:e};return cs.runKernel(Bt,n,r)}});var Ku=_s({elu_:function(e){let t={x:Ss(e,"x","elu","float32")};return cs.runKernel(Wt,t)}});var Xu=_s({erf_:function(e){let t=Ss(e,"x","erf");Y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Si(t,"float32"));let n={x:t};return cs.runKernel(Ut,n)}});function Yu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Zu(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Ju(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Qu(e,t){return Zu(e,t.map((e=>1)),t)}function ep(e,t,n){Y(Yu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function tp(e,t){if(Yu(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function np(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function rp(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var ap=_s({max_:function(e,t=null,n=!1){let r={x:Ss(e,"x","max")},a={reductionIndices:t,keepDims:n};return cs.runKernel(Nn,r,a)}});var sp=_s({min_:function(e,t=null,n=!1){let r={x:Ss(e,"x","min")},a={axis:t,keepDims:n};return cs.runKernel(Rn,r,a)}});var ip=_s({pow_:function(e,t){let n=Ss(e,"base","pow"),r=Ss(t,"exp","pow");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(Xn,a)}});function op(e,t){if((ye(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ye(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Es(e,[],[],t)}var lp=_s({sqrt_:function(e){let t={x:Ss(e,"x","sqrt","float32")};return cs.runKernel(wr,t)}});var up=_s({square_:function(e){let t=Ss(e,"x","square");return cs.runKernel("Square",{x:t},{})}});var pp=_s({sum_:function(e,t=null,n=!1){let r=Ss(e,"x","sum");"bool"===r.dtype&&(r=Si(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return cs.runKernel(kr,a,s)}});function hp(e,t,n=null){if(0===e.rank)return $l(e);if(1!==e.rank&&null===n)return hp(ru(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return pp($l(e),n);if(t===1/0)return ap($l(e),n);if(t===-1/0)return sp($l(e),n);if("euclidean"===t||2===t)return lp(pp(ip($l(e),op(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ap(pp($l(e),n[0]),n[1]-1);if(t===1/0)return ap(pp($l(e),n[1]),n[0]);if(t===-1/0)return sp(pp($l(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return lp(pp(up(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var dp=_s({norm_:function(e,t="euclidean",n=null,r=!1){let a=hp(e=Ss(e,"x","norm"),t,n),s=a.shape;if(r){let t=pe(n,e.shape);s=Qu(a.shape,t)}return ru(a,s)}});var cp=_s({euclideanNorm_:function(e,t=null,n=!1){return dp(e,"euclidean",t,n)}});var fp=_s({exp_:function(e){let t={x:Ss(e,"x","exp")};return cs.runKernel(Ht,t)}});var mp=_s({expandDims_:function(e,t=0){let n=Ss(e,"x","expandDims","string_or_numeric");Y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return cs.runKernel(jt,r,a)}});var gp=_s({expm1_:function(e){let t={x:Ss(e,"x","expm1")};return cs.runKernel(qt,t)}});var yp=_s({tile_:function(e,t){let n=Ss(e,"x","tile","string_or_numeric");Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return cs.runKernel(Br,r,a)}});var bp=_s({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=Ii([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=ru(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return yp(mp(i,0),[n[0],1,1]);if(2===n.length)return yp(mp(mp(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return yp(mp(mp(mp(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function xp(e,t,n){let r={shape:e,value:t,dtype:n};return cs.runKernel(Xt,{},r)}var vp=_s({floor_:function(e){let t={x:Ss(e,"x","floor","float32")};return cs.runKernel(Zt,t)}});var wp=_s({gather_:function(e,t,n=0,r=0){let a={x:Ss(e,"x","gather"),indices:Ss(t,"indices","gather","int32")},s={axis:n,batchDims:r};return cs.runKernel(en,a,s)}});var kp=_s({greater_:function(e,t){let n=Ss(e,"a","greater","string_or_numeric"),r=Ss(t,"b","greater","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(nn,a)}});var Ip=_s({greaterEqual_:function(e,t){let n=Ss(e,"a","greaterEqual","string_or_numeric"),r=Ss(t,"b","greaterEqual","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(rn,a)}});var Sp=_s({isFinite_:function(e){let t={x:Ss(e,"x","isFinite")};return cs.runKernel(ln,t)}});var Np=_s({isInf_:function(e){let t={x:Ss(e,"x","isInf")};return cs.runKernel(un,t)}});var Tp=_s({isNaN_:function(e){let t={x:Ss(e,"x","isNaN")};return cs.runKernel(pn,t)}});var _p=_s({leakyRelu_:function(e,t=.2){let n={x:Ss(e,"x","leakyRelu")},r={alpha:t};return cs.runKernel(hn,n,r)}});var Cp=_s({less_:function(e,t){let n=Ss(e,"a","less","string_or_numeric"),r=Ss(t,"b","less","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(dn,a)}});var Ep=_s({lessEqual_:function(e,t){let n=Ss(e,"a","lessEqual","string_or_numeric"),r=Ss(t,"b","lessEqual","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(cn,a)}});function $p(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return cs.runKernel(fn,{},r)}var Ap=_s({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=Ss(e,"x","localResponseNormalization");Y(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Y(re(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=ru(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},p=cs.runKernel(In,l,u);return o?ru(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Fp=_s({log_:function(e){let t={x:Ss(e,"x","log","float32")};return cs.runKernel(mn,t)}});var Rp=_s({log1p_:function(e){let t={x:Ss(e,"x","log1p")};return cs.runKernel(gn,t)}});function Dp(e){return Y(Se(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Ss(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ss(n,"dy","tf.grad"):null;return cs.tidy((()=>{let{value:t,grads:n}=cs.gradients((()=>e(r)),[r],a);return null!=a&&Z(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Bp(n),n[0]}))}}function Mp(e){return Y(Se(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Y(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=Ns(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ss(n,"dy","tf.grads"):null;return cs.tidy((()=>{let{value:t,grads:n}=cs.gradients((()=>e(...r)),r,a);return null!=a&&Z(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bp(n),n}))}}function Op(e){return Y(Se(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Y(t instanceof ja,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Y(null==n||n instanceof ja,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=cs.gradients((()=>e(t)),[t],n);return Bp(r),{grad:r[0],value:a}}}function Lp(e){return Y(Se(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Y(Array.isArray(t)&&t.every((e=>e instanceof ja)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Y(null==n||n instanceof ja,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=cs.gradients((()=>e(...t)),t,n);return null!=n&&Z(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bp(r.grads),r}}function zp(e,t){Y(Se(e),(()=>"The f passed in variableGrads(f) must be a function")),Y(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ka)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in cs.registeredVariables)t.push(cs.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Y((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=cs.gradients(e,t,null,!0);Y(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Y(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Pp(e){return cs.customGrad(e)}function Bp(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Wp=_s({softplus_:function(e){let t={x:Ss(e,"x","softplus")};return cs.runKernel(vr,t)}});var Vp=_s({logSigmoid_:function(e){let t=Ss(e,"x","logSigmoid");return Pp((e=>({value:vo(Wp(vo(e))),gradFunc:t=>El(t,ou(vo(e)))})))(t)}});var Up=_s({sub_:function(e,t){let n=Ss(e,"a","sub"),r=Ss(t,"b","sub");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(Lr,a)}});var Gp=_s({logSoftmax_:function(e,t=-1){let n=Ss(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Pp(((e,n)=>{let r=ap(e,t,!0),a=Up(e,r),s=Up(Si(a,"float32"),Fp(pp(fp(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=fp(r);return Up(e,El(pp(e,t,!0),a))}}}))(n)}});var Hp=_s({logSumExp_:function(e,t=null,n=!1){let r=Ss(e,"x","logSumExp"),a=pe(t,r.shape),s=ap(r,a,!0),i=Up(r,s),o=fp(i),l=pp(o,a),u=Fp(l),p=Tl(ru(s,u.shape),u);if(n){let e=Qu(p.shape,a);return ru(p,e)}return p}});var jp=_s({logicalAnd_:function(e,t){let n=Ss(e,"a","logicalAnd","bool"),r=Ss(t,"b","logicalAnd","bool");_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(yn,a)}});var qp=_s({logicalNot_:function(e){let t={x:Ss(e,"x","logicalNot","bool")};return cs.runKernel(bn,t)}});var Kp=_s({logicalOr_:function(e,t){let n=Ss(e,"a","logicalOr","bool"),r=Ss(t,"b","logicalOr","bool");_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(xn,a)}});var Xp=_s({logicalXor_:function(e,t){let n=Ss(e,"a","logicalXor","bool"),r=Ss(t,"b","logicalXor","bool");return _o(n.shape,r.shape),jp(Kp(e,t),qp(jp(e,t)))}}),Yp=2147483648;var Zp=_s({searchSorted_:function(e,t,n="left"){let r=Ss(e,"sortedSequence","searchSorted"),a=Ss(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=ru(r,[-1,s]),l=ru(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ee(l.shape)>=Yp)throw new Error(`values tensor size must less than ${Yp}`);if(o.shape[1]>=Yp)throw new Error(`trailing dim_size must less than ${Yp} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:n};return cs.runKernel(dr,u,p)}});function Jp(e,t){return Zp(e,t,"left")}var Qp=_s({maxPool_:function(e,t,n,r,a){let s=Ss(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=ru(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Y(eu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),nu("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=cs.runKernel(_n,l,u);return o?ru(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var eh=_s({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Ss(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=ru(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),nu("maxPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=cs.runKernel(En,u,p);return l?ru(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var th=_s({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:Ss(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=cs.runKernel(An,s,i);return{result:o[0],indexes:o[1]}}});var nh=_s({maximum_:function(e,t){let n=Ss(e,"a","maximum"),r=Ss(t,"b","maximum");[n,r]=as(n,r),"bool"===n.dtype&&(n=Si(n,"int32"),r=Si(r,"int32")),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(Tn,a)}});var rh=_s({mean_:function(e,t=null,n=!1){let r={x:Ss(e,"x","mean")},a={axis:t,keepDims:n};return cs.runKernel(Fn,r,a)}});function ah(e,t="float32"){if("complex64"===t){let t=ah(e,"float32"),n=ah(e,"float32");return Cs(t,n)}let n=$e(ee(e),t);return cs.makeTensor(n,e,t)}function sh(e,t="float32"){if("complex64"===t){let t=sh(e,"float32"),n=ah(e,"float32");return Cs(t,n)}let n=Ee(ee(e),t);return cs.makeTensor(n,e,t)}function ih(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ss(e,"x","meshgrid",e instanceof ja?e.dtype:"float32");if(void 0===t)return[r];let a=Ss(t,"y","meshgrid",t instanceof ja?t.dtype:"float32"),s=ee(r.shape),i=ee(a.shape);return"xy"===n?(r=ru(r,[1,-1]),a=ru(a,[-1,1]),[Xi(sh([i,1],r.dtype),r),Xi(a,sh([1,s],a.dtype))]):(r=ru(r,[-1,1]),a=ru(a,[1,-1]),[Xi(r,sh([1,i],r.dtype)),Xi(sh([s,1],a.dtype),a)])}var oh=_s({minimum_:function(e,t){let n=Ss(e,"a","minimum"),r=Ss(t,"b","minimum");[n,r]=as(n,r),"bool"===n.dtype&&(n=Si(n,"int32"),r=Si(r,"int32")),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(Dn,a)}});var lh=_s({mirrorPad_:function(e,t,n){Y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Ss(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Y(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Y(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return cs.runKernel(Mn,i,s)}});var uh=_s({mod_:function(e,t){let n=Ss(e,"a","mod"),r=Ss(t,"b","mod");[n,r]=as(n,r);let a={a:n,b:r};return cs.runKernel(On,a)}});var ph=_s({moments_:function(e,t=null,n=!1){let r=pe(t,(e=Ss(e,"x","moments")).shape),a=rh(e,r,n),s=a.shape;n||(s=Qu(a.shape,r));let i=up(Up(Si(e,"float32"),ru(a,s)));return{mean:a,variance:rh(i,r,n)}}});var hh=_s({multiRNNCell_:function(e,t,n,r){let a=Ss(t,"data","multiRNNCell"),s=Ns(n,"c","multiRNNCell"),i=Ns(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],p=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),p.push(l[e+1]);return[u,p]}});var dh=_s({multinomial_:function(e,t,n,r=!1){let a=Ss(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?ru(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=cs.runKernel(Ln,o,l);return 1===i?ru(u,[u.size]):u}});var ch=_s({notEqual_:function(e,t){let n=Ss(e,"a","notEqual","string_or_numeric"),r=Ss(t,"b","notEqual","string_or_numeric");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(Bn,a)}});var fh=_s({onesLike_:function(e){let t={x:Ss(e,"x","onesLike")};return cs.runKernel(Gn,t)}});var mh=_s({outerProduct_:function(e,t){let n=Ss(e,"v1","outerProduct"),r=Ss(t,"v2","outerProduct");Y(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=ru(n,[-1,1]),s=ru(r,[1,-1]);return Xi(a,s)}});var gh=_s({pad_:function(e,t,n=0){let r=Ss(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return cs.runKernel(qn,s,a)}});var yh=_s({pad1d_:function(e,t,n=0){return Y(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),gh(e,[t],n)}});var bh=_s({pad2d_:function(e,t,n=0){return Y(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),gh(e,t,n)}});var xh=_s({pad3d_:function(e,t,n=0){return Y(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),gh(e,t,n)}});var vh=_s({pad4d_:function(e,t,n=0){return Y(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),gh(e,t,n)}});var wh=_s({spaceToBatchND_:function(e,t,n){let r=Ss(e,"x","spaceToBatchND");Y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Y(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return cs.runKernel(Ir,a,s)}});var kh=_s({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Ss(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=ru(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(eu(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let p,h=Gl(l.shape,t,s,a,r),d=[h.dilationHeight,h.dilationWidth];p="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],d,p),g=c?r:"valid",y=c?l:wh(l,d,f),b=("avg"===n?()=>au(y,t,s,g,i):()=>Qp(y,t,s,g,i))(),x=c?b:hu(b,d,m);return u?ru(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var Ih=_s({prelu_:function(e,t){let n={x:Ss(e,"x","prelu"),alpha:Ss(t,"alpha","prelu")};return cs.runKernel(Yn,n)}});var Sh=_s({prod_:function(e,t=null,n=!1){let r=Ss(e,"x","prod");"bool"===r.dtype&&(r=Si(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return cs.runKernel(Zn,a,s)}});var Nh=_s({rand_:function(e,t,n){let r=ee(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return cs.makeTensor(a,e,n)}}),Th=y(E()),_h=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Th.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Ch=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Th.alea(a.toString()),this.randn=new _h(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},Eh=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Th.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};var $h=_s({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new Ch(t,n,r,a),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Ah=_s({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new _h(t,n,r,!1,a),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Fh=_s({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Ah(e,0,1,t,n)}});var Rh=_s({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=Ii(e,r),i=new Eh(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Dh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return cs.runKernel(Jn,{},a)}var Mh=_s({reciprocal_:function(e){let t={x:Ss(e,"x","reciprocal")};return cs.runKernel(er,t)}});var Oh=_s({relu_:function(e){let t={x:Ss(e,"x","relu")};return cs.runKernel(tr,t)}});var Lh=_s({relu6_:function(e){let t={x:Ss(e,"x","relu6")};return cs.runKernel(or,t)}});var zh=_s({reverse_:function(e,t){let n={x:Ss(e,"x","reverse")},r={dims:t};return cs.runKernel(lr,n,r)}});var Ph=_s({reverse1d_:function(e){let t=Ss(e,"x","reverse");return Y(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),zh(t,0)}});var Bh=_s({reverse2d_:function(e,t){let n=Ss(e,"x","reverse");return Y(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),zh(n,t)}});var Wh=_s({reverse3d_:function(e,t){let n=Ss(e,"x","reverse");return Y(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),zh(n,t)}});var Vh=_s({reverse4d_:function(e,t){let n=Ss(e,"x","reverse");return Y(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),zh(n,t)}});var Uh=_s({round_:function(e){let t={x:Ss(e,"x","round")};return cs.runKernel(ur,t)}});var Gh=_s({rsqrt_:function(e){let t={x:Ss(e,"x","rsqrt","float32")};return cs.runKernel(pr,t)}});var Hh=_s({selu_:function(e){let t={x:Ss(e,"x","selu")};return cs.runKernel(fr,t)}});var jh=_s({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Ss(e,"x","separableConv2d"),l=Ss(t,"depthwiseFilter","separableConv2d"),u=Ss(n,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(3===o.rank&&(h=!0,p=ru(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Y(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),Y(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Y(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Y(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];Y(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Pu(p,l,r,a,i,s),m=Tu(f,u,1,"valid",i);return h?ru(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var qh=async function(e,t){let n=Ss(e,"x","setdiff1d"),r=Ss(t,"y","setdiff1d");Y(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Y(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Y(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Ua([o],n.dtype),u=new Ua([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Kh=_s({sign_:function(e){let t={x:Ss(e,"x","sign")};return cs.runKernel(br,t)}});var Xh=_s({sin_:function(e){let t={x:Ss(e,"x","sin","float32")};return cs.runKernel(gr,t)}});var Yh=_s({sinh_:function(e){let t={x:Ss(e,"x","sinh")};return cs.runKernel(yr,t)}});var Zh=_s({slice1d_:function(e,t,n){let r=Ss(e,"x","slice1d");return Y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),lu(r,[t],[n])}});var Jh=_s({slice2d_:function(e,t,n){let r=Ss(e,"x","slice2d");return Y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),lu(r,t,n)}});var Qh=_s({slice3d_:function(e,t,n){let r=Ss(e,"x","slice3d");return Y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),lu(r,t,n)}});var ed=_s({slice4d_:function(e,t,n){let r=Ss(e,"x","slice4d");return Y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),lu(r,t,n)}});var td=_s({softmax_:function(e,t=-1){let n=Ss(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return cs.runKernel(Nr,r,a)}});var nd=_s({fft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return cs.runKernel(Kt,t)}});var rd=_s({ifft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return cs.runKernel(sn,t)}});var ad=_s({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=ru(e,[r,n]);t=rd(a)}else{let a=[r,2*(n-1)],s=ru(wo(e),[r,n]),i=ru(xo(e),[r,n]),o=zh(lu(s,[0,1],[r,n-2]),1),l=El(zh(lu(i,[0,1],[r,n-2]),1),op(-1)),u=iu([s,o],1),p=iu([i,l],1),h=ru(Cs(u,p),[a[0],a[1]]);t=rd(h)}if(t=wo(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=ru(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var sd=_s({split_:function(e,t,n=0){let r={x:Ss(e,"x","split")},a={numOrSizeSplits:t,axis:n};return cs.runKernel(Sr,r,a)}});var id=_s({rfft_:function(e,t){Y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=lu(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=iu([e,ah(a)],e.shape.length-1),r=t}else n=e;let s=Gu(n),i=ru(Cs(n,s),[a,r]),o=nd(i),l=Math.floor(r/2)+1,u=wo(o),p=xo(o),h=sd(u,[l,r-l],u.shape.length-1),d=sd(p,[l,r-l],p.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,ru(Cs(h[0],d[0]),c)}});var od=_s({squaredDifference_:function(e,t){let n=Ss(e,"a","squaredDifference"),r=Ss(t,"b","squaredDifference");[n,r]=as(n,r),_o(n.shape,r.shape);let a={a:n,b:r};return cs.runKernel(Ar,a,{})}});var ld=_s({squeeze_:function(e,t){let n=Ss(e,"x","squeeze","string_or_numeric");return ru(n,he(n.shape,t).newShape)}});var ud=_s({stack_:function(e,t=0){let n=Ns(e,"tensors","stack","string_or_numeric");Y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return cs.runKernel(jn,r,a)}});var pd=_s({step_:function(e,t=0){let n={x:Ss(e,"x","step")},r={alpha:t};return cs.runKernel(Xr,n,r)}});var hd=_s({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Ss(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return cs.runKernel(Rr,u,p)}});var dd=_s({tan_:function(e){let t={x:Ss(e,"x","tan","float32")};return cs.runKernel(zr,t)}});function cd(e,t){J(e);let n=ws(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Es(e,null,n,t)}function fd(e,t,n){if(J(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=ws(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Es(e,t,r,n)}function md(e,t,n){if(J(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=ws(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}function gd(e,t,n){if(J(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=ws(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Es(e,t,r,n)}function yd(e,t,n){if(J(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=ws(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Es(e,t=t||r,r,n)}var bd=_s({topk_:function(e,t=1,n=!0){let r=Ss(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=cs.runKernel(Wr,s,i);return{values:o,indices:l}}});var xd=_s({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new _h(t,n,r,!0,a),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var vd=_s({unique_:function(e,t=0){let n=Ss(e,"x","unique","string_or_numeric");Y(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=cs.runKernel(Gr,r,a);return{values:s,indices:i}}});var wd=_s({unsortedSegmentSum_:function(e,t,n){let r=Ss(e,"x","unsortedSegmentSum"),a=Ss(t,"segmentIds","unsortedSegmentSum","int32");Y(re(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return cs.runKernel(jr,s,i)}});var kd=_s({unstack_:function(e,t=0){let n=Ss(e,"x","unstack","string_or_numeric");Y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return cs.runKernel(Hr,r,a)}});function Id(e,t){return Zp(e,t,"right")}function Sd(e,t=!0,n,r){return cs.makeVariable(e,t,n,r)}function Nd(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=Ii(e,"int32"),a=Ii([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Td=async function(e){let t=Ss(e,"condition","whereAsync","bool"),n=await t.data(),r=Nd(t.shape,n);return e!==t&&t.dispose(),r};var _d=async function(e,t,n){let r=Ss(e,"tensor","boolMask"),a=Ss(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Y(i>0,(()=>"mask cannot be scalar")),Z(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=ru(r,u),h=ru(a,[-1]),d=await Td(h),c=ld(d,[1]),f=wp(p,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),f};var Cd=_s({movingAverage_:function(e,t,n,r,a=!0){let s=Ss(e,"v","movingAverage"),i=Ss(t,"x","movingAverage"),o=Ss(n,"decay","movingAverage");ss(s,i),Y(ne(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=op(1),u=Up(l,o),p=El(Up(i,s),u);if(a){Y(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Ss(r,"step","movingAverage");p=Cl(p,Up(l,ip(o,e)))}return Tl(s,p)}});var Ed=_s({scatterND_:function(e,t,n){let r=Ss(e,"indices","scatterND","int32"),a=Ss(t,"updates","scatterND");Bo(a,r,n);let s={indices:r,updates:a},i={shape:n};return cs.runKernel(hr,s,i)}});var $d=_s({sparseToDense_:function(e,t,n,r=0){let a=Ss(e,"sparseIndices","sparseToDense","int32"),s=Ss(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ss(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return cs.runKernel($r,o,l)}});var Ad=_s({gatherND_:function(e,t){let n=Ss(t,"indices","gatherND","int32"),r={params:Ss(e,"x","gatherND","string_or_numeric"),indices:n};return cs.runKernel(tn,r)}});var Fd=_s({dropout_:function(e,t,n,r){let a=Ss(e,"x","dropout");if(Y("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ja?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(ne(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Cl(vp(Tl(Rh(s,0,1,"float32",r),i)),i);return El(a,o)}});function Rd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Dd(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return cd(a,"float32")}var Md=async function(e,t,n=1){let r=Ss(e,"predictions","inTopK"),a=Ss(t,"targets","inTopK");Y(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Y(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Z(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Y(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],p=de("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),$s(p,a.shape,"bool")},Od={};g(Od,{conv2d:()=>Vd,depthwiseConv2d:()=>Hd,matMul:()=>jd});var Ld=_s({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=ru(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ru(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Y(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Y(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];Y(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Y(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),nu("conv2dDerFilter",a,i);let h={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return cs.runKernel(vt,h,d)}});function zd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return El(e,pd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Pd(e,t){let n=t,r=To(e.shape,t.shape);return r.length>0&&(n=pp(n,r)),ru(n,e.shape)}function Bd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Oh(e);if("elu"===t)return Ku(e);if("relu6"===t)return Lh(e);if("prelu"===t)return Ih(e,n);if("leakyrelu"===t)return _p(e,r);if("sigmoid"===t)return ou(e);throw new Error(`Unknown fused activation ${t}.`)}var Wd=(e,t)=>!(e>0)||"linear"===t;var Vd=_s({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",!1===Wd(cs.state.gradientDepth,l)){Y("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Tu(e,t,n,r,a,s,i);return null!=o&&(h=Tl(h,o)),Bd(h,l,u,p)}let h=Ss(e,"x","conv2d","float32"),d=Ss(t,"filter","conv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=ru(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),nu("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];Y(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),Y(eu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=jl(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=Ss(o,"bias","fused conv2d"),[g]=as(g,h),"NHWC"===a?_o(b.outShape,g.shape):(Y(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),Y(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(Y(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Y(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{_o(e,b.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=Ss(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Y("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));let[i,o,u,p]=t,h=zd(e,u,l);Y(Ql(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let d=[Cu(o.shape,h,i,n,r),Ld(o,h,i.shape,n,r)];if(null!=p){let e=Pd(p,h);d.push(e)}return d},v={x:c,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Pp(((e,t,n)=>{let r=cs.runKernel(Qr,v,w);return n([t,e,r]),f&&(r=ru(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,d):Pp(((e,t,n,r)=>{let a=cs.runKernel(Qr,v,w);return r([t,e,a,n]),f&&(a=ru(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,d,g)}});var Ud=_s({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=ru(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ru(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return cs.runKernel(Rt,u,p)}});var Gd=_s({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=ru(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=cs.runKernel(Dt,u,p);return l?ru(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Hd=_s({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===Wd(cs.state.gradientDepth,l)){let h=Pu(e,t,n,r,a,s,i);return null!=o&&(h=Tl(h,o)),Bd(h,l,u,p)}let h=Ss(e,"x","depthwiseConv2d","float32"),d=Ss(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=ru(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Y(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),Y(eu(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),nu("fused depthwiseConv2d",r,i);let m,g,y=jl(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=Ss(o,"bias","fused conv2d"),[m]=as(m,h),_o(y.outShape,m.shape)),null!=u&&(g=Ss(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Y(Ql(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,p]=t,h=zd(e,u,l),d=Gd(o.shape,h,a,n,r,s,i),c=Ud(o,h,a.shape,n,r,s,i);if(null!=p){return[d,c,Pd(m,h)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Pp(((e,t,n)=>{let r=cs.runKernel(ea,x,v);return n([t,e,r]),f&&(r=ru(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):Pp(((e,t,n,r)=>{let a=cs.runKernel(ea,x,v);return r([t,e,a,n]),f&&(a=ru(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var jd=_s({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Wd(cs.state.gradientDepth,s)){let l=Xi(e,t,n,r);return null!=a&&(l=Tl(l,a)),Bd(l,s,i,o)}let l=Ss(e,"a","fused matMul"),u=Ss(t,"b","fused matMul");[l,u]=as(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ee(f),y=ee(m);Y(p===h,(()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=_o(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),w=ru(l,n?[g,p,d]:[g,d,p]),k=ru(u,r?[y,c,h]:[y,h,c]);null!=a&&(b=Ss(a,"bias","fused matMul"),[b]=as(b,l),_o(v,b.shape)),null!=i&&(x=Ss(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,p,h]=t,d=zd(ru(e,p.shape),p,s);if(n||r?!n&&r?(i=Xi(d,u,!1,!1),o=Xi(d,l,!0,!1)):n&&!r?(i=Xi(u,d,!1,!0),o=Xi(l,d,!1,!1)):(i=Xi(u,d,!0,!0),o=Xi(d,l,!0,!0)):(i=Xi(d,u,!1,!0),o=Xi(l,d,!0,!1)),null!=a){return[i,o,Pd(h,d)]}return[i,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Pp(((e,t,n)=>{let r=cs.runKernel(Jr,S,N);return n([e,t,r]),{value:ru(r,v),gradFunc:I}}))(w,k):Pp(((e,t,n,r)=>{let a=cs.runKernel(Jr,S,N);return r([e,t,a,n]),{value:ru(a,v),gradFunc:I}}))(w,k,b)}});var qd=_s({hammingWindow_:function(e){return Dd(e,.54,.46)}});var Kd=_s({hannWindow_:function(e){return Dd(e,.5,.5)}});var Xd=_s({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(lu(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=iu([lu(e,s,t-r),xp([r],a)]);i.push(o),s+=n}return 0===i.length?fd([],[0,t]):ru(iu(i),[i.length,t])}});var Yd=_s({stft_:function(e,t,n,r,a=Kd){null==r&&(r=Rd(t));let s=Xd(e,t,n),i=El(s,a(t));return id(i,r)}});var Zd=_s({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=Ss(e,"image","cropAndResize"),o=Ss(t,"boxes","cropAndResize","float32"),l=Ss(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Y(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Y(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Y("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let p={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return cs.runKernel(Et,p,h)}});var Jd=_s({flipLeftRight_:function(e){let t=Ss(e,"image","flipLeftRight","float32");Y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return cs.runKernel(Yt,n,{})}});var Qd=_s({grayscaleToRGB_:function(e){let t=Ss(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Y(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Y(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,yp(t,a)}});var ec=_s({rotateWithOffset_:function(e,t,n=0,r=.5){let a=Ss(e,"image","rotateWithOffset","float32");Y(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return cs.runKernel(Zr,s,i)}});function tc(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Y(1===t.rank,(()=>"scores must be a 1D tensor")),Y(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Y(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var nc=_s({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ss(e,"boxes","nonMaxSuppression","float32"),i=Ss(t,"scores","nonMaxSuppression","float32"),o=tc(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return cs.runKernel(Wn,{boxes:s,scores:i},l)}});function rc(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||ac)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function ac(e,t){return e>t?1:e<t?-1:0}function sc(e,t,n,r,a){return lc(e,t,n,r,a,0)}function ic(e,t,n,r,a,s){return lc(e,t,n,r,a,0,!1,s,!0)}function oc(e,t,n,r,a,s){return lc(e,t,n,r,a,s,!0)}function lc(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(hc);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){let i=uc(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*pc(r,p,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&rc(u,t,hc))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function uc(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(d-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function pc(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function hc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var dc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ss(e,"boxes","nonMaxSuppressionAsync"),i=Ss(t,"scores","nonMaxSuppressionAsync"),o=tc(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=sc(u,p,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),cd(h,"int32")};var cc=_s({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ss(e,"boxes","nonMaxSuppression"),o=Ss(t,"scores","nonMaxSuppression"),l=tc(i,o,n,r,a,s),u={boxes:i,scores:o},p={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=cs.runKernel(Un,u,p);return{selectedIndices:h[0],selectedScores:h[1]}}});var fc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ss(e,"boxes","nonMaxSuppressionAsync"),o=Ss(t,"scores","nonMaxSuppressionAsync"),l=tc(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=oc(p,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:cd(d,"int32"),selectedScores:cd(c)}};var mc=_s({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ss(e,"boxes","nonMaxSuppression"),o=Ss(t,"scores","nonMaxSuppression"),l=tc(i,o,n,r,a,null),u={boxes:i,scores:o},p={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=cs.runKernel(Vn,u,p);return{selectedIndices:h[0],validOutputs:h[1]}}});var gc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ss(e,"boxes","nonMaxSuppressionAsync"),o=Ss(t,"scores","nonMaxSuppressionAsync"),l=tc(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ic(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:cd(f,"int32"),validOutputs:op(m,"int32")}};var yc=_s({resizeBilinear_:function(e,t,n=!1,r=!1){let a=Ss(e,"images","resizeBilinear");Y(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=ru(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=cs.runKernel(sr,o,l);return i?ru(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var bc=_s({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=Ss(e,"images","resizeNearestNeighbor");Y(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Y("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=ru(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=cs.runKernel(rr,o,l);return i?ru(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var xc=_s({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=Ss(e,"image","threshold"),u=l.shape[0]*l.shape[1],p=El(cd([r]),255);if(Y(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Y(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Y("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Y("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=sd(l,[1,1,1],-1);let e=El(a,.2989),t=El(s,.587),n=El(i,.114);o=Tl(Tl(e,t),n)}else o=e;if("otsu"===t){p=function(e,t){let n,r,a,s,i,o,l=cd([-1]),u=cd([0]),p=cd([0]);for(let h=0;h<e.size-1;h++){n=lu(e,0,h+1),r=lu(e,h+1),i=Cl(pp(n),t),o=Cl(pp(r),t);let d=pp(El(n,Dh(0,n.size)));a=Cl(d,pp(n));let c=xp(r.shape,n.size),f=Tl(Dh(0,r.size),c),m=El(r,f);s=Cl(pp(m),pp(r));let g=Up(a,s),y=Up(a,s),b=El(i,o);p=El(El(b,g),y);let x=kp(p,u);u=Uu(x,p,u),l=Uu(x,cd([h]),l)}return l}(yu(Si(Uh(o),"int32"),$s([]),256),u)}let h=n?Ep(o,p):kp(o,p);return Si(El(h,255),"int32")}});var vc=_s({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=Ss(e,"image","transform","float32"),o=Ss(t,"transforms","transform","float32");Y(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Y(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return cs.runKernel(Vr,l,u)}});var wc=_s({bandPart_:function(e,t,n){Y(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Y(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=Ss(e,"a","bandPart");Y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=ru(Dh(0,s,1,"int32"),[-1,1]),l=Dh(0,i,1,"int32"),u=Up(o,l),p=jp(Ep(u,op(+t,"int32")),Ip(u,op(-n,"int32"))),h=ah([s,i],r.dtype);return ru(ud(kd(ru(r,[-1,s,i])).map((e=>Uu(p,e,h)))),a)}});var kc=_s({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=sd(e,e.shape[0],0).map((e=>ld(e,[0])));Y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(cs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=El(pp(El(n[r],e)),n[r]);e=Up(e,t)}return Cl(e,dp(e,"euclidean"))})));return t?ud(n,0):n}});function Ic(e,t=!1){return cs.tidy((()=>{Y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=bp(n),s=Ni(e),i=fd([[1]],[1,1]),o=Ni(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=cs.tidy((()=>{let t=lu(s,[e,e],[n-e,1]),l=dp(t),u=lu(s,[e,e],[1,1]),p=Uu(kp(u,0),fd([[-1]]),fd([[1]])),h=Up(u,El(p,l)),d=Cl(t,h);o=1===d.shape[0]?Ni(i):iu([i,lu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=vo(Cl(Xi(p,h),l)),f=lu(s,[e,0],[n-e,r]),m=El(c,o),g=ko(o);if(0===e)s=Up(f,Xi(m,Xi(g,f)));else{let t=Up(f,Xi(m,Xi(g,f)));s=iu([lu(s,[0,0],[e,r]),t],0)}let y=ko(m),b=lu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Up(b,Xi(Xi(b,o),y));else{let t=Up(b,Xi(Xi(b,o),y));a=iu([lu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),io([t,l,u])}return!t&&n>r&&(a=lu(a,[0,0],[n,r]),s=lu(s,[0,0],[r,r])),[a,s]}))}var Sc,Nc=_s({qr_:function(e,t=!1){if(Y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ic(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=kd(ru(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=Ic(e,t);a.push(n),s.push(r)})),[ru(ud(a,0),e.shape),ru(ud(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Sc||(Sc={}));var Tc=_s({computeWeightedLoss_:function(e,t,n=Sc.SUM_BY_NONZERO_WEIGHTS){let r=Ss(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Ss(t,"weights","computeWeightedLoss"));let s=null==a?r:El(r,a);if(n===Sc.NONE)return s;if(n===Sc.SUM)return pp(s);if(n===Sc.MEAN){if(null==a)return rh(s);{let e=r.size/a.size,t=Cl(pp(s),pp(a));return e>1?Cl(t,op(e)):t}}if(n===Sc.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Cl(pp(s),op(r.size));{let e=El(a,sh(r.shape)),t=Si(pp(ch(e,op(0))),"float32");return Cl(pp(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var _c=_s({absoluteDifference_:function(e,t,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){let a=Ss(e,"labels","absoluteDifference"),s=Ss(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Ss(n,"weights","absoluteDifference")),Z(a.shape,s.shape,"Error in absoluteDifference: ");let o=$l(Up(a,s));return Tc(o,i,r)}});var Cc=_s({cosineDistance_:function(e,t,n,r,a=Sc.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"labels","cosineDistance"),i=Ss(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Ss(r,"weights","cosineDistance")),Z(s.shape,i.shape,"Error in cosineDistance: ");let l=op(1),u=Up(l,pp(El(s,i),n,!0));return Tc(u,o,a)}});var Ec=_s({hingeLoss_:function(e,t,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){let a=Ss(e,"labels","hingeLoss"),s=Ss(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Ss(n,"weights","hingeLoss")),Z(a.shape,s.shape,"Error in hingeLoss: ");let o=op(1);a=Up(El(op(2),a),o);let l=Oh(Up(o,El(a,s)));return Tc(l,i,r)}});var $c=_s({huberLoss_:function(e,t,n,r=1,a=Sc.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"labels","huberLoss"),i=Ss(t,"predictions","huberLoss"),o=null;null!=n&&(o=Ss(n,"weights","huberLoss")),Z(s.shape,i.shape,"Error in huberLoss: ");let l=op(r),u=$l(Up(i,s)),p=oh(u,l),h=Up(u,p),d=Tl(El(op(.5),up(p)),El(l,h));return Tc(d,o,a)}});var Ac=_s({logLoss_:function(e,t,n,r=1e-7,a=Sc.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"labels","logLoss"),i=Ss(t,"predictions","logLoss"),o=null;null!=n&&(o=Ss(n,"weights","logLoss")),Z(s.shape,i.shape,"Error in logLoss: ");let l=op(1),u=op(r),p=vo(El(s,Fp(Tl(i,u)))),h=El(Up(l,s),Fp(Tl(Up(l,i),u))),d=Up(p,h);return Tc(d,o,a)}});var Fc=_s({meanSquaredError_:function(e,t,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){let a=Ss(e,"labels","meanSquaredError"),s=Ss(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Ss(n,"weights","meanSquaredError")),Z(a.shape,s.shape,"Error in meanSquaredError: ");let o=od(a,s);return Tc(o,i,r)}});var Rc=_s({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Sc.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"multiClassLabels","sigmoidCrossEntropy"),i=Ss(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Ss(n,"weights","sigmoidCrossEntropy")),Z(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=op(r),t=op(1),n=op(.5);s=Tl(El(s,Up(t,e)),El(n,e))}let l=function(e,t){let n=Ss(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ss(t,"logits","sigmoidCrossEntropyWithLogits");Z(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Oh(r),s=El(r,n),i=Rp(fp(vo($l(r))));return Tl(Up(a,s),i)}(s,i);return Tc(l,o,a)}});var Dc=_s({softmaxCrossEntropy_:function(e,t,n,r=0,a=Sc.SUM_BY_NONZERO_WEIGHTS){let s=Ss(e,"onehotLabels","softmaxCrossEntropy"),i=Ss(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Ss(n,"weights","softmaxCrossEntropy")),Z(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=op(r),t=op(1),n=op(s.shape[1]);s=Tl(El(s,Up(t,e)),Cl(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Pp(((e,t,r)=>{let a=Hp(t,[n],!0),s=Up(Si(t,"float32"),a);r([e,s]);let i=vo(El(s,e));return{value:pp(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Qu(e.shape,[n]);return[El(ru(e,s),Up(Si(r,"float32"),fp(a))),El(ru(e,s),Up(fp(a),Si(r,"float32")))]}}}))(e,t)}(s,i);return Tc(l,o,a)}});var Mc=_s({sparseFillEmptyRows_:function(e,t,n,r){let a=Ss(e,"indices","sparseFillEmptyRows","int32"),s=Ss(t,"values","sparseFillEmptyRows"),i=Ss(n,"denseShape","sparseFillEmptyRows","int32"),o=Ss(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=cs.runKernel(Tr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var Oc=_s({sparseReshape_:function(e,t,n){let r=Ss(e,"inputIndices","sparseReshape","int32"),a=Ss(t,"inputShape","sparseReshape","int32"),s=Ss(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=cs.runKernel(_r,i);return{outputIndices:o[0],outputShape:o[1]}}});var Lc=_s({sparseSegmentMean_:function(e,t,n){let r=Ss(e,"data","sparseSegmentMean"),a=Ss(t,"indices","sparseSegmentMean","int32"),s=Ss(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return cs.runKernel(Cr,i)}});var zc=_s({sparseSegmentSum_:function(e,t,n){let r=Ss(e,"data","sparseSegmentSum"),a=Ss(t,"indices","sparseSegmentSum","int32"),s=Ss(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return cs.runKernel(Er,i)}});var Pc=_s({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=Ss(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Ss(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=cs.runKernel(Dr,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}});var Bc=_s({stringSplit_:function(e,t,n=!0){let r=Ss(e,"input","stringSplit","string"),a=Ss(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=cs.runKernel(Mr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var Wc=_s({stringToHashBucketFast_:function(e,t){let n=Ss(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return cs.runKernel(Or,a,r)}}),Vc={fft:nd,ifft:rd,rfft:id,irfft:ad},Uc={hammingWindow:qd,hannWindow:Kd,frame:Xd,stft:Yd},Gc={flipLeftRight:Jd,grayscaleToRGB:Qd,resizeNearestNeighbor:bc,resizeBilinear:yc,rotateWithOffset:ec,cropAndResize:Zd,nonMaxSuppression:nc,nonMaxSuppressionAsync:dc,nonMaxSuppressionWithScore:cc,nonMaxSuppressionWithScoreAsync:fc,nonMaxSuppressionPadded:mc,nonMaxSuppressionPaddedAsync:gc,threshold:xc,transform:vc},Hc={bandPart:wc,gramSchmidt:kc,qr:Nc},jc={absoluteDifference:_c,computeWeightedLoss:Tc,cosineDistance:Cc,hingeLoss:Ec,huberLoss:$c,logLoss:Ac,meanSquaredError:Fc,sigmoidCrossEntropy:Rc,softmaxCrossEntropy:Dc},qc={sparseFillEmptyRows:Mc,sparseReshape:Oc,sparseSegmentMean:Lc,sparseSegmentSum:zc},Kc={stringNGrams:Pc,stringSplit:Bc,stringToHashBucketFast:Wc},Xc=class extends ul{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return io(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return zp(e,t)}dispose(){null!=this.iterations_&&io(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:op(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Xc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Yc=class extends Xc{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=cs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:so((()=>Gu(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:so((()=>Gu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;so((()=>{let e=Tl(El(i,this.rho),El(up(s),1-this.rho)),t=El(Cl(lp(Tl(o,this.epsilon)),lp(Tl(i,this.epsilon))),s),n=Tl(El(o,this.rho),El(up(t),1-this.rho));i.assign(e),o.assign(n);let a=Tl(El(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(io(this.accumulatedGrads.map((e=>e.variable))),io(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Yc.className="Adadelta",hl(Yc);var Zc=class extends Xc{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=cs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:so((()=>xp(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;so((()=>{let e=Tl(s,up(a));s.assign(e);let t=Tl(El(Cl(a,lp(Tl(e,cs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&io(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Zc.className="Adagrad",hl(Zc);var Jc=class extends Xc{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],so((()=>{this.accBeta1=op(t).variable(),this.accBeta2=op(n).variable()})),null==r&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);so((()=>{let n=Up(1,this.accBeta1),r=Up(1,this.accBeta2);t.forEach(((t,a)=>{let s=cs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:so((()=>Gu(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:so((()=>Gu(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,p=Tl(El(l,this.beta1),El(o,1-this.beta1)),h=Tl(El(u,this.beta2),El(up(o),1-this.beta2)),d=Cl(p,n),c=Cl(h,r);l.assign(p),u.assign(h);let f=Tl(El(Cl(d,Tl(lp(c),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(El(this.accBeta1,this.beta1)),this.accBeta2.assign(El(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&io(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&io(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),so((()=>{this.accBeta1.assign(ip(this.beta1,this.iterations_+1)),this.accBeta2.assign(ip(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Jc.className="Adam",hl(Jc);var Qc=class extends Xc{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],so((()=>{this.iteration=op(0).variable(),this.accBeta1=op(t).variable()})),null==r&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);so((()=>{let n=Up(1,this.accBeta1),r=Cl(-this.learningRate,Tl(El(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=cs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Gu(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Gu(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,p=Tl(El(l,this.beta1),El(o,1-this.beta1)),h=El(u,this.beta2),d=$l(o),c=nh(h,d);l.assign(p),u.assign(c);let f=Tl(El(Cl(r,n),Cl(p,Tl(c,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Tl(this.iteration,1)),this.accBeta1.assign(El(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&io(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&io(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Qc.className="Adamax",hl(Qc);var ef=class extends Xc{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=cs.registeredVariables[t];so((()=>{let e=Tl(El(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=oo(op(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};ef.className="SGD",hl(ef);var tf=class extends ef{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=op(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=cs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:so((()=>Gu(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&so((()=>{let e,t=Tl(El(this.m,a),s);e=this.useNesterov?Tl(El(this.c,Tl(s,El(t,this.m))),r):Tl(El(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&io(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};tf.className="Momentum",hl(tf);var nf=class extends Xc{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=cs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=cs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:so((()=>Gu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:so((()=>Gu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:so((()=>Gu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;so((()=>{let e=Tl(El(i,this.decay),El(up(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=Tl(El(t,this.decay),El(s,1-this.decay)),l=Cl(El(s,this.learningRate),lp(Up(e,Tl(up(a),this.epsilon)))),u=Tl(El(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let p=Up(r,u);r.assign(p)}else{let e=Tl(El(i,this.decay),El(up(s),1-this.decay)),t=Tl(El(o,this.momentum),Cl(El(s,this.learningRate),lp(Tl(e,this.epsilon))));i.assign(e),o.assign(t);let n=Up(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&io(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&io(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&io(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};nf.className="RMSProp",hl(nf);var rf=class{static sgd(e){return new ef(e)}static momentum(e,t,n=!1){return new tf(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new nf(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Jc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Yc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Qc(e,t,n,r,a)}static adagrad(e,t=.1){return new Zc(e,t)}},af={sgd:rf.sgd,momentum:rf.momentum,adadelta:rf.adadelta,adagrad:rf.adagrad,rmsprop:rf.rmsprop,adamax:rf.adamax,adam:rf.adam},sf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function of(){return new Promise((e=>sf((()=>e()))))}var lf={};function uf(e,t){let n=e[0].length;e.forEach(((e,t)=>{Y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Y(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function pf(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}g(lf,{ERF_A1:()=>kf,ERF_A2:()=>If,ERF_A3:()=>Sf,ERF_A4:()=>Nf,ERF_A5:()=>Tf,ERF_P:()=>wf,PARALLELIZE_THRESHOLD:()=>hf,SELU_SCALE:()=>vf,SELU_SCALEALPHA:()=>xf,applyActivation:()=>Bd,assertAndGetBroadcastShape:()=>_o,assertAxesAreInnerMostDims:()=>ep,assertParamsConsistent:()=>uf,assignToTypedArray:()=>Ff,axesAreInnerMostDims:()=>Yu,calculateShapes:()=>Wo,checkEinsumDimSizes:()=>Wf,checkPadOnDimRoundingMode:()=>nu,combineLocations:()=>Zu,complexWithEvenIndex:()=>Ef,complexWithOddIndex:()=>$f,computeConv2DInfo:()=>jl,computeConv3DInfo:()=>ql,computeDefaultPad:()=>Kl,computeDilation2DInfo:()=>Ul,computeOptimalWindowSize:()=>df,computeOutAndReduceShapes:()=>Ju,computeOutShape:()=>pf,computePool2DInfo:()=>Gl,computePool3DInfo:()=>Hl,convertConv2DDataFormat:()=>tu,decodeEinsumEquation:()=>Pf,eitherStridesOrDilationsAreOne:()=>eu,expandShapeToKeepDim:()=>Qu,exponent:()=>Df,exponents:()=>Rf,fromStringArrayToUint8:()=>um,fromUint8ToStringArray:()=>lm,getAxesPermutation:()=>tp,getBroadcastDims:()=>No,getComplexWithIndex:()=>Af,getEinsumComputePath:()=>Vf,getEinsumPermutation:()=>Bf,getFusedBiasGradient:()=>Pd,getFusedDyActivation:()=>zd,getImageCenter:()=>cf,getInnerMostAxes:()=>rp,getPermuted:()=>mf,getReductionAxes:()=>To,getReshaped:()=>ff,getReshapedPermuted:()=>gf,getSliceBeginCoords:()=>yf,getSliceSize:()=>bf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>jf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>qf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Kf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Zf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Qf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Jf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Xf,getSparseReshapeNegativeOutputDimErrorMessage:()=>Yf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>rm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>em,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>tm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>nm,getUndoAxesPermutation:()=>np,isIdentityPermutation:()=>Uf,log:()=>na,mergeRealAndImagArrays:()=>_f,prepareAndValidate:()=>Lo,prepareSplitSize:()=>Hf,segment_util:()=>am,shouldFuse:()=>Wd,slice_util:()=>Vo,splitRealAndImagArrays:()=>Cf,tupleValuesAreOne:()=>Ql,upcastType:()=>ns,validateInput:()=>Bo,validateUpdateShape:()=>Po,warn:()=>ta});var hf=30;function df(e){return e<=hf?e:Ne(e,Math.floor(Math.sqrt(e)))}function cf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ff(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function mf(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function gf(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function yf(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function bf(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var xf=1.7580993408473768,vf=1.0507009873554805,wf=.3275911,kf=.254829592,If=-.284496736,Sf=1.421413741,Nf=-1.453152027,Tf=1.061405429;function _f(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Cf(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ef(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function $f(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Af(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ff(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Rf(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Df(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Mf="->",Of=/->/g,Lf=",",zf="...";function Pf(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Of,"").length)/Mf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Mf}").`);let[r,a]=e.split(Mf);Y(-1===r.indexOf(zf),(()=>`The ellipsis notation ("${zf}") is not supported yet.`));let s=r.split(Lf),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&t!==Lf&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,p=[];for(let e=a.length;e<u;++e)p.push(e);return{allDims:o,summedDims:p,idDims:l}}function Bf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Wf(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Y(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Vf(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Gf(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Uf(e){return e.every(((e,t)=>e===t))}function Gf(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Hf(e,t,n=0){let r=[];if("number"==typeof t)Y(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Y(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function jf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function qf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Kf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Xf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Yf(e,t){return`size ${e} must be non-negative, not ${t}`}function Zf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Jf(e,t){return`Input to reshape is a SparseTensor with ${ee(e)}\n  dense values, but the requested shape requires a multiple of ${ee(t)}. inputShape=${e} outputShape= ${t}`}function Qf(e,t){return`Input to reshape is a tensor with ${ee(e)} dense values, but the requested shape has ${ee(t)}. inputShape=${e} outputShape=${t}`}function em(){return"segment ids must be >= 0"}function tm(){return"segment ids are not increasing"}function nm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function rm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var am={};function sm(e,t){let n,r=!1;for(e<=hf?(n=e,r=!0):n=Ne(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ne(e,n+1);return n}function im(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function om(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),p*=e.shape[t];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function lm(e){try{return e.map((e=>Da(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function um(e){return e.map((e=>Ra(e)))}g(am,{collectGatherOpShapeInfo:()=>om,computeOutShape:()=>im,segOpComputeOptimalWindowSize:()=>sm});var pm={};g(pm,{nonMaxSuppressionV3Impl:()=>sc,nonMaxSuppressionV4Impl:()=>ic,nonMaxSuppressionV5Impl:()=>oc,whereImpl:()=>Nd});var hm={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,pd(Si(n,"float32"),-1))}}},dm={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=up(Si(n,"float32")),r=lp(Up(op(1),t));return vo(Cl(e,r))}}}},cm={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=lp(Up(up(Si(n,"float32")),1));return Cl(e,t)}}}},fm={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=e,r=To(n.shape,a);return r.length>0&&(t=pp(t,r)),ru(t,n.shape)},b:()=>{let t=e,n=To(r.shape,a);return n.length>0&&(t=pp(t,n)),ru(t,r.shape)}}}},mm={kernelName:Ke,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},gm={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Gu(n)}}},ym={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Gu(n)}}},bm={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,lp(Up(op(1),up(Si(n,"float32")))))}}},xm={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=lp(Tl(op(1),up(Si(n,"float32"))));return Cl(e,t)}}}},vm={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=Tl(up(n),up(r)),s=El(e,Cl(r,t)),i=To(n.shape,a);return i.length>0&&(s=pp(s,i)),ru(s,n.shape)},b:()=>{let t=Tl(up(n),up(r)),s=vo(El(e,Cl(n,t))),i=To(r.shape,a);return i.length>0&&(s=pp(s,i)),ru(s,r.shape)}}}},wm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,Tl(up(Si(n,"float32")),1))}}},km={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,Up(op(1),up(Si(n,"float32"))))}}};var Im=_s({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Ss(e,"dy","avgPool3dGrad"),o=Ss(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=ru(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=ru(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Y(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),nu("avgPool3dGrad",a,s);let h={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=cs.runKernel(ot,h,d);return p?ru(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Sm={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Im(e,r,a,s,i,o)}}};var Nm=_s({avgPoolGrad_:function(e,t,n,r,a){let s=Ss(e,"dy","avgPoolGrad"),i=Ss(t,"input","avgPoolGrad");Y(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=ru(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=ru(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Y(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let p={dy:l,input:o},h={filterSize:n,strides:r,pad:a},d=cs.runKernel(st,p,h);return u?ru(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Tm={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Nm(e,r,a,s,i)}}},_m={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Xi(e,a,!1,!1),b:()=>Xi(e,r,!0,!1)}:s&&!i?{a:()=>Xi(a,e,!1,!0),b:()=>Xi(r,e,!1,!1)}:{a:()=>Xi(a,e,!0,!0),b:()=>Xi(e,r,!0,!0)}:{a:()=>Xi(e,a,!1,!0),b:()=>Xi(r,e,!0,!1)}}},Cm={kernelName:ut,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>wh(e,r,a)}}},Em={kernelName:ht,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>pp(e,o,!0)}}},$m={kernelName:ct,gradFunc:e=>({x:()=>e.clone()})},Am={kernelName:ft,gradFunc:e=>({x:()=>Gu(e)})},Fm={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Uu(jp(Ip(r,a),Ep(r,s)),e,Gu(e))}}},Rm={kernelName:yt,inputsToSave:["x"],gradFunc:hm.gradFunc},Dm={kernelName:bt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=pe(a,t[0].shape)[0],i=r.map((e=>e[s]));return sd(e,i,s).map((e=>()=>e))}},Mm={kernelName:xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Y(Ql(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Cu(r.shape,e,a,i,o,l),filter:()=>Ld(r,e,a.shape,i,o,l)}}},Om={kernelName:wt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Tu(e,a,s,i,o,1,l),filter:()=>Ld(e,r,a.shape,s,i,o,l)}}};var Lm=_s({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=ru(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ru(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Y(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Y(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Y(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Y(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return cs.runKernel(It,o,l)}}),zm={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Y(Ql(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Au(i.shape,e,o,a,s),filter:()=>Lm(i,e,o.shape,a,s)}}},Pm={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(vo(Xh(Si(n,"float32"))),e)}}},Bm={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(Yh(Si(n,"float32")),e)}}},Wm={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=tp([a],r.rank),n=Ou(e,a,s,!i);return null!=t&&(n=ko(n,t)),n}}}},Vm={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Y(Ql(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Y(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Y(eu(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),nu("depthwiseConv2d",s,i),{x:()=>Gd(l.shape,e,u,a,s,o,i),filter:()=>Ud(l,e,u.shape,a,s,o,i)}}},Um={kernelName:Ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>cs.runKernel(Lt,s,n),filter:()=>cs.runKernel(zt,i,n)}}},Gm={kernelName:Wt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>cs.runKernel(Vt,r)}}},Hm={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=El(fp(vo(up(n))),2/Math.sqrt(Math.PI));return{x:()=>El(e,r)}}},jm={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,n)}}},qm={kernelName:jt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>ru(e,n.shape)}}},Km={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,fp(n))}}},Xm={kernelName:Zt,gradFunc:e=>({x:()=>Gu(e)})},Ym={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=Cl(e,Si(r,"float32")),s=To(n.shape,a);return s.length>0?ru(pp(t,s),n.shape):t},b:()=>{let t=El(e,Si(n,"float32")),s=To(r.shape,a);s.length>0&&(t=ru(pp(t,s),r.shape));let i=up(r);return vo(Cl(t,Si(i,"float32")))}}}},Zm={kernelName:Qt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?op(1):o,u=To(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}let h=Up(a,s),d=El(e,l),c=Gh(Tl(i,op(r))),f=El(El(El(c,c),c),op(-.5));return{x:()=>1===s.rank?ru(El(El(e,yp(ru(c,[1,1,1,s.shape[0]]),p)),l),a.shape):ru(El(El(e,c),l),a.shape),mean:()=>{let e=El(El(c,op(-1)),d);return 1===s.rank&&(e=pp(e,u)),ru(e,s.shape)},variance:()=>{let e=El(El(f,h),d);return 1===s.rank&&(e=pp(e,u)),ru(e,s.shape)},scale:()=>{let t=El(h,c),n=El(e,t);return 1===s.rank&&(n=pp(n,u)),ru(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=pp(t,u)),ru(t,s.shape)}}}},Jm={kernelName:en,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=pe(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),p=u.length,h=Qm(0,l),d=Qm(l+1,l+1+p),c=eg([o,[n],u]),f=ru(e,c),m=ru(a,[n]),g=eg([[l],h,d]),y=ko(f,g),b=wd(y,m,r.shape[i]),x=np(g);return b=ko(b,x),b},indices:()=>a}}};function Qm(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function eg(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var tg={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Gu(n),b:()=>Gu(r)}}},ng={kernelName:an,gradFunc:e=>({x:()=>Si(e,"float32")})},rg={kernelName:ln,gradFunc:e=>({x:()=>Gu(e)})},ag={kernelName:un,gradFunc:e=>({x:()=>Gu(e)})},sg={kernelName:pn,gradFunc:e=>({x:()=>Gu(e)})},ig={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=kp(r,0);return{x:()=>Uu(s,e,El(e,a))}}},og={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,Tl(n,1))}}},lg={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,Si(n,"float32"))}}},ug={kernelName:wn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=fp(r);return Up(e,El(pp(e,a,!0),t))}}}};var pg=_s({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return cs.runKernel(Sn,o,l)}}),hg={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>pg(r,a,e,s,i,o,l)}}};function dg(e,t,n,r){return t.rank<n.rank&&(t=ru(t,Qu(t.shape,r))),e.rank<n.rank&&(e=ru(e,Qu(e.shape,r))),{x:()=>El(e,Si(Vu(n,t),e.dtype))}}var cg={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=dg(e,t[1],s,pe(a,s.shape));return{x:()=>i.x()}}},fg={kernelName:Tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>El(e,Si(Ip(n,r),"float32")),b:()=>El(e,Si(Cp(n,r),"float32"))}}};var mg=_s({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Ss(e,"dy","maxPool3dGrad"),l=Ss(t,"input","maxPool3dGrad"),u=Ss(n,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;4===l.rank&&(c=!0,p=ru(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ru(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ru(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Y(5===p.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`)),Y(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Y(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),nu("maxPool3dGrad",s,i);let f={dy:p,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=cs.runKernel($n,f,m);return c?ru(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),gg={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>mg(e,r,a,s,i,o,l)}}};var yg=_s({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Ss(e,"dy","maxPoolGrad"),l=Ss(t,"input","maxPoolGrad"),u=Ss(n,"output","maxPoolGrad");Y(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Y(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Y(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),nu("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return cs.runKernel(Cn,p,h)}}),bg={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>yg(e,r,a,s,i,o)}}},xg={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=pe(a,r.shape),i=ee(Ju(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=ru(e,t);return Cl(El(n,sh(r.shape,"float32")),i)}}}},vg={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=dg(e,i,s,pe(a,s.shape));return{x:()=>o.x()}}},wg={kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>El(e,Si(Ep(n,r),"float32")),b:()=>El(e,Si(kp(n,r),"float32"))}}},kg={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>lu(e,s,r.shape)}}},Ig={kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=To(n.shape,a);return t.length>0?ru(pp(e,t),n.shape):e},b:()=>{let t=El(e,vo(vp(Cl(n,r)))),s=To(r.shape,a);return s.length>0?ru(pp(t,s),r.shape):t}}}},Sg={kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=El(e,Si(r,"float32")),s=To(n.shape,a);return s.length>0?ru(pp(t,s),n.shape):t},b:()=>{let t=El(e,Si(n,"float32")),s=To(r.shape,a);return s.length>0?ru(pp(t,s),r.shape):t}}}},Ng={kernelName:Pn,gradFunc:e=>({x:()=>vo(e)})},Tg={kernelName:Hn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>ah(n.shape,"float32")}}},_g={kernelName:Gn,gradFunc:e=>({x:()=>Gu(e)})},Cg={kernelName:jn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return kd(e,r).map((e=>()=>e))}},Eg={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>lu(e,s,r.shape)}}},$g={kernelName:Xn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=_o(s.shape,i.shape);return{a:()=>{let t=Si(i,"float32"),n=El(e,El(t,ip(s,Up(t,op(1))))),r=To(s.shape,o);return r.length>0&&(n=pp(n,r)),ru(n,s.shape)},b:()=>{let t=kp(s,0),n=Uu(t,Fp(s),Gu(s)),r=El(e,El(a,n)),l=To(i.shape,o);return l.length>0&&(r=pp(r,l)),ru(r,i.shape)}}}},Ag={kernelName:Yn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=kp(n,0);return{x:()=>Uu(a,e,El(e,r)),alpha:()=>{let t=Uu(a,Gu(e),El(e,n)),s=To(r.shape,e.shape);return s.length>0&&(t=pp(t,s)),ru(t,r.shape)}}}};function Fg(e,t,n){let r=e.shape.length,a=r-n.length,s=lf.getAxesPermutation(n,r),i=e;null!=s&&(i=ko(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=ru(t,r),s=Mu(e,n,!0,!1),i=Mu(e,n,!0,!0),o=El(s,i);return El(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=lf.getUndoAxesPermutation(s);u=ko(u,e)}return u}var Rg={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>Fg(r,e,s)}}},Dg={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=Cl(e,Si(r,"float32")),s=To(n.shape,a);return s.length>0?ru(pp(t,s),n.shape):t},b:()=>{let t=El(e,Si(n,"float32")),s=To(r.shape,a);s.length>0&&(t=ru(pp(t,s),r.shape));let i=up(r);return vo(Cl(t,Si(i,"float32")))}}}},Mg={kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,vo(up(n)))}}},Og={kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=El(Ep(n,6),pd(n));return{x:()=>El(e,Si(r,"float32"))}}},Lg={kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,Si(pd(n),"float32"))}}},zg={kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ru(e,n.shape)}}},Pg={kernelName:sr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>cs.runKernel(ir,a,n)}}},Bg={kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>cs.runKernel(ar,a,n)}}},Wg={kernelName:lr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=pe(r,e.shape);return{x:()=>zh(e,a)}}},Vg={kernelName:ur,gradFunc:e=>({x:()=>Gu(e)})},Ug={kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>vo(Cl(e,El(ip(n,1.5),2)))}}},Gg={kernelName:cr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Si(Gu(n),"float32"),t:()=>El(e,Si(n,e.dtype)),e:()=>El(e,Si(qp(n),e.dtype))}}},Hg={kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=kp(n,op(0)),r=op(xf),a=op(vf),s=El(e,a),i=El(El(e,r),fp(Si(n,"float32")));return Uu(t,s,i)}}}},jg={kernelName:xr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,El(n,Up(op(1),n)))}}},qg={kernelName:br,gradFunc:e=>({x:()=>Gu(e)})},Kg={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(Ru(Si(n,"float32")),e)}}},Xg={kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(Du(Si(n,"float32")),e)}}},Yg={kernelName:mr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=sl(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>gh(e,u)}}},Zg={kernelName:Nr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=El(e,r);return{logits:()=>Up(s,El(pp(s,[a],true),r))}}},Jg={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,ou(n))}}},Qg={kernelName:Ir,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>hu(e,r,a)}}},ey={kernelName:Sr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>iu(e,r)}}},ty={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,El(lp(Si(n,"float32")),2))}}},ny={kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(e,El(Si(n,"float32"),2))}}},ry={kernelName:Ar,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=op(2);return{a:()=>El(e,El(a,Up(n,r))),b:()=>El(e,El(a,Up(r,n)))}}},ay={kernelName:Xr,gradFunc:e=>({x:()=>Gu(e)})},sy={kernelName:Lr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_o(n.shape,r.shape);return{a:()=>{let t=e,r=To(n.shape,a);return r.length>0&&(t=pp(t,r)),ru(t,n.shape)},b:()=>{let t=e,n=To(r.shape,a);return n.length>0&&(t=pp(t,n)),ru(vo(t),r.shape)}}}},iy={kernelName:kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;pe(s,r.shape).forEach((e=>{a[e]=1}));let i=ru(e,a),o=El(i,sh(r.shape,"float32"));return{x:()=>o}}},oy={kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cl(e,up(Ru(n)))}}},ly={kernelName:Pr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>El(Up(op(1),up(n)),e)}}},uy={kernelName:Br,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Gu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Tl(t,lu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Tl(t,lu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Tl(t,lu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Tl(t,lu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},py={kernelName:Ur,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=np(a);return{x:()=>ko(e,s)}}},hy={kernelName:Hr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>ud(e,a)}}},dy={kernelName:jr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=nh(t,Gu(t)),r=wp(e,n),a=Ip(t,op(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=mp(a,e+1);a=jp(a,sh(r.shape,"bool"));let i=Gu(r);return Uu(a,r,i)}(e,n)}}};var cy={kernelName:Kr,gradFunc:e=>({x:()=>Gu(e)})},fy=[hm,dm,cm,fm,mm,gm,ym,bm,xm,vm,wm,km,Sm,Tm,_m,Cm,Em,$m,Am,Fm,Rm,Dm,Om,Mm,zm,Pm,Bm,Wm,Vm,Um,Dg,Gm,Hm,jm,qm,Km,Ym,Xm,Zm,Jm,tg,ng,rg,ag,sg,ig,og,lg,ug,hg,cg,cg,fg,gg,bg,xg,vg,wg,kg,Ig,Sg,Ng,Tg,_g,Cg,Eg,Eg,$g,Ag,Rg,Mg,Og,Lg,zg,Pg,Bg,Wg,Vg,Ug,Gg,Hg,jg,qg,Kg,Xg,Yg,Zg,Jg,Qg,Qg,ey,ey,ty,ry,ny,ay,sy,iy,oy,ly,uy,py,hy,dy,cy];for(let e of fy)ua(e);qa().prototype.abs=function(){return this.throwIfDisposed(),$l(this)},qa().prototype.acos=function(){return this.throwIfDisposed(),Al(this)},qa().prototype.acosh=function(){return this.throwIfDisposed(),Fl(this)},qa().prototype.add=function(e){return this.throwIfDisposed(),Tl(this,e)},qa().prototype.all=function(e,t){return this.throwIfDisposed(),Dl(this,e,t)},qa().prototype.any=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},qa().prototype.argMax=function(e){return this.throwIfDisposed(),Ol(this,e)},qa().prototype.argMin=function(e){return this.throwIfDisposed(),Ll(this,e)},qa().prototype.asScalar=function(){return this.throwIfDisposed(),Y(1===this.size,(()=>"The array must have only 1 element.")),ru(this,[])},qa().prototype.asType=function(e){return this.throwIfDisposed(),Si(this,e)},qa().prototype.as1D=function(){return this.throwIfDisposed(),ru(this,[this.size])},qa().prototype.as2D=function(e,t){return this.throwIfDisposed(),ru(this,[e,t])},qa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ru(this,[e,t,n])},qa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ru(this,[e,t,n,r])},qa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),ru(this,[e,t,n,r,a])},qa().prototype.asin=function(){return this.throwIfDisposed(),zl(this)},qa().prototype.asinh=function(){return this.throwIfDisposed(),Pl(this)},qa().prototype.atan=function(){return this.throwIfDisposed(),Bl(this)},qa().prototype.atan2=function(e){return this.throwIfDisposed(),Wl(this,e)},qa().prototype.atanh=function(){return this.throwIfDisposed(),Vl(this)},qa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),au(this,e,t,n,r)},qa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),hu(this,e,t)},qa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),cu(this,e,t,n,r,a)},qa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),xu(this,e)},qa().prototype.cast=function(e){return this.throwIfDisposed(),Si(this,e)},qa().prototype.ceil=function(){return this.throwIfDisposed(),vu(this)},qa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),wu(this,e,t)},qa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ja&&(e=[e]),iu([this,...e],t)},qa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),_u(this,e,t,n,r,a,s)},qa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Eu(this,e,t,n,r,a)},qa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Tu(this,e,t,n,r,a,s)},qa().prototype.cos=function(){return this.throwIfDisposed(),Ru(this)},qa().prototype.cosh=function(){return this.throwIfDisposed(),Du(this)},qa().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Mu(this,e,t,n)},qa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ou(this,e,t,n)},qa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),zu(this,e,t)},qa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Pu(this,e,t,n,r,a,s)},qa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Wu(this,e,t,n,r,a)},qa().prototype.divNoNan=function(e){return this.throwIfDisposed(),Hu(this,e)},qa().prototype.div=function(e){return this.throwIfDisposed(),Cl(this,e)},qa().prototype.dot=function(e){return this.throwIfDisposed(),ju(this,e)},qa().prototype.elu=function(){return this.throwIfDisposed(),Ku(this)},qa().prototype.equal=function(e){return this.throwIfDisposed(),Vu(this,e)},qa().prototype.erf=function(){return this.throwIfDisposed(),Xu(this)},qa().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),cp(this,e,t)},qa().prototype.exp=function(){return this.throwIfDisposed(),fp(this)},qa().prototype.expandDims=function(e){return this.throwIfDisposed(),mp(this,e)},qa().prototype.expm1=function(){return this.throwIfDisposed(),gp(this)},qa().prototype.fft=function(){return this.throwIfDisposed(),nd(this)},qa().prototype.flatten=function(){return this.throwIfDisposed(),ru(this,[this.size])},qa().prototype.floor=function(){return this.throwIfDisposed(),vp(this)},qa().prototype.floorDiv=function(e){return this.throwIfDisposed(),_l(this,e)},qa().prototype.gather=function(e,t){return this.throwIfDisposed(),wp(this,e,t)},qa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ip(this,e)},qa().prototype.greater=function(e){return this.throwIfDisposed(),kp(this,e)},qa().prototype.ifft=function(){return this.throwIfDisposed(),rd(this)},qa().prototype.irfft=function(){return this.throwIfDisposed(),ad(this)},qa().prototype.isFinite=function(){return this.throwIfDisposed(),Sp(this)},qa().prototype.isInf=function(){return this.throwIfDisposed(),Np(this)},qa().prototype.isNaN=function(){return this.throwIfDisposed(),Tp(this)},qa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_p(this,e)},qa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ep(this,e)},qa().prototype.less=function(e){return this.throwIfDisposed(),Cp(this,e)},qa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ap(this,e,t,n,r)},qa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Vp(this)},qa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Gp(this,e)},qa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Hp(this,e,t)},qa().prototype.log=function(){return this.throwIfDisposed(),Fp(this)},qa().prototype.log1p=function(){return this.throwIfDisposed(),Rp(this)},qa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),jp(this,e)},qa().prototype.logicalNot=function(){return this.throwIfDisposed(),qp(this)},qa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Kp(this,e)},qa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Xp(this,e)},qa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xi(this,e,t,n)},qa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Qp(this,e,t,n,r)},qa().prototype.max=function(e,t){return this.throwIfDisposed(),ap(this,e,t)},qa().prototype.maximum=function(e){return this.throwIfDisposed(),nh(this,e)},qa().prototype.mean=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},qa().prototype.min=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},qa().prototype.minimum=function(e){return this.throwIfDisposed(),oh(this,e)},qa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},qa().prototype.mod=function(e){return this.throwIfDisposed(),uh(this,e)},qa().prototype.mul=function(e){return this.throwIfDisposed(),El(this,e)},qa().prototype.neg=function(){return this.throwIfDisposed(),vo(this)},qa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),dp(this,e,t,n)},qa().prototype.notEqual=function(e){return this.throwIfDisposed(),ch(this,e)},qa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yi(this,e,t,n)},qa().prototype.onesLike=function(){return this.throwIfDisposed(),fh(this)},qa().prototype.pad=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},qa().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),kh(this,e,t,n,r,a,s)},qa().prototype.pow=function(e){return this.throwIfDisposed(),ip(this,e)},qa().prototype.prelu=function(e){return this.throwIfDisposed(),Ih(this,e)},qa().prototype.prod=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},qa().prototype.reciprocal=function(){return this.throwIfDisposed(),Mh(this)},qa().prototype.relu=function(){return this.throwIfDisposed(),Oh(this)},qa().prototype.relu6=function(){return this.throwIfDisposed(),Lh(this)},qa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ru(this,e.shape)},qa().prototype.reshape=function(e){return this.throwIfDisposed(),ru(this,e)},qa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),yc(this,e,t,n)},qa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),bc(this,e,t,n)},qa().prototype.reverse=function(e){return this.throwIfDisposed(),zh(this,e)},qa().prototype.rfft=function(){return this.throwIfDisposed(),id(this)},qa().prototype.round=function(){return this.throwIfDisposed(),Uh(this)},qa().prototype.rsqrt=function(){return this.throwIfDisposed(),Gh(this)},qa().prototype.selu=function(){return this.throwIfDisposed(),Hh(this)},qa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),jh(this,e,t,n,r,a,s)},qa().prototype.sigmoid=function(){return this.throwIfDisposed(),ou(this)},qa().prototype.sign=function(){return this.throwIfDisposed(),Kh(this)},qa().prototype.sin=function(){return this.throwIfDisposed(),Xh(this)},qa().prototype.sinh=function(){return this.throwIfDisposed(),Yh(this)},qa().prototype.slice=function(e,t){return this.throwIfDisposed(),lu(this,e,t)},qa().prototype.softmax=function(e){return this.throwIfDisposed(),td(this,e)},qa().prototype.softplus=function(){return this.throwIfDisposed(),Wp(this)},qa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),wh(this,e,t)},qa().prototype.split=function(e,t){return this.throwIfDisposed(),sd(this,e,t)},qa().prototype.sqrt=function(){return this.throwIfDisposed(),lp(this)},qa().prototype.square=function(){return this.throwIfDisposed(),up(this)},qa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),od(this,e)},qa().prototype.squeeze=function(e){return this.throwIfDisposed(),ld(this,e)},qa().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof ja?[this,e]:[this,...e];return ud(n,t)},qa().prototype.step=function(e){return this.throwIfDisposed(),pd(this,e)},qa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),hd(this,e,t,n,r,a,s,i,o)},qa().prototype.sub=function(e){return this.throwIfDisposed(),Up(this,e)},qa().prototype.sum=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},qa().prototype.tan=function(){return this.throwIfDisposed(),dd(this)},qa().prototype.tanh=function(){return this.throwIfDisposed(),uu(this)},qa().prototype.tile=function(e){return this.throwIfDisposed(),yp(this,e)},qa().prototype.toBool=function(){return this.throwIfDisposed(),Si(this,"bool")},qa().prototype.toFloat=function(){return this.throwIfDisposed(),Si(this,"float32")},qa().prototype.toInt=function(){return this.throwIfDisposed(),Si(this,"int32")},qa().prototype.topk=function(e,t){return this.throwIfDisposed(),bd(this,e,t)},qa().prototype.transpose=function(e){return this.throwIfDisposed(),ko(this,e)},qa().prototype.unique=function(e){return this.throwIfDisposed(),vd(this,e)},qa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),wd(this,e,t)},qa().prototype.unstack=function(e){return this.throwIfDisposed(),kd(this,e)},qa().prototype.where=function(e,t){return this.throwIfDisposed(),Uu(e,this,t)},qa().prototype.zerosLike=function(){return this.throwIfDisposed(),Gu(this)};var my=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,my.prototype)}},gy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gy.prototype)}},yy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yy.prototype)}},by=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,by.prototype)}},xy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xy.prototype)}},vy=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function wy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function ky(e,t){if(!e)throw new xy(t)}function Iy(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Sy(e){return 1===e.length?e[0]:e}function Ny(e){return Array.isArray(e)?e:[e]}function Ty(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function _y(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Cy={};function Ey(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function $y(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>$y(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?$y(t):e[n]=t.value)}}}function Ay(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in Cy)a=Cy[s];else if(a=t[s],null==a)throw new yy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new yy(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in Cy?[i,o]=Cy.className:l in t&&([i,o]=t[l]),null==i)throw new yy(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(Cy))e[t]=Cy[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},Cy);for(let e of Object.keys(n))Cy[e]=n[e];$y(s.config);let r=o(i,s.config,n,a);return Cy=Object.assign({},t),r}{let e=Object.assign({},Cy);for(let e of Object.keys(n))Cy[e]=n[e];let t=new i(s.config);return Cy=Object.assign({},e),t}}}function Fy(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ry(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function Dy(e){if(null==e)throw new yy(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function My(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new yy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Oy(e,t,n=0,r=1/0){return ky(n>=0),ky(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Ly(e,t){Array.isArray(e)?(fa.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ly(e,`element ${n+1} of ${t}`)))):fa.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${zy(e)}.`))}function zy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>zy(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Py(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var By=0;function Wy(){return By++}var Vy={};function Uy(e=""){return e in Vy||(Vy[e]=0),Vy[e]+=1,e+Vy[e].toString()}var Gy=["channelsFirst","channelsLast"],Hy=["nearest","bilinear"],jy=["valid","same","causal"],qy=["max","avg"],Ky=["sum","mul","concat","ave"],Xy=new Map;function Yy(e){My(Gy,"DataFormat",e)}function Zy(e){My(jy,"PaddingMode",e)}function Jy(e){My(qy,"PoolMode",e)}var Qy=[];function eb(e,t){Qy.push(e);try{let e=t();return Qy.pop(),e}catch(e){throw Qy.pop(),e}}function tb(e){if(!sb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Qy.length?"":Qy.join("/")+"/")+e}function nb(e){if(!sb(e))throw new Error("Not a valid tensor name: '"+e+"'");Xy.has(e)||Xy.set(e,0);let t=Xy.get(e);if(Xy.set(e,Xy.get(e)+1),t>0){let n=`${e}_${t}`;return Xy.set(n,1),n}return e}var rb,ab=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function sb(e){return!!e.match(ab)}function ib(e){return e===parseInt(e.toString(),10)}function ob(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function lb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function ub(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function pb(e,t){if(t<e)throw new yy(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function hb(){return null==rb&&(rb=yo().epsilon()),rb}function db(e,t){return Si(e,t)}function cb(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ru(e,n)}function fb(e,t,n){return so((()=>{switch(e.rank){case 1:return Zh(e,t,n);case 2:return Jh(e,[t,0],[n,e.shape[1]]);case 3:return Qh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ed(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return lu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return lu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new yy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function mb(e,t,n){return so((()=>{switch(e.rank){case 1:return Zh(e,t,n);case 2:return Jh(e,[0,t],[e.shape[0],n]);case 3:return Qh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ed(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new yy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gb(e,t,n,r){return so((()=>{switch(e.rank){case 1:return Zh(e,t,n);case 2:switch(r){case 1:return fb(e,t,n);case 2:return mb(e,t,n);default:throw new yy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return fb(e,t,n);case 2:return Qh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mb(e,t,n);default:throw new yy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return fb(e,t,n);case 2:return ed(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ed(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mb(e,t,n);default:throw new yy(`The axis is not within the rank of the tensor ${r}`)}default:throw new yy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),iu(e,t)}function bb(e,t){switch(e.rank){case 1:return ku([e,t]);case 2:return Iu([e,t],0);case 3:return Su([e,t],0);case 4:return Nu([e,t],0);default:throw new yy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function xb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new yy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return yp(e,t)}function vb(e,t=0,n=1,r,a){return Ah(e,t,n,r,a)}function wb(e,t,n,r){if(e.rank<2||t.rank<2)throw new by(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new by(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return Od.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Sb(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=ru(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ru(ko(t,p),[l,-1]);let h=[...a,...u],d=!1,c=!1;return ru(Od.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?Sb(e.rank,r,"channelsLast"):null,activation:n}),h)}}function kb(e,t,n){return so((()=>(t=Array.isArray(t)?cd(t,"int32"):Si(t,"int32"),wp(e,t,n))))}function Ib(e){return El(e,e)}function Sb(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new yy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?ru(t,[1,r[0],1,1,1]):ru(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ru(t,[1,1,1,1,r[0]]):ru(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?ru(t,[1,r[0],1,1]):ru(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ru(t,[1,1,1,r[0]]):ru(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?ru(t,[1,r[0],1]):ru(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ru(t,[1,1,r[0]]):ru(t,[1].concat(r))}else if(e<3)return t;throw new yy(`Unsupported input rank by biasAdd: ${t.rank}`)}function Nb(e,t,n){return so((()=>(null==n&&(n="channelsLast"),Yy(n),Tl(e,Sb(e.rank,t,n)))))}function Tb(e,t,n,r){return so((()=>Fd(e,t,n,r)))}function _b(e,t,n=!1){return n?e():t()}var Cb=["fanIn","fanOut","fanAvg"],Eb=["normal","uniform","truncatedNormal"];var $b=class extends ll.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ab=class extends $b{apply(e,t){return ah(e,t)}};Ab.className="Zeros",ll.registerClass(Ab);var Fb=class extends $b{apply(e,t){return sh(e,t)}};Fb.className="Ones",ll.registerClass(Fb);var Rb=class extends $b{constructor(e){if(super(),"object"!=typeof e)throw new yy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new yy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return so((()=>El(op(this.value),sh(e,t))))}getConfig(){return{value:this.value}}};Rb.className="Constant",ll.registerClass(Rb);var Db=class extends $b{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Rh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Db.className="RandomUniform",ll.registerClass(Db);var Mb=class extends $b{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new by(`randomNormal does not support dType ${t}.`);return vb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Mb.className="RandomNormal",ll.registerClass(Mb);var Ob=class extends $b{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new by(`truncatedNormal does not support dType ${t}.`);return xd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ob.className="TruncatedNormal",ll.registerClass(Ob);var Lb=class extends $b{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return so((()=>{if(2!==e.length||e[0]!==e[1])throw new yy("Identity matrix initializer can only be used for 2D square matrices.");return El(this.gain,bp(e[0]))}))}getConfig(){return{gain:this.gain}}};Lb.className="Identity",ll.registerClass(Lb);var zb=class extends $b{constructor(e){if(super(),e.scale<0)throw new yy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){My(Cb,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){My(Eb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(Yy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=ob(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=ob(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=ob(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new by(`${this.getClassName()} does not support dType ${t}.`);return xd(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Rh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};zb.className="VarianceScaling",ll.registerClass(zb);var Pb=class extends zb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Pb.className="GlorotUniform",ll.registerClass(Pb);var Bb=class extends zb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Bb.className="GlorotNormal",ll.registerClass(Bb);var Wb=class extends zb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Wb.className="HeNormal",ll.registerClass(Wb);var Vb=class extends zb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Vb.className="HeUniform",ll.registerClass(Vb);var Ub=class extends zb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Ub.className="LeCunNormal",ll.registerClass(Ub);var Gb=class extends zb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zb.className}};Gb.className="LeCunNormal",ll.registerClass(Gb);var Hb=class extends $b{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new by("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return so((()=>{if(e.length<2)throw new by("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=vb(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Hc.gramSchmidt(t);return e[0]>e[1]&&(n=ko(n)),El(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Hb.className="Orthogonal",ll.registerClass(Hb);var jb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qb(e,t={}){return Ay(e,ll.SerializationMap.getMap().classNameMap,t,"initializer")}function Kb(e){return Ey(e)}function Xb(e){if("string"==typeof e){let t=e in jb?jb[e]:e;if("GlorotNormal"===t)return new Bb;if("GlorotUniform"===t)return new Pb;if("HeNormal"===t)return new Wb;if("HeUniform"===t)return new Vb;if("LeCunNormal"===t)return new Ub;if("LeCunUniform"===t)return new Gb;{let e={};return e.className=t,e.config={},qb(e)}}return e instanceof $b?e:qb(e)}function Yb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Zb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Jb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new yy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Qb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new yy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ex(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var tx="Variable",nx=class{constructor(e,t="float32",n=tx,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Wy(),n=null==n?tx:n,this.originalName=tb(n),this.name=nb(this.originalName),this.trainable_=r,this.constraint=a,this.val=Sd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function rx(e){return e.map((e=>e.read()))}function ax(e){e.forEach((e=>{e[0].write(e[1])}))}var sx=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},ix=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Wy(),null!=s&&(this.originalName=tb(s),this.name=nb(this.originalName)),this.rank=t.length}},ox=0,lx=class{constructor(e,t){this.callArgs=t,this.id=ox++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},ux=0,px=class extends ll.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ux++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=Ty(e)+"_"+Uy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new gy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new yy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new my(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new my(`Layer ${this.name} is not connected, no input to return.`);return Sy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new my(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new my(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ny(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=Ny(this.inputSpec);if(e.length!==t.length)throw new yy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new yy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new yy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new yy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new yy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new yy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new yy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Ny(e),r=!0;for(let e of n)if(!(e instanceof ix)){r=!1;break}let a=!0;for(let e of n)if(e instanceof ix){a=!1;break}if(r===a)throw new yy("Arguments to apply() must be all SymbolicTensors or all Tensors");return eb(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of Ny(e))t.push(n.shape);this.build(Sy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=Ny(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Sy(s),null!=this.activityRegularizer)throw new by("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=Ny(e);let t=[];for(let n of e)t.push(n.shape);return Sy(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new ix(s,n,this,Ny(e),t,this.name,r))):new ix(s,a,this,Ny(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new by("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new my(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new my(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new gy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ex(this.weights)}build(e){this.built=!0}getWeights(e=!1){return rx(e?this.trainableWeights:this.weights)}setWeights(e){so((()=>{let t=this.weights;if(t.length!==e.length)throw new yy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=rx(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!fa.arraysEqual(s.shape,o.shape))throw new yy(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ax(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new yy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Xb("zeros"));let l=r.apply(t,n),u=new nx(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ny(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=Ny(e);t=Ny(t),n=Ny(n),r=Ny(r),a=Zb(a),s=Zb(s);let l=[],u=[],p=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),p.push(e.tensorIndex);new lx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function hx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=hx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var dx=class extends px{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Uy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new yy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new yy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new yy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new ix(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new lx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new yy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function cx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new yy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new dx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}dx.className="InputLayer",ll.registerClass(dx);var fx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof fx)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new yy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Si(t,e.dtype)}catch(n){throw new yy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ix){if(null==this.id2Value[e.id])throw new yy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new yy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ix){if(null==this.id2Value[e.id])throw new yy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new yy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&io(this.id2Mask)}},mx=new vy,gx=new vy;function yx(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p,h=o.join(",")+"|"+t.names().sort().join(","),d=mx.get(h);if(null==d){let e=function(e,t){fa.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=xx(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=xx(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:bx(r)}}(i,t);d=e.sorted,p=e.recipientCounts,mx.put(h,d),gx.put(h,p)}p={},a||Object.assign(p,gx.get(h));let c=new fx(t);for(let e=0;e<d.length;++e){if(null!=r){let e=ro().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof dx)continue;let u=[],h=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),h.push(r),null!=r&&(m=!0),a||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=h[0]);let g=Ny(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,h));let b=vx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||io(f)}return c.disposeMasks(),s?l:l[0]}function bx(e){let t={};for(let n in e)t[n]=e[n].size;return t}function xx(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function vx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}Pe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=mx&&mx.setMaxEntries(e),null!=gx&&gx.setMaxEntries(e)}));var wx={};function kx(e,t){return so((()=>lp(pp(El(e,e),t,!0))))}g(wx,{maxNorm:()=>Fx,minMaxNorm:()=>Mx,nonNeg:()=>Dx,unitNorm:()=>Rx});var Ix=class extends ll.Serializable{getConfig(){return{}}},Sx=class extends Ix{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>{let t=kx(e,this.axis),n=wu(t,0,this.maxValue);return El(e,Cl(n,Tl(hb(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Sx.className="MaxNorm",ll.registerClass(Sx);var Nx=class extends Ix{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>Cl(e,Tl(hb(),kx(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Nx.className="UnitNorm",ll.registerClass(Nx);var Tx=class extends Ix{apply(e){return Oh(e)}};Tx.className="NonNeg",ll.registerClass(Tx);var _x=class extends Ix{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>{let t=kx(e,this.axis),n=Tl(El(this.rate,wu(t,this.minValue,this.maxValue)),El(1-this.rate,t));return El(e,Cl(n,Tl(hb(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};_x.className="MinMaxNorm",ll.registerClass(_x);var Cx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ex(e){return Ey(e)}function $x(e,t={}){return Ay(e,ll.SerializationMap.getMap().classNameMap,t,"constraint")}function Ax(e){if(null==e)return null;if("string"==typeof e){return $x({className:e in Cx?Cx[e]:e,config:{}})}return e instanceof Ix?e:$x(e)}function Fx(e){return new Sx(e)}function Rx(e){return new Nx(e)}function Dx(){return new Tx}function Mx(e){return new _x(e)}var Ox={};function Lx(){return new Ab}function zx(){return new Fb}function Px(e){return new Rb(e)}function Bx(e){return new Db(e)}function Wx(e){return new Mb(e)}function Vx(e){return new Ob(e)}function Ux(e){return new Lb(e)}function Gx(e){return new zb(e)}function Hx(e){return new Pb(e)}function jx(e){return new Bb(e)}function qx(e){return new Wb(e)}function Kx(e){return new Vb(e)}function Xx(e){return new Ub(e)}function Yx(e){return new Gb(e)}function Zx(e){return new Hb(e)}g(Ox,{constant:()=>Px,glorotNormal:()=>jx,glorotUniform:()=>Hx,heNormal:()=>qx,heUniform:()=>Kx,identity:()=>Ux,leCunNormal:()=>Xx,leCunUniform:()=>Yx,ones:()=>zx,orthogonal:()=>Zx,randomNormal:()=>Wx,randomUniform:()=>Bx,truncatedNormal:()=>Vx,varianceScaling:()=>Gx,zeros:()=>Lx});var Jx,Qx={};async function ev(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];io(r)}}function tv(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}g(Qx,{Layer:()=>px,RNN:()=>mk,RNNCell:()=>gk,activation:()=>LI,add:()=>jI,alphaDropout:()=>OS,average:()=>qI,averagePooling1d:()=>nS,averagePooling2d:()=>sS,averagePooling3d:()=>lS,avgPool1d:()=>rS,avgPool2d:()=>iS,avgPool3d:()=>uS,avgPooling1d:()=>aS,avgPooling2d:()=>oS,avgPooling3d:()=>pS,batchNormalization:()=>QI,bidirectional:()=>CS,concatenate:()=>KI,conv1d:()=>CI,conv2d:()=>EI,conv2dTranspose:()=>$I,conv3d:()=>AI,conv3dTranspose:()=>FI,convLstm2d:()=>SS,convLstm2dCell:()=>NS,cropping2D:()=>DI,dense:()=>zI,depthwiseConv2d:()=>OI,dot:()=>JI,dropout:()=>PI,elu:()=>kI,embedding:()=>HI,flatten:()=>WI,gaussianDropout:()=>MS,gaussianNoise:()=>DS,globalAveragePooling1d:()=>hS,globalAveragePooling2d:()=>dS,globalMaxPool1d:()=>$S,globalMaxPool2d:()=>AS,globalMaxPooling1d:()=>cS,globalMaxPooling2d:()=>fS,gru:()=>bS,gruCell:()=>xS,input:()=>gw,inputLayer:()=>wI,layerNormalization:()=>eS,leakyReLU:()=>SI,lstm:()=>vS,lstmCell:()=>wS,masking:()=>LS,maxPool1d:()=>FS,maxPool2d:()=>RS,maxPooling1d:()=>mS,maxPooling2d:()=>gS,maxPooling3d:()=>yS,maximum:()=>XI,minimum:()=>YI,multiply:()=>ZI,permute:()=>GI,prelu:()=>NI,reLU:()=>II,repeatVector:()=>VI,reshape:()=>UI,rnn:()=>TS,separableConv2d:()=>RI,simpleRNN:()=>kS,simpleRNNCell:()=>IS,softmax:()=>TI,spatialDropout1d:()=>BI,stackedRNNCells:()=>_S,thresholdedReLU:()=>_I,timeDistributed:()=>ES,upSampling2d:()=>MI,zeroPadding2d:()=>tS}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Jx||(Jx={}));var nv=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},rv=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},av=class extends nv{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=so((()=>Tl(this.totals[e],El(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:so((()=>{let n=El(Cl(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),oo(t[e])})))}},sv=class extends nv{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},iv=class extends nv{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||of,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");fa.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():fa.now();return(...s)=>{let i=null!=n?n():fa.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await ev(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ev(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await ev(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ev(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await ev(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):fa.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ev(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ev(e),await this.trainEnd(e))}};function ov(e,t){return null==e&&(e={}),e instanceof nv?[e]:Array.isArray(e)&&e[0]instanceof nv?e:Ny(e).map((e=>new iv(e,t)))}var lv=class{constructor(){}static registerCallbackConstructor(e,t){fa.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),lv.checkForDuplicate(t),null==lv.constructors[e]&&(lv.constructors[e]=[]),lv.constructors[e].push(t)}static checkForDuplicate(e){for(let t in lv.constructors)lv.constructors[+t].forEach((t=>{if(t===e)throw new yy("Duplicate callback constructor.")}))}static clear(){lv.constructors={}}static createCallbacks(e){let t=[];for(let n in lv.constructors){let r=+n;e>=r&&t.push(...lv.constructors[r])}return t.map((e=>new e))}};function uv(e,t,n,r,a,s,i,o,l){let u=new sv,p=[new av,...lv.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let h=new rv(p);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function pv(e,t={},n=!1){return Ay(e,ll.SerializationMap.getMap().classNameMap,t,"layer",n)}function hv(e,t){return so((()=>{"float32"!==e.dtype&&(e=Si(e,"float32"));let n=pp(Ib(e),t,!0),r=xp(n.shape,hb()),a=lp(nh(n,r));return Cl(e,a)}))}function dv(e,t){return so((()=>rh(Ib(Up(t,e)),-1)))}function cv(e,t){return so((()=>rh($l(Up(t,e)),-1)))}function fv(e,t){return so((()=>{let n=Up(e,t),r=wu($l(e),hb(),Number.MAX_VALUE),a=$l(Cl(n,r));return El(100,rh(a,-1))}))}function mv(e,t,n=!1){return so((()=>{if(n)t=td(t);else{let e=pp(t,t.shape.length-1,!0);t=Cl(t,e)}return t=wu(t,hb(),1-hb()),vo(pp(El(Si(e,"float32"),Fp(t)),t.shape.length-1))}))}function gv(e,t,n=!1){return so((()=>{let r=Si(vp(function(e){let t=[ob(e.shape)];return ru(e,t)}(e)),"int32"),a=(t=wu(t,hb(),1-hb())).shape;return mv(ru(Yi(r,a[a.length-1]),a),t,n)}))}function yv(e,t){return so((()=>{let n;return n=wu(t,hb(),1-hb()),n=Fp(Cl(n,Up(1,n))),rh(function(e,t){if(!fa.arraysEqual(e.shape,t.shape))throw new yy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return so((()=>{let n=Oh(t),r=vo($l(t));return Tl(Up(n,El(t,e)),Rp(fp(r)))}))}(e,n),-1)}))}function bv(e,t){return so((()=>{let n=hv(e,-1),r=hv(t,-1),a=El(n,r);return vo(pp(a,-1))}))}lv.constructors={};var xv={meanSquaredError:dv,meanAbsoluteError:cv,meanAbsolutePercentageError:fv,meanSquaredLogarithmicError:function(e,t){return so((()=>{let n=wu(t,hb(),Number.MAX_VALUE),r=Fp(Tl(1,n)),a=wu(e,hb(),Number.MAX_VALUE),s=Fp(Tl(1,a));return rh(Ib(Up(r,s)),-1)}))},squaredHinge:function(e,t){return so((()=>{let n=nh(0,Up(1,El(e,t)));return rh(Ib(n),-1)}))},hinge:function(e,t){return so((()=>{let n=nh(0,Up(1,El(e,t)));return rh(n,-1)}))},categoricalHinge:function(e,t){return so((()=>{let n=pp(El(e,t),-1),r=ap(El(Up(1,e),t),-1);return nh(0,Tl(1,Up(r,n)))}))},logcosh:function(e,t){return so((()=>{let n=Math.log(2),r=Up(t,e),a=Up(Tl(r,Wp(El(-2,r))),n);return rh(a,-1)}))},categoricalCrossentropy:mv,sparseCategoricalCrossentropy:gv,binaryCrossentropy:yv,kullbackLeiblerDivergence:function(e,t){return so((()=>{let n=wu(e,hb(),1),r=wu(t,hb(),1);return pp(El(e,Fp(Cl(n,r))),-1)}))},poisson:function(e,t){return so((()=>{let n=Fp(Tl(hb(),t));return rh(Up(t,El(e,n)),-1)}))},cosineProximity:bv};function vv(e){if("string"==typeof e){if(e in xv)return xv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new yy(t)}return e}function wv(e,t){return so((()=>{let n=El(.5,fh(t)),r=db(kp(t,n),e.dtype);return rh(Vu(e,r),-1)}))}function kv(e,t){return so((()=>db(Vu(Ol(e,-1),Ol(t,-1)),"float32")))}function Iv(e,t){return so((()=>Si(pp(jp(Vu(e,1),Vu(t,1))),"float32")))}function Sv(e,t){return so((()=>{let n=Iv(e,t),r=function(e,t){return so((()=>Si(pp(jp(Vu(e,0),Vu(t,1))),"float32")))}(e,t),a=Tl(n,r);return Si(Uu(kp(a,0),Cl(n,a),0),"float32")}))}function Nv(e,t){return so((()=>{let n=Iv(e,t),r=function(e,t){return so((()=>Si(pp(jp(Vu(e,1),Vu(t,0))),"float32")))}(e,t),a=Tl(n,r);return Si(Uu(kp(a,0),Cl(n,a),0),"float32")}))}function Tv(e,t){return yv(e,t)}function _v(e,t){return e.rank===t.rank&&(e=ld(e,[e.rank-1])),(t=Ol(t,-1)).dtype!==e.dtype&&(t=Si(t,e.dtype)),Si(Vu(e,t),"float32")}var Cv=mv,Ev=gv,$v={binaryAccuracy:wv,categoricalAccuracy:kv,precision:Sv,categoricalCrossentropy:Cv,sparseCategoricalCrossentropy:Ev,mse:dv,MSE:dv,mae:cv,MAE:cv,mape:fv,MAPE:fv,cosine:bv};function Av(e){if("string"==typeof e&&e in $v)return $v[e];if("string"!=typeof e&&null!=e)return e;throw new yy(`Unknown metric ${e}`)}function Fv(e){if(ky(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(xv))if(xv[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys($v))if($v[n]===e){t=n;break}return void 0!==t?t:e.name}}function Rv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Dv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Dv(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!Dv(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!Dv(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Mv(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ov(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?Lv(o[e],n,r):zv(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?ex(e.collectedTrainableWeights):ex(e.trainableWeights),t}(e),u=ex(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Ov(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Lv(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ov([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function zv(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Ov([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Ov(["","","","",i[e]],t,r)}function Pv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Bv(e,t){if(null===e)return null;if("string"==typeof e)return _y(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Pv(t,a,r)?n.push(r):n.push(Bv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=_y(n);t[e]=Bv(r,e)}}return t}}function Wv(e,t){if(null==e)return null;if("string"==typeof e)return Ty(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Pv(t,a,r)?n.push(r):n.push(Wv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=Ty(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Wv(r,n):r}return t}}var Vv="3.19.0",Uv=class extends px{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=Uy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ry(this.inputs).length!==this.inputs.length)throw new yy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ry(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ky(0===n,"input layer has >1 nodes"),ky(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof dx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new gy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Uv.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let p=u.inboundLayers.length;for(let e=0;e<p;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let p=i.slice().reverse();for(let e of p){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let h={};for(let e in t){let r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(Fy);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof Uv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(h).map((e=>parseInt(e,10))).sort(Fy);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new gy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new gy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new lx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new yy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new yy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new yy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new yy(`${e.length} of ${r} weights are not set: ${e}`)}ax(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Vv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Wv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return so((()=>{e=Ny(e);let n=new fx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return yx(this.outputs,n,t)}))}computeMask(e,t){return so((()=>{let n;return e=Ny(e),n=null==t?wy(null,e.length):Ny(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Zb(e);if(t.length!==this.inputLayers.length)throw new yy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Fy);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=Zb(t.computeOutputShape(Sy(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];ky(t in n),a.push(n[t])}return Sy(a)}runInternalGraph(e,t){null==t&&(t=wy(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Fy);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=Ny(t.call(e,u)),l=Ny(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Ny(t.call(r,u)),l=Ny(t.computeMask(r,i));if(t.activityRegularizer)throw new by("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){ky(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Uv?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=Uv.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new yy(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new yy("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new yy(`No such layer: ${e}`)}calculateLosses(){return so((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Uv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=Uv.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[Uv.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Uv.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Uv.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let p=a[o];if(p.inboundNodes.length<=l)return void i(e,t);let h=p.inboundNodes[l];r.push(h.outputTensors[u])}r.length>0&&e.apply(Sy(r),n)}function l(e){let n=e.name,s=pv(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new yy(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,p=t.layers;for(let e of p)l(e);for(;!Dy(s);)for(let e of p){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let h=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];ky(t in a);let s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];ky(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new yy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){so((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Gv(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Hv(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=so((()=>{if(1===e.shape.length)return Ni(e);if(2===e.shape.length){if(e.shape[1]>1)return Ol(e,1);if(1===e.shape[1])return ru(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());io(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),cd(a,"float32")}return null}function jv(e,t){return El(e,t)}function qv(e,t){let n,r,a=t;n=a.xs,r=a.ys,fa.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Kv("input",e.inputNames,n),i=Kv("output",e.outputNames,r),o=s[0].shape[0];fa.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),fa.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)fa.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)fa.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Kv(e,t,n){if(n instanceof ja)return[n];if(Array.isArray(n))return fa.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new yy(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Xv(e,t,n){let r=null!=n.batchesPerEpoch;if(fa.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),fa.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),fa.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),fa.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),fa.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Yv(n.validationData))fa.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new by("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let p=ov(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=uv(p,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let p=0,h=0;for(r||(m=await t.iterator());!r||p<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${p} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=qv(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=Gv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Hv(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);io(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,oo(n)}await d.onBatchEnd(h,s),tv(s),h++,p++}if(r?p>=n.batchesPerEpoch:t.done){if(i){let t;t=Yv(n.validationData)?Ny(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ny(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Yv(e){return"function"==typeof e.iterator}function Zv(e){fa.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Jv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>fb(e,t,n-t))):fb(e,t,n-t)}function Qv(e,t){return so((()=>null==e?null:Array.isArray(e)?e.map((e=>Qv(e,t))):kb(e,"int32"===t.dtype?t:Si(t,"int32"))))}function ew(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function tw(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,p,h,d;e.isTraining=!0;try{let c=null==r.batchSize?32:r.batchSize;Zv(c);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new by("validationData including sample weights is not supported yet."):new yy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];let t=!0,n=await e.standardizeUserData(l,u,null,null,t,c);p=n[0],h=n[1],g=p.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];p=Jv(a,e,t),i=a,a=Jv(a,0,e),h=Jv(s,e,t),o=s,s=Jv(s,0,e),g=p.concat(h)}else null!=r.validationSteps&&(y=!0);let b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x,v,w=e.makeTrainFunction(),k=e.getDedupedMetricsNames();y?(e.makeTestFunction(),x=e.testFunction,v=k.slice().concat(k.map((e=>"val_"+e)))):(x=null,g=[],v=k.slice());let I=ov(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,p,h,d,c,f){null==a&&(a=32),null==s&&(s=1),null==p&&(p=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new yy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=pb(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=uv(o,i,s,d,y,c,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new by("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new by("batch shuffling is not implemneted yet");p&&fa.shuffle(g);let i=cd(g),o=ew(y,a);for(let p=0;p<o.length;++p){let h={};if(await b.onBatchBegin(p,h),so((()=>{let d=o[p][0],c=o[p][1],f=fb(i,d,c-d);h.batch=p,h.size=c-d;let g=Qv(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];h[t]=n,oo(n)}if(p===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];oo(a),s["val_"+n]=a}}})),await b.onBatchEnd(p,h),tv(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,w,b,k,c,r.epochs,r.verbose,I,x,g,r.shuffle,v,r.initialEpoch,null,null)}finally{e.isTraining=!1,rw(a,t),rw(s,n),rw(i,t),rw(o,n),rw(p,l),rw(h,u),null!=d&&io(d)}}function nw(e){let t=[];e instanceof ja&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(cb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function rw(e,t){if(null==e)return;let n=[];if(t instanceof ja)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof ja)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function aw(e){return Array.isArray(e)}function sw(e){return!function(e){return e instanceof ja}(e)&&!aw(e)}function iw(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(aw(e)&&e.length>0)t=!0;else if(sw(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new yy(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(sw(e)){s=[];for(let n of t){if(null==e[n])throw new yy(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(aw(e)){if(e.length!==t.length)throw new yy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new yy(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=nw(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new yy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new yy(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function ow(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new yy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new yy(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new yy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new yy(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var lw=class extends Uv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new yy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Mv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>af.adagrad(.01),Adadelta:()=>af.adadelta(1,.95,hb()),Adam:()=>af.adam(.001,.9,.999,hb()),Adamax:()=>af.adamax(.002,.9,.999,hb(),0),RMSProp:()=>af.rmsprop(.001,.9,0,hb()),SGD:()=>af.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new yy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Xc))throw new yy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new yy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>vv(e)))}else{let n=vv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new yy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(vv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],eb("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};eb("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===yv?-1!==["accuracy","acc"].indexOf(i)?r=wv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Tv):this.lossFunctions[e]===gv?-1!==["accuracy","acc"].indexOf(i)?r=_v:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ev):-1!==["accuracy","acc"].indexOf(i)?r=kv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Cv),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=Av(i),n=""+Fv(i);let t;eb(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Zv(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return Sy(this.testLoop(t,e,r,n.verbose,n.steps))}finally{rw(a[0],e),rw(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new by("Verbose mode is not implemented yet.");fa.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=so((()=>{if(t.value){let{xs:n,ys:r}=qv(e,t.value),i=n.concat(r),u=so((()=>a(i)));if(io(i),0===l)for(let e=0;e<u.length;++e)s.push(op(0));let p=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=so((()=>Tl(s[e],El(p,t)))),l>0&&io(n)}io(u),o+=p,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=Cl(s[e],o),io(t)}return Sy(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new yy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new yy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new yy("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new fx;if(e instanceof ja&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new yy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new yy(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=yx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=wy(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new yy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return so((()=>{let r=this.checkNumSamples(e);if(n)throw new by("Verbose predictLoop() is not implemented yet.");let a=ew(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)so((()=>{let n=a[t][0],r=a[t][1],s=Jv(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new fx(i);return yx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Sy(s.map((e=>iu(e,0))))}))}predict(e,t={}){let n=nw(e);ow(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return Zv(e),this.predictLoop(n,e)}finally{rw(n,e)}}predictOnBatch(e){ow(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new gy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===gv?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){let n=Ry(e.map((e=>e.shape[0])));n.sort();let r=Ry(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new yy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new yy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!fa.arraysEqual(n,r))throw new yy(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=iw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=iw(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[dv,yv,mv];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===mv&&1===s.shape[s.shape.length-1])throw new yy(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new yy(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new yy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Gv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Hv(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return so((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new by("Verbose mode is not implemented yet.");if(null!=a)throw new by("steps mode in testLoop() is not implemented yet");{let r=ew(s,n),a=cd(pb(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=fb(a,s,o-s),u=Qv(t,l),p=e(u);if(0===n)for(let e=0;e<p.length;++e)i.push(op(0));for(let e=0;e<p.length;++e){let t=p[e];i[e]=Tl(i[e],El(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Cl(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;Iy(e,r)>1&&(a+=`_${Iy(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new fx(e),l=yx(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],l[e]);null!=a[e]&&(n=jv(n,a[e]));let s=rh(n);t.push(s),i=0===e?n:Tl(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=rh(t(r[a],l[a]))}oo(n),s.push(n)}return i=rh(i),this.calculateLosses().forEach((e=>{i=Tl(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>so((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new fx(s),o=yx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=rh(r(a[e],o[e]));t=0===e?s:Tl(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=rh(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return tw(this,e,t,n)}async fitDataset(e,t){return Xv(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return io(s),rw(n[0],e),rw(n[1],t),Sy(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=ro().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ro().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ty(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ty(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ty(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ty(Fv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ty(Fv(e))));{let e={};for(let t in this.metrics)e[t]=Ty(Fv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=pv(Bv(e.optimizer_config));if("string"==typeof e.loss)t=_y(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>_y(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=_y(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>_y(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=_y(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=_i.getSaveHandlers(e);if(0===t.length)throw new yy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new yy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new yy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await _i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Vv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await _i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=_i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(Rv(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Rv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};lw.className="Model",ll.registerClass(lw);var uw=class extends lw{};async function pw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=pv(Bv(n),t);if(null!=e.weightsManifest){let t=await _i.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),io(t)}return r}async function hw(e,t){if(null==t&&(t={}),"string"==typeof e){let n=_i.getLoadHandlers(e,t);if(0===n.length)n.push(_i.browserHTTPRequest(e,t));else if(n.length>1)throw new yy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new yy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=pv(Bv(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new yy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=_i.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),io(e),io(t.map((e=>e.tensor)))}return o}(e,void 0,t)}uw.className="Functional",ll.registerClass(uw);var dw=class extends lw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Uy("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new yy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof dw||e instanceof lw;if(n){if(t=e,1!==t.outputs.length)throw new yy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new yy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new yy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=cx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new yy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new yy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=hx(this.outputs[0])}this.inboundNodes=[],new lx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:wy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Qb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new lw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new gy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new gy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new gy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new gy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new yy("Legacy serialization format not supported yet.");a=t}else fa.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof dw))throw new by(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=pv(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new yy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new yy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function cw(e){return new lw(e)}function fw(e){return new dw(e)}function mw(e,t){return null==t&&(t={}),hw(e,t)}function gw(e){return cx(e)}function yw(e,t){lv.registerCallbackConstructor(e,t)}dw.className="Sequential",ll.registerClass(dw);var bw=class extends ll.Serializable{getConfig(){return{}}},xw=class extends bw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new by(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ku(e)}(e,t)}};xw.className="elu",ll.registerClass(xw);var vw=class extends bw{apply(e){return Hh(e)}};vw.className="selu",ll.registerClass(vw);var ww=class extends bw{apply(e){return Oh(e)}};ww.className="relu",ll.registerClass(ww);var kw=class extends bw{apply(e){return so((()=>oh(6,Oh(e))))}};kw.className="relu6",ll.registerClass(kw);var Iw=class extends bw{apply(e){return e}};Iw.className="linear",ll.registerClass(Iw);var Sw=class extends bw{apply(e){return ou(e)}};Sw.className="sigmoid",ll.registerClass(Sw);var Nw=class extends bw{apply(e){return function(e){return so((()=>{let t=Tl(.5,El(.2,e));return wu(t,0,1)}))}(e)}};Nw.className="hardSigmoid",ll.registerClass(Nw);var Tw=class extends bw{apply(e){return Wp(e)}};Tw.className="softplus",ll.registerClass(Tw);var _w=class extends bw{apply(e){return function(e){return so((()=>Cl(e,Tl($l(e),1))))}(e)}};_w.className="softsign",ll.registerClass(_w);var Cw=class extends bw{apply(e){return uu(e)}};Cw.className="tanh",ll.registerClass(Cw);var Ew=class extends bw{apply(e,t=-1){return td(e,t)}};Ew.className="softmax",ll.registerClass(Ew);var $w=class extends bw{apply(e,t=-1){return Gp(e,t)}};$w.className="logSoftmax",ll.registerClass($w);var Aw=class extends bw{apply(e,t=1){return so((()=>El(ou(El(e,t)),e)))}};Aw.className="swish",ll.registerClass(Aw);var Fw=class extends bw{apply(e){return so((()=>El(e,uu(Wp(e)))))}};function Rw(e){return e.getClassName()}function Dw(e,t={}){return Ay(e,ll.SerializationMap.getMap().classNameMap,t,"activation")}function Mw(e){if(null==e){let e={className:"linear",config:{}};return Dw(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},Dw(t)}return e instanceof bw?e:Dw(e)}function Ow(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Fw.className="mish",ll.registerClass(Fw);var Lw=class extends ll.Serializable{},zw=class extends Lw{constructor(e){super(),Ow(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return so((()=>{let t=ah([1]);return this.hasL1&&(t=Tl(t,pp(El(this.l1,$l(e))))),this.hasL2&&(t=Tl(t,pp(El(this.l2,Ib(e))))),ru(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};zw.className="L1L2",ll.registerClass(zw);var Pw={l1l2:"L1L2"};function Bw(e){return Ey(e)}function Ww(e,t={}){return Ay(e,ll.SerializationMap.getMap().classNameMap,t,"regularizer")}function Vw(e){if(null==e)return null;if("string"==typeof e){return Ww({className:e in Pw?Pw[e]:e,config:{}})}return e instanceof Lw?e:Ww(e)}var Uw=class extends px{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Jb(e);let n=Oh(e);return null!=this.maxValue&&(n=wu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Uw.className="ReLU",ll.registerClass(Uw);var Gw=class extends px{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Jb(e);return _p(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Gw.className="LeakyReLU",ll.registerClass(Gw);var Hw=class extends px{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Xb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Vw(e.alphaRegularizer),this.alphaConstraint=Ax(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new yy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Qb(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new sx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Jb(e),Ih(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Kb(this.alphaInitializer),alphaRegularizer:Bw(this.alphaRegularizer),alphaConstraint:Ex(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Hw.className="PReLU",ll.registerClass(Hw);var jw=class extends px{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new by(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Jb(e);return Ku(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};jw.className="ELU",ll.registerClass(jw);var qw=class extends px{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Jb(e);return El(n,Si(kp(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};qw.className="ThresholdedReLU",ll.registerClass(qw);var Kw=class extends px{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ew).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Jb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Xw(e,t,n){if("number"==typeof e)return wy(e,t);if(e.length!==t)throw new yy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!ib(a))throw new yy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Yw(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Zw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ub([n-t,0]);else{if("same"!==r)throw new yy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Jw(e,t){return so((()=>(Yy(t),"channelsFirst"===t?ko(e,[0,2,3,1]):e)))}function Qw(e,t){return so((()=>(Yy(t),"channelsFirst"===t?ko(e,[0,2,3,4,1]):e)))}function ek(e,t,n,r=[1,1],a="valid",s,i,o=null){return so((()=>{if(null==s&&(s="channelsLast"),Yy(s),3!==e.rank&&4!==e.rank)throw new yy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new yy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Jw(e,s);if("causal"===a)throw new by("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Od.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=ko(l,[0,3,1,2])),l}))}Kw.className="Softmax",ll.registerClass(Kw);var tk=class extends px{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tk.verifyArgs(t),this.rank=e,Ly(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new by(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xw(t.kernelSize,e,"kernelSize"),this.strides=Xw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Zy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yy(this.dataFormat),this.activation=Mw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Xb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ax(t.biasConstraint),this.biasRegularizer=Vw(t.biasRegularizer),this.activityRegularizer=Vw(t.activityRegularizer),this.dilationRate=Xw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new yy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new yy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new yy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ky("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Oy(e.kernelSize,"number",1,3))throw new yy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Rw(this.activation),useBias:this.useBias,biasInitializer:Kb(this.biasInitializer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),biasConstraint:Ex(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},nk=class extends tk{constructor(e,t){super(e,t),this.kernel=null,nk.verifyArgs(t),this.filters=t.filters,Ly(this.filters,"filters"),this.kernelInitializer=Xb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ax(t.kernelConstraint),this.kernelRegularizer=Vw(t.kernelRegularizer)}build(e){e=Qb(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yy(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return so((()=>{e=Jb(e);let t,n=null==this.bias?null:this.bias.read(),r=Py(this.activation.getClassName());if(null!=r&&2===this.rank)t=ek(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return so((()=>{if(null==s&&(s="channelsLast"),Yy(s),3!==e.shape.length)throw new yy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new yy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new yy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=ko(e,[0,2,1])),"causal"===a)throw new by("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=_u(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Nb(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ek(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new by("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return so((()=>{if(null==s&&(s="channelsLast"),Yy(s),4!==e.rank&&5!==e.rank)throw new yy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new yy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Qw(e,s);if("causal"===a)throw new by("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=$u(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Nb(o,n)),"channelsFirst"===s&&(o=ko(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Qb(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=Yw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Kb(this.kernelInitializer),kernelRegularizer:Bw(this.kernelRegularizer),kernelConstraint:Ex(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new yy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},rk=class extends nk{constructor(e){super(2,e),rk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Oy(e.kernelSize,"number",1,2))throw new yy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};rk.className="Conv2D",ll.registerClass(rk);var ak=class extends nk{constructor(e){super(3,e),ak.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new yy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};ak.className="Conv3D",ll.registerClass(ak);var sk=class extends rk{constructor(e){if(super(e),this.inputSpec=[new sx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new yy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Qb(e)).length)throw new yy("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t=Jb(e);if(4!==t.shape.length)throw new yy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],h=this.strides[1],d=[s,Zw(i,p,l,this.padding),Zw(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ko(t,[0,2,3,1]));let c=Eu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=ko(c,[0,3,1,2])),null!=this.bias&&(c=Nb(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=Qb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Zw(a[n],o,s,this.padding),a[r]=Zw(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};sk.className="Conv2DTranspose",ll.registerClass(sk);var ik=class extends ak{constructor(e){if(super(e),this.inputSpec=[new sx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new yy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Qb(e)).length)throw new yy("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t=Jb(e);if(5!==t.shape.length)throw new yy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],p=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Zw(o,c,p,this.padding),Zw(l,f,h,this.padding),Zw(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ko(t,[0,2,3,4,1]));let y=Fu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=ko(y,[0,4,1,2,3])),null!==this.bias&&(y=Nb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=Qb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=Zw(s[n],u,i,this.padding),s[r]=Zw(s[r],p,o,this.padding),s[a]=Zw(s[a],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ik.className="Conv3DTranspose",ll.registerClass(ik);var ok=class extends nk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new yy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new yy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new yy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Xb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Vw(t.depthwiseRegularizer),this.depthwiseConstraint=Ax(t.depthwiseConstraint),this.pointwiseInitializer=Xb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Vw(t.pointwiseRegularizer),this.pointwiseConstraint=Ax(t.pointwiseConstraint)}build(e){if((e=Qb(e)).length<this.rank+2)throw new yy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new yy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new sx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t;if(e=Jb(e),1===this.rank)throw new by("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ko(e,[0,2,3,1])),t=jh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Nb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ko(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Kb(this.depthwiseInitializer),e.pointwiseInitializer=Kb(this.pointwiseInitializer),e.depthwiseRegularizer=Bw(this.depthwiseRegularizer),e.pointwiseRegularizer=Bw(this.pointwiseRegularizer),e.depthwiseConstraint=Ex(this.depthwiseConstraint),e.pointwiseConstraint=Ex(this.pointwiseConstraint),e}};ok.className="SeparableConv";var lk=class extends ok{constructor(e){super(2,e)}};lk.className="SeparableConv2D",ll.registerClass(lk);var uk=class extends nk{constructor(e){super(1,e),uk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Oy(e.kernelSize,"number",1,1))throw new yy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};uk.className="Conv1D",ll.registerClass(uk);var pk=class extends px{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return so((()=>{if(e=Jb(e),"channelsLast"===this.dataFormat){let t=gb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=gb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};pk.className="Cropping2D",ll.registerClass(pk);var hk=class extends px{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){My(Hy,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return so((()=>{let t=Jb(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=ko(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Gc.resizeNearestNeighbor(t,[e,r]):Gc.resizeBilinear(t,[e,r]);return ko(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Gc.resizeNearestNeighbor(t,[e,r]):Gc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};hk.className="UpSampling2D",ll.registerClass(hk);var dk=class extends tk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Xb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ax(e.depthwiseConstraint),this.depthwiseRegularizer=Vw(e.depthwiseRegularizer)}build(e){if((e=Qb(e)).length<4)throw new yy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new yy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return so((()=>{null==a&&(a="channelsLast"),Yy(a);let i=Jw(e,a);if(4!==e.rank)throw new yy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new yy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Pu(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=ko(i,[0,3,1,2])),i}))}(e=Jb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Nb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Qb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Yw(t,this.kernelSize[0],this.padding,this.strides[0]),s=Yw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Kb(this.depthwiseInitializer),e.depthwiseRegularizer=Bw(this.depthwiseRegularizer),e.depthwiseConstraint=Ex(this.depthwiseRegularizer),e}};function ck(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new yy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function fk(e,t,n,r=!1,a,s,i=!1,o=!1){return so((()=>{let l=t.shape.length;if(l<3)throw new yy(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(pb(2,l));if(t=ko(t,u),null!=s)throw new by("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Si(Si(a,"bool"),"float32")).rank===l-1&&(a=mp(a,-1)),a=ko(a,u)),r&&(t=zh(t,0),null!=a&&(a=zh(a,0)));let p,h,d,c=[],f=n,m=t.shape[0],g=kd(t);null!=a&&(h=kd(a));for(let t=0;t<m;++t){let n=g[t],r=so((()=>e(n,f)));if(null==a)p=r[0],f=r[1];else{let e=so((()=>{let e=h[t],n=Up(fh(e),e);return{output:Tl(El(r[0],e),El(f[0],n)),newStates:f.map(((t,a)=>Tl(El(r[1][a],e),El(t,n))))}}));p=e.output,f=e.newStates}o&&c.push(p)}return o&&(d=ud(c,1)),[p,d,f]}))}dk.className="DepthwiseConv2D",ll.registerClass(dk);var mk=class extends px{constructor(e){let t;if(super(e),null==e.cell)throw new yy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ik({cells:e.cell}):e.cell,null==t.stateSize)throw new yy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new sx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return pb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Yb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return so((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new by("Constants support is not implemented in RNN yet.");Yb(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new sx({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!fa.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new yy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new sx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){so((()=>{if(!this.stateful)throw new my("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new yy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ah([n,e]))):this.states_=[ah([n,this.cell.stateSize])];else if(null==e)io(this.states_),null!=this.keptStates&&(io(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ah([n,e]))):this.states_[0]=ah([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new yy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):io(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!fa.arraysEqual(r.shape,s))throw new yy(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>oo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ck(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new sx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof ix){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return so((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Jb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new yy(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=fk(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(p):h}))}getInitialState(e){return so((()=>{let t=ah(e.shape);return t=pp(t,[1,2]),t=cb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?xb(t,[1,e]):t)):this.cell.stateSize>1?[xb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===mk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=pv(t.cell,n);return new e(Object.assign(t,{cell:r}))}};mk.className="RNN",ll.registerClass(mk);var gk=class extends px{},yk=class extends gk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ly(this.units,"units"),this.activation=Mw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Qb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{if(2!==e.length)throw new yy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sk({ones:()=>fh(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sk({ones:()=>fh(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=wb(null!=s?El(e,s):e,this.kernel.read()),null!=this.bias&&(a=Nb(a,this.bias.read())),null!=i&&(n=El(n,i));let o=Tl(a,wb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Rw(this.activation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};yk.className="SimpleRNNCell",ll.registerClass(yk);var bk=class extends mk{constructor(e){e.cell=new yk(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(io(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(io(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};bk.className="SimpleRNN",ll.registerClass(bk);var xk=class extends gk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new yy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ly(this.units,"units"),this.activation=Mw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Mw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=Qb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{if(2!==e.length)throw new yy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sk({ones:()=>fh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sk({ones:()=>fh(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=El(e,o[0]));let u=wb(e,this.kernel.read());this.useBias&&(u=Nb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=El(r,l[0]));let p=this.recurrentKernel.read(),[h,d]=sd(p,[2*this.units,this.units],p.rank-1),c=wb(r,h),[f,m,g]=sd(u,3,u.rank-1),[y,b]=sd(c,2,c.rank-1);a=this.recurrentActivation.apply(Tl(f,y)),s=this.recurrentActivation.apply(Tl(m,b));let x=wb(El(s,r),d);i=this.activation.apply(Tl(g,x));let v=Tl(El(a,r),El(Tl(1,vo(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Rw(this.activation),recurrentActivation:Rw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};xk.className="GRUCell",ll.registerClass(xk);var vk=class extends mk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new xk(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(io(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(io(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};vk.className="GRU",ll.registerClass(vk);var wk=class extends gk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ly(this.units,"units"),this.activation=Mw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Mw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=Qb(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends $b{apply(t,n){let a=e.apply([r]),s=(new Fb).apply([r]),i=e.apply([2*r]);return bb(bb(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return so((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new yy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sk({ones:()=>fh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sk({ones:()=>fh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,p=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=El(e,u[0]));let h=wb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=El(r,p[0])),h=Tl(h,wb(r,this.recurrentKernel.read())),this.useBias&&(h=Nb(h,this.bias.read()));let[d,c,f,m]=sd(h,4,h.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=Tl(El(i,a),El(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=El(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Rw(this.activation),recurrentActivation:Rw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};wk.className="LSTMCell",ll.registerClass(wk);var kk=class extends mk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wk(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(io(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(io(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};kk.className="LSTM",ll.registerClass(kk);var Ik=class extends gk{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return so((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Yb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{eb(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(pv(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return rx(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ax(t)}};function Sk(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Tb(t(),n),o=()=>_b(i,t,r);return!a||a<=1?oo(o().clone()):Array(a).fill(void 0).map(o).map((e=>oo(e.clone())))}Ik.className="StackedRNNCells",ll.registerClass(Ik);var Nk=class extends mk{constructor(e){if(e.unroll)throw new by("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new by("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new sx({ndim:5})]}call(e,t){return so((()=>{if(null!=this.cell.dropoutMask&&(io(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(io(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new yy("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return so((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=ah([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){so((()=>{if(!this.stateful)throw new my("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new yy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ah(a))):this.states_=[ah(a)];else if(null==e)io(this.states_),null!=this.keptStates&&(io(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ah(a))):this.states_[0]=ah(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new yy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):io(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!fa.arraysEqual(n.shape,r))throw new yy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>oo(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],p=Yw(l,r[0],a,s[0],i[0]),h=Yw(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,h]:[p,h,n]]}};Nk.className="ConvRNN2D";var Tk=class extends wk{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Ly(this.filters,"filters"),this.kernelSize=Xw(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ly(e,"kernelSize"))),this.strides=Xw(r||1,2,"strides"),this.strides.forEach((e=>Ly(e,"strides"))),this.padding=a||"valid",Zy(this.padding),this.dataFormat=s||"channelsLast",Yy(this.dataFormat),this.dilationRate=Xw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ly(e,"dilationRate")))}build(e){var t;e=Qb(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new yy(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends $b{apply(e,t){return yb([n.apply([r]),sh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return so((()=>{if(3!==e.length)throw new yy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sk({ones:()=>fh(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?El(t[n],e):e,l=o(r,i,0),u=o(r,i,1),p=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sk({ones:()=>fh(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=sd(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?sd(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),p=this.inputConv(p,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);let[N,T,_,C]=sd(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(Tl(l,c)),$=this.recurrentActivation.apply(Tl(u,f)),A=Tl(El($,s),El(E,this.activation.apply(Tl(p,m)))),F=El(this.recurrentActivation.apply(Tl(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=Tu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Nb(a,n,this.dataFormat):a}recurrentConv(e,t){return Tu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Tk.className="ConvLSTM2DCell",ll.registerClass(Tk);var _k=class extends Nk{constructor(e){let t=new Tk(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};_k.className="ConvLSTM2D",ll.registerClass(_k);var Ck=class extends px{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return _b((()=>Tb(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Ck.className="Dropout",ll.registerClass(Ck);var Ek=class extends Ck{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ek.className="SpatialDropout1D",ll.registerClass(Ek);var $k=class extends px{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ly(this.units,"units"),this.activation=Mw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ax(e.kernelConstraint),this.biasConstraint=Ax(e.biasConstraint),this.kernelRegularizer=Vw(e.kernelRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.activityRegularizer=Vw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Qb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Qb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n,r=Jb(e),a=Py(this.activation.getClassName());return null!=a?n=wb(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=wb(r,this.kernel.read()),null!=this.bias&&(n=Nb(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:Rw(this.activation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),biasConstraint:Ex(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};$k.className="Dense",ll.registerClass($k);var Ak=class extends px{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Qb(e);for(let t of e.slice(1))if(null==t)throw new yy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ob(e,1)]}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ko(n,e)}return function(e){if(e.rank<=1)throw new yy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ob(e.shape,1)];return ru(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Ak.className="Flatten",ll.registerClass(Ak);var Fk=class extends px{constructor(e){super(e),this.supportsMasking=!0,this.activation=Mw(e.activation)}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);return this.activation.apply(n)}))}getConfig(){let e={activation:Rw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Fk.className="Activation",ll.registerClass(Fk);var Rk=class extends px{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return so((()=>function(e,t){return so((()=>{if(2!==e.shape.length)throw new yy(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return xb(cb(e,1),[1,t,1])}))}(e=Jb(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Rk.className="RepeatVector",ll.registerClass(Rk);var Dk=class extends px{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new yy("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=ob(e);if(null!==s){if(0===a||i%a!=0)throw new yy(n);r[s]=i/a}else if(i!==a)throw new yy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ru(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Dk.className="Reshape",ll.registerClass(Dk);var Mk=class extends px{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=pb(1,e.dims.length+1);if(!fa.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new sx({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Qb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return ko(Jb(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Mk.className="Permute",ll.registerClass(Mk);var Ok=class extends px{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Jb(e);return Ml(ch(n,this.maskValue),-1)}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e),r=Ml(ch(n,this.maskValue),-1,!0);return El(n,Si(r,n.dtype))}))}};Ok.className="Masking",ll.registerClass(Ok);var Lk=class extends px{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ny(e.inputLength))}this.inputDim=e.inputDim,Ly(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ly(this.outputDim,"outputDim"),this.embeddingsInitializer=Xb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Vw(e.embeddingsRegularizer),this.activityRegularizer=Vw(e.activityRegularizer),this.embeddingsConstraint=Ax(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return so((()=>this.maskZero?(e=Jb(e),ch(e,Gu(e))):null))}computeOutputShape(e){if(e=Qb(e),null==this.inputLength)return[...e,this.outputDim];let t=Ny(this.inputLength);if(t.length!==e.length-1)throw new yy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new yy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);"int32"!==n.dtype&&(n=db(n,"int32"));let r=kb(this.embeddings.read(),ru(n,[n.size]));return ru(r,Qb(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Kb(this.embeddingsInitializer),embeddingsRegularizer:Bw(this.embeddingsRegularizer),activityRegularizer:Bw(this.activityRegularizer),embeddingsConstraint:Ex(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Lk.className="Embedding",ll.registerClass(Lk);var zk=class extends px{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new by}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new yy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Qb(e)]),e.length<2)throw new yy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ry(t),t.length>1)throw new yy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ry(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return so((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=ub(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=cb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=ru(r,[a].concat(ob(e.slice(1))));i=ko(i,[1,0]),i=ru(i,s),t.push(i),n=!0}else if(e>1){let a=pb(1,e).concat([0]);t.push(ko(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ru(ko(ru(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(pb(0,a-1));r=ko(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ry(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return so((()=>{if(null==t)return null;if(!Array.isArray(t))throw new yy("`mask` should be an Array");if(!Array.isArray(e))throw new yy("`inputs` should be an Array");if(t.length!==e.length)throw new yy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:mp(e,0))))[0];for(let e=1;e<t.length-1;++e)n=jp(n,t[e]);return n}))}},Pk=class extends zk{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Tl(t,e[n]);return t}))}};Pk.className="Add",ll.registerClass(Pk);var Bk=class extends zk{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=El(t,e[n]);return t}))}};Bk.className="Multiply",ll.registerClass(Bk);var Wk=class extends zk{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Tl(t,e[n]);return El(1/e.length,t)}))}};Wk.className="Average",ll.registerClass(Wk);var Vk=class extends zk{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=nh(t,e[n]);return t}))}};Vk.className="Maximum",ll.registerClass(Vk);var Uk=class extends zk{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=oh(t,e[n]);return t}))}};Uk.className="Minimum",ll.registerClass(Uk);var Gk=class extends zk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new yy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(fa.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new yy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return so((()=>yb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new yy("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new yy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new yy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new yy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return so((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Si(fh(e[n]),"bool")):t[n].rank<e[n].rank?r.push(mp(t[n],-1)):r.push(t[n]);let a=iu(r,this.axis);return Dl(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Hk(e,t){for(;e<0;)e+=t;return e}Gk.className="Concatenate",ll.registerClass(Gk);var jk=class extends zk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){fa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new by("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new yy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new yy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Hk(t,e[n].shape.length))):[Hk(this.axes,n.shape.length),Hk(this.axes,r.shape.length)],this.normalize&&(n=hv(n,t[0]),r=hv(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new by("batchDot is not implemented for tensors of 4D or higher rank yet");if(fa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),fa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new by("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return so((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=ru(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=ru(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?pp(El(e,t),s[0]):pp(El(ko(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Xi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=ld(i,t)}return 1===i.shape.length&&(i=mp(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Hk(this.axes,e.length),Hk(this.axes,t.length)],n}computeOutputShape(e){fa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new by("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};jk.className="Dot",ll.registerClass(jk);var qk=class extends px{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);return _b((()=>Tl(vb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};qk.className="GaussianNoise",ll.registerClass(qk);var Kk=class extends px{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Jb(e);return this.rate>0&&this.rate<1?_b((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return El(n,vb(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Kk.className="GaussianDropout",ll.registerClass(Kk);var Xk=class extends px{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Jb(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return so((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return _b((()=>{let t=Jb(e),r=-1.7580993408473766,a=Ip(Rh(n),this.rate);a=db(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Tl(El(t,a),El(Tl(a,-1),r));return Tl(El(o,s),i)}),(()=>Jb(e)),t.training||!1)}return e}))}};function Yk(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=fu(e,t,n,r,a,s);else if(3===e.rank)i=mu(e,t,n,r,a,s);else{if(4!==e.rank)throw new by(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=gu(e,t,n,r,a,s)}return i}function Zk(e,t,n,r,a=.001){return fa.arraysEqual(r.slice().sort(),pb(0,e.rank-1))?function(e,t,n,r,a=.001){return so((()=>{let s=ph(e,r),i=s.mean,o=s.variance;return[Yk(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return so((()=>{let s=ph(e,r),i=s.mean,o=s.variance,l=[];for(let t of pb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=ru(i,l),p=ru(o,l),h=null==t?null:ru(t,l),d=null==n?null:ru(n,l);return[Yk(e,u,p,d,h,a),i,o]}))}(e,t,n,r,a)}Xk.className="AlphaDropout",ll.registerClass(Xk);var Jk=class extends px{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xb(e.betaInitializer||"zeros"),this.gammaInitializer=Xb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Xb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ax(e.betaConstraint),this.gammaConstraint=Ax(e.gammaConstraint),this.betaRegularizer=Vw(e.betaRegularizer),this.gammaRegularizer=Vw(e.gammaRegularizer)}build(e){e=Qb(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new yy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new sx({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return so((()=>{let n=null!=t.training&&t.training,r=Jb(e),a=r.shape,s=a.length,i=pb(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=wy(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!fa.arraysEqual(u,pb(0,s).slice(0,s-1));if(!n)return(()=>{if(p){let e=ru(this.movingMean.read(),l),t=ru(this.movingVariance.read(),l),n=this.center?ru(this.beta.read(),l):null,a=this.scale?ru(this.gamma.read(),l):null;return Yk(r,e,t,n,a,this.epsilon)}return Yk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[h,d,c]=Zk(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{so((()=>{let r=1-n,a=e.read(),s=El(Up(a,t),r);e.write(Up(a,s))}))};return f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum),h}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kb(this.betaInitializer),gammaInitializer:Kb(this.gammaInitializer),movingMeanInitializer:Kb(this.movingMeanInitializer),movingVarianceInitializer:Kb(this.movingVarianceInitializer),betaRegularizer:Bw(this.betaRegularizer),gammaRegularizer:Bw(this.gammaRegularizer),betaConstraint:Ex(this.betaConstraint),gammaConstraint:Ex(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Jk.className="BatchNormalization",ll.registerClass(Jk);var Qk=class extends px{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xb(e.betaInitializer||"zeros"),this.gammaInitializer=Xb(e.gammaInitializer||"ones"),this.betaRegularizer=Vw(e.betaRegularizer),this.gammaRegularizer=Vw(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Qb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ry(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Jb(e),r=n.shape,a=r.length;return so((()=>{let{mean:e,variance:t}=ph(n,this.axis,!0),s=wy(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?ru(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],p=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),p.push(1)):(u.push(1),p.push(r[e]));return e=yp(e,u),t=yp(t,u),null!=o&&(o=yp(o,p)),null!=l&&(l=yp(l,p)),Yk(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kb(this.betaInitializer),gammaInitializer:Kb(this.gammaInitializer),betaRegularizer:Bw(this.betaRegularizer),gammaRegularizer:Bw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Qk.className="LayerNormalization",ll.registerClass(Qk);var eI=class extends px{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new yy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new yy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new yy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new sx({ndim:4})]}computeOutputShape(e){let t,n;return e=Qb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return so((()=>function(e,t,n){return so((()=>{if(4!==e.rank)throw new yy(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new yy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new yy(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],gh(e,r)}))}(Jb(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function tI(e,t,n,r,a,s){return so((()=>{Yy(a),Jy(s),Zy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Jw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Qp(e,t,n,o):au(e,t,n,o),"channelsFirst"===a&&(i=ko(i,[0,3,1,2])),i}))}function nI(e,t,n,r,a,s){return so((()=>{Yy(a),Jy(s),Zy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Qw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?eh(e,t,n,o):su(e,t,n,o),"channelsFirst"===a&&(i=ko(i,[0,4,1,2,3])),i}))}eI.className="ZeroPadding2D",ll.registerClass(eI);var rI=class extends px{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new yy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ly(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new yy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Zy(this.padding),this.inputSpec=[new sx({ndim:3})]}computeOutputShape(e){let t=Yw((e=Qb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return so((()=>{this.invokeCallHook(e,t),e=cb(Jb(e),2);let n=this.poolingFunction(Jb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ld(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},aI=class extends rI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),tI(e,t,n,r,a,"max")}};aI.className="MaxPooling1D",ll.registerClass(aI);var sI=class extends rI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),tI(e,t,n,r,a,"avg")}};sI.className="AveragePooling1D",ll.registerClass(sI);var iI=class extends px{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new yy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ly(this.poolSize,"poolSize"),Ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),Zy(this.padding),this.inputSpec=[new sx({ndim:4})]}computeOutputShape(e){e=Qb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Yw(t,this.poolSize[0],this.padding,this.strides[0]),n=Yw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return so((()=>(this.invokeCallHook(e,t),this.poolingFunction(Jb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oI=class extends iI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),tI(e,t,n,r,a,"max")}};oI.className="MaxPooling2D",ll.registerClass(oI);var lI=class extends iI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),tI(e,t,n,r,a,"avg")}};lI.className="AveragePooling2D",ll.registerClass(lI);var uI=class extends px{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new yy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ly(this.poolSize,"poolSize"),Ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),Zy(this.padding),this.inputSpec=[new sx({ndim:5})]}computeOutputShape(e){e=Qb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Yw(t,this.poolSize[0],this.padding,this.strides[0]),n=Yw(n,this.poolSize[1],this.padding,this.strides[1]),r=Yw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return so((()=>(this.invokeCallHook(e,t),this.poolingFunction(Jb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},pI=class extends uI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),nI(e,t,n,r,a,"max")}};pI.className="MaxPooling3D",ll.registerClass(pI);var hI=class extends uI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Yy(a),Zy(r),nI(e,t,n,r,a,"avg")}};hI.className="AveragePooling3D",ll.registerClass(hI);var dI=class extends px{constructor(e){super(e),this.inputSpec=[new sx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new by}},cI=class extends dI{constructor(e){super(e||{})}call(e,t){return so((()=>{let t=Jb(e);return rh(t,1)}))}};cI.className="GlobalAveragePooling1D",ll.registerClass(cI);var fI=class extends dI{constructor(e){super(e||{})}call(e,t){return so((()=>{let t=Jb(e);return ap(t,1)}))}};fI.className="GlobalMaxPooling1D",ll.registerClass(fI);var mI=class extends px{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),this.inputSpec=[new sx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new by}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},gI=class extends mI{call(e,t){return so((()=>{let t=Jb(e);return"channelsLast"===this.dataFormat?rh(t,[1,2]):rh(t,[2,3])}))}};gI.className="GlobalAveragePooling2D",ll.registerClass(gI);var yI=class extends mI{call(e,t){return so((()=>{let t=Jb(e);return"channelsLast"===this.dataFormat?ap(t,[1,2]):ap(t,[2,3])}))}};yI.className="GlobalMaxPooling2D",ll.registerClass(yI);var bI=class extends px{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=pv(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},xI=class extends bI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Qb(e)).length<3)throw new yy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Qb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return so((()=>fk(((e,n)=>[Jb(this.layer.call(e,t)),[]]),e=Jb(e),[],!1,null,null,!1,!0)[1]))}};xI.className="TimeDistributed",ll.registerClass(xI);var vI=class extends bI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=pv(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=pv(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){My(Ky,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new by("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Sy(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ck(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new yy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new sx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new by("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof ix;for(let e of s)if(e instanceof ix!==o)throw new yy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return so((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=zh(r,1)),"concat"===this.mergeMode?s=yb([n,r]):"sum"===this.mergeMode?s=Tl(n,r):"ave"===this.mergeMode?s=El(.5,Tl(n,r)):"mul"===this.mergeMode?s=El(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){eb(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),eb(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=pv(t.layer);if(delete t.layer,null!=t.numConstants)throw new by("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function wI(e){return new dx(e)}function kI(e){return new jw(e)}function II(e){return new Uw(e)}function SI(e){return new Gw(e)}function NI(e){return new Hw(e)}function TI(e){return new Kw(e)}function _I(e){return new qw(e)}function CI(e){return new uk(e)}function EI(e){return new rk(e)}function $I(e){return new sk(e)}function AI(e){return new ak(e)}function FI(e){return new ik(e)}function RI(e){return new lk(e)}function DI(e){return new pk(e)}function MI(e){return new hk(e)}function OI(e){return new dk(e)}function LI(e){return new Fk(e)}function zI(e){return new $k(e)}function PI(e){return new Ck(e)}function BI(e){return new Ek(e)}function WI(e){return new Ak(e)}function VI(e){return new Rk(e)}function UI(e){return new Dk(e)}function GI(e){return new Mk(e)}function HI(e){return new Lk(e)}function jI(e){return new Pk(e)}function qI(e){return new Wk(e)}function KI(e){return new Gk(e)}function XI(e){return new Vk(e)}function YI(e){return new Uk(e)}function ZI(e){return new Bk(e)}function JI(e){return new jk(e)}function QI(e){return new Jk(e)}function eS(e){return new Qk(e)}function tS(e){return new eI(e)}function nS(e){return new sI(e)}function rS(e){return nS(e)}function aS(e){return nS(e)}function sS(e){return new lI(e)}function iS(e){return sS(e)}function oS(e){return sS(e)}function lS(e){return new hI(e)}function uS(e){return lS(e)}function pS(e){return lS(e)}function hS(e){return new cI(e)}function dS(e){return new gI(e)}function cS(e){return new fI(e)}function fS(e){return new yI(e)}function mS(e){return new aI(e)}function gS(e){return new oI(e)}function yS(e){return new pI(e)}function bS(e){return new vk(e)}function xS(e){return new xk(e)}function vS(e){return new kk(e)}function wS(e){return new wk(e)}function kS(e){return new bk(e)}function IS(e){return new yk(e)}function SS(e){return new _k(e)}function NS(e){return new Tk(e)}function TS(e){return new mk(e)}function _S(e){return new Ik(e)}function CS(e){return new vI(e)}function ES(e){return new xI(e)}vI.className="Bidirectional",ll.registerClass(vI);var $S=cS,AS=fS,FS=mS,RS=gS;function DS(e){return new qk(e)}function MS(e){return new Kk(e)}function OS(e){return new Xk(e)}function LS(e){return new Ok(e)}var zS={};function PS(e,t){return wv(e,t)}function BS(e,t){return Tv(e,t)}function WS(e,t){return _v(e,t)}function VS(e,t){return kv(e,t)}function US(e,t){return Cv(e,t)}function GS(e,t){return Sv(e,t)}function HS(e,t){return Nv(e,t)}function jS(e,t){return bv(e,t)}function qS(e,t){return cv(e,t)}function KS(e,t){return fv(e,t)}function XS(e,t){return fv(e,t)}function YS(e,t){return fv(e,t)}function ZS(e,t){return dv(e,t)}function JS(e,t){return dv(e,t)}function QS(e,t){return dv(e,t)}g(zS,{MAPE:()=>XS,MSE:()=>JS,binaryAccuracy:()=>PS,binaryCrossentropy:()=>BS,categoricalAccuracy:()=>VS,categoricalCrossentropy:()=>US,cosineProximity:()=>jS,mape:()=>YS,meanAbsoluteError:()=>qS,meanAbsolutePercentageError:()=>KS,meanSquaredError:()=>ZS,mse:()=>QS,precision:()=>GS,recall:()=>HS,sparseCategoricalAccuracy:()=>WS});var eN={};g(eN,{modelFromJSON:()=>pw});var tN={};function nN(e){return new zw(e)}function rN(e){return function(e){return Ow(e),new zw({l1:null!=e?e.l1:null,l2:0})}(e)}function aN(e){return function(e){return Ow(e),new zw({l2:null!=e?e.l2:null,l1:0})}(e)}g(tN,{l1:()=>rN,l1l2:()=>nN,l2:()=>aN});var sN=class extends nv{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof lw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function iN(e,t){return e<t}function oN(e,t){return e>t}var lN=class extends sN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new by("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=iN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=oN:this.monitorFunc=iN,this.monitorFunc===iN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===iN?1/0:-1/0}async onEpochEnd(e,t){await ev(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var uN,pN,hN={earlyStopping:function(e){return new lN(e)}};Pe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(uN||(uN={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(pN||(pN={}));var dN={};function cN(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};dN[e]=n}function fN(e){return dN[e]}function mN(e){delete dN[e]}function gN(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return yN(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>yN(e,n,r,a)));let o=yN(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:fa.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function yN(e,t,n,r){let[a,s]=vN(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[xN(a,e)]));return void 0!==i?t[xN(a,i)][s]:void 0}function bN(e,t){let[n,r,a]=vN(e);return[xN(n,t&&t.currentContextId),r,a]}function xN(e,t){return t?`${e}-${t}`:e}function vN(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function wN(e,t,n){let r=gN("pad",e,t,n);if("explicit"===r){r=gN("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function kN(e){return e.kept?e:Ni(e)}var IN={};g(IN,{json:()=>SN});var SN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NN={};g(NN,{json:()=>TN});var TN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_N={};g(_N,{json:()=>CN});var CN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],EN={};g(EN,{json:()=>$N});var $N=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AN={};g(AN,{json:()=>FN});var FN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],RN={};g(RN,{json:()=>DN});var DN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MN={};g(MN,{json:()=>ON});var ON=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],LN={};g(LN,{json:()=>zN});var zN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],PN={};g(PN,{json:()=>BN});var BN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],WN={};g(WN,{json:()=>VN});var VN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],UN={};g(UN,{json:()=>GN});var GN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],HN={};g(HN,{json:()=>jN});var jN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],qN={};g(qN,{json:()=>KN});var KN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],XN={};g(XN,{json:()=>YN});var YN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ZN={};g(ZN,{json:()=>JN});var JN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],QN={};g(QN,{json:()=>eT});var eT=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],tT={};g(tT,{json:()=>nT});var nT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],rT={};g(rT,{json:()=>aT});var aT=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],sT={};g(sT,{json:()=>iT});var iT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],oT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[IN,NN,_N,EN,AN,RN,MN,LN,PN,WN,UN,HN,qN,XN,ZN,QN,tT,rT,sT].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=bN(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(p).length?h.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(p).forEach((e=>{let[t]=bN(e),n=i[t];null!=n&&(n.signatureKey=p[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=bN(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=fN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=uT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=xT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=hT(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=hT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=bT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=pT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=wT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=yT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=vT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=fT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=mT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=cT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=cT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=bN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dT(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=bN(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=bN(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function lT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Pe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function uT(e,t,n,r=!1){let a=e[t];return null!=a?lT(a.s,r):n}function pT(e,t,n){let r=e[t];return r?r.b:n}function hT(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function dT(e){switch("string"==typeof e&&(e=uN[e]),e){case uN.DT_FLOAT:case uN.DT_HALF:return"float32";case uN.DT_INT32:case uN.DT_INT64:case uN.DT_INT8:case uN.DT_UINT8:return"int32";case uN.DT_BOOL:return"bool";case uN.DT_DOUBLE:return"float32";case uN.DT_STRING:return"string";default:return null}}function cT(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function fT(e,t,n){let r=e[t];return r&&r.type?dT(r.type):n}function mT(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>dT(e))):n}function gT(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function yT(e,t,n){let r=e[t];return r&&r.shape?gT(r.shape):n}function bT(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function xT(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>lT(e,r))):n}function vT(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>gT(e))):n}function wT(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var kT=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return yN(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return yN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hT(this.node.rawAttrs,e,t);if(null!=n.s)return uT(this.node.rawAttrs,e,t);if(null!=n.b)return pT(this.node.rawAttrs,e,t);if(null!=n.shape)return yT(this.node.rawAttrs,e,t);if(null!=n.type)return fT(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return bT(this.node.rawAttrs,e,t);if(null!=n.list.s)return xT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return vT(this.node.rawAttrs,e,t);if(null!=n.list.b)return wT(this.node.rawAttrs,e,t);if(null!=n.list.type)return mT(this.node.rawAttrs,e,t)}return t}},IT={};g(IT,{OP_SCOPE_SUFFIX:()=>Ts,abs:()=>$l,acos:()=>Al,acosh:()=>Fl,add:()=>Tl,addN:()=>Rl,all:()=>Dl,any:()=>Ml,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Wl,atanh:()=>Vl,avgPool:()=>au,avgPool3d:()=>su,basicLSTMCell:()=>pu,batchNorm:()=>cu,batchNorm2d:()=>fu,batchNorm3d:()=>mu,batchNorm4d:()=>gu,batchToSpaceND:()=>hu,bincount:()=>yu,booleanMaskAsync:()=>_d,broadcastArgs:()=>bu,broadcastTo:()=>xu,buffer:()=>Ii,cast:()=>Si,ceil:()=>vu,clipByValue:()=>wu,clone:()=>Ni,complex:()=>Cs,concat:()=>iu,concat1d:()=>ku,concat2d:()=>Iu,concat3d:()=>Su,concat4d:()=>Nu,conv1d:()=>_u,conv2d:()=>Tu,conv2dTranspose:()=>Eu,conv3d:()=>$u,conv3dTranspose:()=>Fu,cos:()=>Ru,cosh:()=>Du,cosineWindow:()=>Dd,cumprod:()=>Mu,cumsum:()=>Ou,denseBincount:()=>Lu,depthToSpace:()=>zu,depthwiseConv2d:()=>Pu,diag:()=>Bu,dilation2d:()=>Wu,div:()=>Cl,divNoNan:()=>Hu,dot:()=>ju,dropout:()=>Fd,einsum:()=>qu,elu:()=>Ku,enclosingPowerOfTwo:()=>Rd,equal:()=>Vu,erf:()=>Xu,euclideanNorm:()=>cp,exp:()=>fp,expandDims:()=>mp,expm1:()=>gp,eye:()=>bp,fft:()=>nd,fill:()=>xp,floor:()=>vp,floorDiv:()=>_l,fused:()=>Od,gather:()=>wp,gatherND:()=>Ad,greater:()=>kp,greaterEqual:()=>Ip,ifft:()=>rd,imag:()=>xo,image:()=>Gc,inTopKAsync:()=>Md,irfft:()=>ad,isFinite:()=>Sp,isInf:()=>Np,isNaN:()=>Tp,leakyRelu:()=>_p,less:()=>Cp,lessEqual:()=>Ep,linalg:()=>Hc,linspace:()=>$p,localResponseNormalization:()=>Ap,log:()=>Fp,log1p:()=>Rp,logSigmoid:()=>Vp,logSoftmax:()=>Gp,logSumExp:()=>Hp,logicalAnd:()=>jp,logicalNot:()=>qp,logicalOr:()=>Kp,logicalXor:()=>Xp,losses:()=>jc,lowerBound:()=>Jp,matMul:()=>Xi,max:()=>ap,maxPool:()=>Qp,maxPool3d:()=>eh,maxPoolWithArgmax:()=>th,maximum:()=>nh,mean:()=>rh,meshgrid:()=>ih,min:()=>sp,minimum:()=>oh,mirrorPad:()=>lh,mod:()=>uh,moments:()=>ph,movingAverage:()=>Cd,mul:()=>El,multiRNNCell:()=>hh,multinomial:()=>dh,neg:()=>vo,norm:()=>dp,notEqual:()=>ch,oneHot:()=>Yi,ones:()=>sh,onesLike:()=>fh,op:()=>_s,outerProduct:()=>mh,pad:()=>gh,pad1d:()=>yh,pad2d:()=>bh,pad3d:()=>xh,pad4d:()=>vh,pool:()=>kh,pow:()=>ip,prelu:()=>Ih,print:()=>Ti,prod:()=>Sh,rand:()=>Nh,randomGamma:()=>$h,randomNormal:()=>Ah,randomStandardNormal:()=>Fh,randomUniform:()=>Rh,range:()=>Dh,real:()=>wo,reciprocal:()=>Mh,relu:()=>Oh,relu6:()=>Lh,reshape:()=>ru,reverse:()=>zh,reverse1d:()=>Ph,reverse2d:()=>Bh,reverse3d:()=>Wh,reverse4d:()=>Vh,rfft:()=>id,round:()=>Uh,rsqrt:()=>Gh,scalar:()=>op,scatterND:()=>Ed,searchSorted:()=>Zp,selu:()=>Hh,separableConv2d:()=>jh,setdiff1dAsync:()=>qh,sigmoid:()=>ou,sign:()=>Kh,signal:()=>Uc,sin:()=>Xh,sinh:()=>Yh,slice:()=>lu,slice1d:()=>Zh,slice2d:()=>Jh,slice3d:()=>Qh,slice4d:()=>ed,softmax:()=>td,softplus:()=>Wp,spaceToBatchND:()=>wh,sparse:()=>qc,sparseToDense:()=>$d,spectral:()=>Vc,split:()=>sd,sqrt:()=>lp,square:()=>up,squaredDifference:()=>od,squeeze:()=>ld,stack:()=>ud,step:()=>pd,stridedSlice:()=>hd,string:()=>Kc,sub:()=>Up,sum:()=>pp,tan:()=>dd,tanh:()=>uu,tensor:()=>$s,tensor1d:()=>cd,tensor2d:()=>fd,tensor3d:()=>$o,tensor4d:()=>md,tensor5d:()=>gd,tensor6d:()=>yd,tile:()=>yp,topk:()=>bd,transpose:()=>ko,truncatedNormal:()=>xd,unique:()=>vd,unsortedSegmentSum:()=>wd,unstack:()=>kd,upperBound:()=>Id,variable:()=>Sd,where:()=>Uu,whereAsync:()=>Td,zeros:()=>ah,zerosLike:()=>Gu});function ST(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){fa.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];fa.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function NT(e){return!("number"==typeof e||e.some((e=>e<0)))}function TT(e,t,n){let r=_T(e,n),a=!NT(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=_T(e.shape,r)})),!NT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function _T(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var CT=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=op(0),oo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),ST(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,oo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return $s([],[0].concat(this.elementShape));let n=this.readMany(e);return ST(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ud(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return $s([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return ST(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),iu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,kd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];so((()=>{t=ru(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=ru(lu(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},ET=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ST(t,e.shape,"TensorList shape mismatch: "),oo(e)})),this.idTensor=op(0),this.maxNumElements=r,oo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ET([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ST(e,this.elementShape,"TensorList shape mismatch: ");let r=TT(this.elementShape,this.tensors,e);return so((()=>{let e=this.tensors.map((e=>ru(e,r)));return ud(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=TT(this.elementShape,this.tensors,e),r=this.tensors.pop();return ST(r.shape,e,"TensorList shape mismatch: "),ru(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ST(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");oo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new ET([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ST(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=TT(this.elementShape,this.tensors,t);return ru(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ST(this.elementShape,t.shape,"TensorList shape mismatch: "),oo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ST(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=TT(this.elementShape,this.tensors,n);return 0===e.length?$s([],[0].concat(r)):so((()=>{let t=e.map((e=>ru(this.tensors[e],r)));return ud(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ST(this.elementShape,t,"TensorList shape mismatch: ");let n=TT(this.elementShape,this.tensors,t);return 0===this.size()?$s([],[0].concat(n)):so((()=>{let e=this.tensors.map((e=>ru(e,n)));return iu(e,0)}))}};var $T=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=gN("thenBranch",e,t,n),a=gN("elseBranch",e,t,n),s=gN("cond",e,t,n),i=gN("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=gN("body",e,t,n),a=gN("cond",e,t,n),s=gN("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[kN(gN("pred",e,t,n))];case"Switch":{let r=gN("pred",e,t,n),a=gN("data",e,t,n);return a.kept||(a=kN(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==yN(e,t,n)));if(r){return[kN(yN(r,t,n))]}return}case"Enter":{let r=gN("frameName",e,t,n),a=gN("tensor",e,t,n);return n.enterFrame(r),[kN(a)]}case"Exit":{let r=gN("tensor",e,t,n);return n.exitFrame(),[kN(r)]}case"NextIteration":{let r=gN("tensor",e,t,n);return n.nextIteration(),[kN(r)]}case"TensorArrayV3":{let r=gN("size",e,t,n),a=gN("dtype",e,t,n),s=gN("elementShape",e,t,n),i=gN("dynamicSize",e,t,n),o=gN("clearAfterRead",e,t,n),l=gN("identicalElementShapes",e,t,n),u=gN("name",e,t,n),p=new CT(u,a,r,s,l,i,o);return n.addTensorArray(p),[p.idTensor,op(1)]}case"TensorArrayWriteV3":{let r=gN("tensorArrayId",e,t,n),a=gN("index",e,t,n),s=gN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=gN("tensorArrayId",e,t,n),a=gN("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=gN("tensorArrayId",e,t,n),a=gN("indices",e,t,n),s=gN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=gN("tensorArrayId",e,t,n),a=gN("indices",e,t,n),s=gN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=gN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=gN("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=gN("tensorArrayId",e,t,n),a=gN("tensor",e,t,n),s=gN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=gN("tensorArrayId",e,t,n);return[op(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=gN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=gN("tensorListId",e,t,n),a=gN("index",e,t,n),s=gN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=gN("tensorListId",e,t,n),a=gN("index",e,t,n),s=gN("elementShape",e,t,n),i=gN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=gN("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new ET([],n,e.dtype,r),i=kd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(gN("tensor",e,t,n),r,gN("elementShape",e,t,n),gN("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=gN("elementShape",e,t,n),s=gN("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=gN(r,e,t,n),o=function(e,t,n,r){return new ET([],e,t,r)}(a,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=gN("tensorListId",e,t,n),a=gN("indices",e,t,n),s=gN("elementShape",e,t,n),i=gN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=gN("tensorListId",e,t,n),a=gN("elementShape",e,t,n),s=gN("elementDType",e,t,n),i=gN("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ST(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=kd(e);return new ET(a,t,r)}(gN("tensor",e,t,n),gN("elementShape",e,t,n),gN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=gN("tensorListId",e,t,n),a=n.getTensorList(r.id),s=gN("dtype",e,t,n),i=gN("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=gN("tensorListId",e,t,n),a=gN("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=gN("tensorListId",e,t,n),a=gN("elementShape",e,t,n),s=gN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=gN("tensor",e,t,n),a=gN("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=_T(e.shape.slice(1),n),i=0===r?0:e.size/r,o=so((()=>{let n=[];e=ru(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=ru(lu(e,o,l),s)}return e.dispose(),n})),l=new ET([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,gN("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=gN("tensorListId",e,t,n);return[op(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=gN("tensorListId",e,t,n),a=gN("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function AT(e,t,n){let[r,a]=gN("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=gN("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=gN("strides",e,t,n),h=wN(e,t,n),d=gN("dataFormat",e,t,n).toUpperCase(),c=gN("dilations",e,t,n),[f,m]=gN("args",e,t,n);return i&&(m=f,f=void 0),{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:gN("leakyreluAlpha",e,t,n)}}function FT(e,t,n){return{boxes:gN("boxes",e,t,n),scores:gN("scores",e,t,n),maxOutputSize:gN("maxOutputSize",e,t,n),iouThreshold:gN("iouThreshold",e,t,n),scoreThreshold:gN("scoreThreshold",e,t,n),softNmsSigma:gN("softNmsSigma",e,t,n)}}var RT=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=op(0),this.tensorMap=new Map,oo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return op(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),so((()=>{let e=kd(t),r=n.length,a=e.length;fa.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];oo(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return so((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return ud(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function DT(e,t,n,r,a=so){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(gN("a",e,t,n),gN("b",e,t,n))];case"AddN":return[r.addN(gN("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(gN("a",e,t,n),gN("b",e,t,n))];case"Mul":return[r.mul(gN("a",e,t,n),gN("b",e,t,n))];case"RealDiv":case"Div":return[r.div(gN("a",e,t,n),gN("b",e,t,n))];case"DivNoNan":return[r.divNoNan(gN("a",e,t,n),gN("b",e,t,n))];case"FloorDiv":return[r.floorDiv(gN("a",e,t,n),gN("b",e,t,n))];case"Sub":return[r.sub(gN("a",e,t,n),gN("b",e,t,n))];case"Minimum":return[r.minimum(gN("a",e,t,n),gN("b",e,t,n))];case"Maximum":return[r.maximum(gN("a",e,t,n),gN("b",e,t,n))];case"Pow":return[r.pow(gN("a",e,t,n),gN("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(gN("a",e,t,n),gN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(gN("x",e,t,n))];case"Acos":return[r.acos(gN("x",e,t,n))];case"Acosh":return[r.acosh(gN("x",e,t,n))];case"Asin":return[r.asin(gN("x",e,t,n))];case"Asinh":return[r.asinh(gN("x",e,t,n))];case"Atan":return[r.atan(gN("x",e,t,n))];case"Atan2":return[r.atan2(gN("x",e,t,n),gN("y",e,t,n))];case"Atanh":return[r.atanh(gN("x",e,t,n))];case"Ceil":return[r.ceil(gN("x",e,t,n))];case"Complex":return[r.complex(gN("real",e,t,n),gN("imag",e,t,n))];case"Cos":return[r.cos(gN("x",e,t,n))];case"Cosh":return[r.cosh(gN("x",e,t,n))];case"Elu":return[r.elu(gN("x",e,t,n))];case"Erf":return[r.erf(gN("x",e,t,n))];case"Exp":return[r.exp(gN("x",e,t,n))];case"Expm1":return[r.expm1(gN("x",e,t,n))];case"Floor":return[r.floor(gN("x",e,t,n))];case"Log":return[r.log(gN("x",e,t,n))];case"Log1p":return[r.log1p(gN("x",e,t,n))];case"Imag":return[r.imag(gN("x",e,t,n))];case"Neg":return[r.neg(gN("x",e,t,n))];case"Reciprocal":return[r.reciprocal(gN("x",e,t,n))];case"Real":return[r.real(gN("x",e,t,n))];case"Relu":return[r.relu(gN("x",e,t,n))];case"Round":return[r.round(gN("x",e,t,n))];case"Selu":return[r.selu(gN("x",e,t,n))];case"Sigmoid":return[r.sigmoid(gN("x",e,t,n))];case"Sin":return[r.sin(gN("x",e,t,n))];case"Sign":return[r.sign(gN("x",e,t,n))];case"Sinh":return[r.sinh(gN("x",e,t,n))];case"Softplus":return[r.softplus(gN("x",e,t,n))];case"Sqrt":return[r.sqrt(gN("x",e,t,n))];case"Square":return[r.square(gN("x",e,t,n))];case"Tanh":return[r.tanh(gN("x",e,t,n))];case"Tan":return[r.tan(gN("x",e,t,n))];case"ClipByValue":return[r.clipByValue(gN("x",e,t,n),gN("clipValueMin",e,t,n),gN("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(gN("x",e,t,n))];case"Rsqrt":return[r.rsqrt(yN(e.inputNames[0],t,n))];case"Prod":return[r.prod(gN("x",e,t,n),gN("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(gN("x",e,t,n),gN("alpha",e,t,n))];case"Prelu":return[r.prelu(gN("x",e,t,n),gN("alpha",e,t,n))];case"IsNan":return[r.isNaN(yN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return $T(e,t,n);case"convolution":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Conv1D":{let a=gN("stride",e,t,n),s=gN("pad",e,t,n),i=gN("dataFormat",e,t,n).toUpperCase(),o=gN("dilation",e,t,n);return[r.conv1d(gN("x",e,t,n),gN("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=gN("strides",e,t,n),s=wN(e,t,n),i=gN("dataFormat",e,t,n).toUpperCase(),o=gN("dilations",e,t,n);return[r.conv2d(gN("x",e,t,n),gN("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=AT(e,t,n);return[r.fused.conv2d({x:gN("x",e,t,n),filter:gN("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=AT(e,t,n);return[r.fused.depthwiseConv2d({x:gN("x",e,t,n),filter:gN("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=gN("outputShape",e,t,n),s=gN("strides",e,t,n),i=wN(e,t,n);return[r.conv2dTranspose(gN("x",e,t,n),gN("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=gN("strides",e,t,n),s=wN(e,t,n),i=gN("dilations",e,t,n),o=gN("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(gN("input",e,t,n),gN("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("dataFormat",e,t,n).toUpperCase(),o=gN("dilations",e,t,n);return[r.conv3d(gN("x",e,t,n),gN("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("kernelSize",e,t,n);return[r.avgPool(gN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("kernelSize",e,t,n);return[r.maxPool(gN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("kernelSize",e,t,n),o=gN("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(gN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("kernelSize",e,t,n);return[r.avgPool3d(gN("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("kernelSize",e,t,n);return[r.maxPool3d(gN("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=gN("strides",e,t,n),s=gN("pad",e,t,n),i=gN("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(gN("x",e,t,n),gN("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Fill":{let a=gN("shape",e,t,n),s=gN("dtype",e,t,n),i=gN("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=gN("start",e,t,n),s=gN("stop",e,t,n),i=gN("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=gN("logits",e,t,n),s=gN("numSamples",e,t,n),i=gN("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=gN("indices",e,t,n),s=gN("depth",e,t,n),i=gN("onValue",e,t,n),o=gN("offValue",e,t,n);return[r.oneHot(a,s,i,o)]}case"Ones":return[r.ones(gN("shape",e,t,n),gN("dtype",e,t,n))];case"OnesLike":return[r.onesLike(gN("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(gN("shape",e,t,n),gN("dtype",e,t,n),gN("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(gN("shape",e,t,n),gN("minval",e,t,n),gN("maxval",e,t,n),gN("dtype",e,t,n))];case"Range":{let a=gN("start",e,t,n),s=gN("stop",e,t,n),i=gN("step",e,t,n);return[r.range(a,s,i,gN("dtype",e,t,n))]}case"TruncatedNormal":{let a=gN("shape",e,t,n),s=gN("mean",e,t,n),i=gN("stdDev",e,t,n),o=gN("seed",e,t,n);return[r.truncatedNormal(a,s,i,gN("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(gN("shape",e,t,n),gN("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(gN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=IT)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=FT(e,t,n),p=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=FT(e,t,n),u=gN("padToMaxOutputSize",e,t,n),p=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=FT(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(gN("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(gN("x",e,t,n),gN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"LowerBound":{let a=gN("sortedSequence",e,t,n),s=gN("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=gN("x",e,t,n),s=gN("k",e,t,n),i=gN("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=gN("sortedSequence",e,t,n),s=gN("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=gN("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=gN("x",e,t,n),s=gN("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"ResizeBilinear":{let a=gN("images",e,t,n),s=gN("size",e,t,n),i=gN("alignCorners",e,t,n),o=gN("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=gN("images",e,t,n),s=gN("size",e,t,n),i=gN("alignCorners",e,t,n),o=gN("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=gN("image",e,t,n),s=gN("boxes",e,t,n),i=gN("boxInd",e,t,n),o=gN("cropSize",e,t,n),l=gN("method",e,t,n),u=gN("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=gN("images",e,t,n),s=gN("transforms",e,t,n),i=gN("outputShape",e,t,n),o=gN("fillValue",e,t,n),l=gN("interpolation",e,t,n),u=gN("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=gN("default",e,t,n);return[yN(e.name,t,n)||a];case"Placeholder":return[yN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[kN(gN("x",e,t,n))];case"IdentityN":return gN("x",e,t,n).map((e=>kN(e)));case"Shape":return[r.tensor1d(gN("x",e,t,n).shape,"int32")];case"ShapeN":return gN("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(gN("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(gN("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=gN("x",e,t,n),i=gN("data",e,t,n),o=gN("message",e,t,n),l=gN("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Equal":return[r.equal(gN("a",e,t,n),gN("b",e,t,n))];case"NotEqual":return[r.notEqual(gN("a",e,t,n),gN("b",e,t,n))];case"Greater":return[r.greater(gN("a",e,t,n),gN("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(gN("a",e,t,n),gN("b",e,t,n))];case"Less":return[r.less(gN("a",e,t,n),gN("b",e,t,n))];case"LessEqual":return[r.lessEqual(gN("a",e,t,n),gN("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(gN("a",e,t,n),gN("b",e,t,n))];case"LogicalNot":return[r.logicalNot(gN("a",e,t,n))];case"LogicalOr":return[r.logicalOr(gN("a",e,t,n),gN("b",e,t,n))];case"Select":case"SelectV2":return[r.where(gN("condition",e,t,n),gN("a",e,t,n),gN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(gN("a",e,t,n),gN("b",e,t,n),gN("transposeA",e,t,n),gN("transposeB",e,t,n))];case"Einsum":return[r.einsum(gN("equation",e,t,n),...gN("tensors",e,t,n))];case"Transpose":return[r.transpose(gN("x",e,t,n),gN("perm",e,t,n))];case"_FusedMatMul":let[a,s]=gN("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=gN("numArgs",e,t,n),u=gN("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=gN("args",e,t,n);return[r.fused.matMul({a:gN("a",e,t,n),b:gN("b",e,t,n),transposeA:gN("transposeA",e,t,n),transposeB:gN("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(gN("x",e,t,n),gN("axis",e,t,n),gN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(gN("x",e,t,n),gN("mean",e,t,n),gN("variance",e,t,n),gN("offset",e,t,n),gN("scale",e,t,n),gN("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(gN("x",e,t,n),gN("radius",e,t,n),gN("bias",e,t,n),gN("alpha",e,t,n),gN("beta",e,t,n))];case"Softmax":return[r.softmax(gN("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(gN("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(gN("sparseIndices",e,t,n),gN("outputShape",e,t,n),gN("sparseValues",e,t,n),gN("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Max":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.max(gN("x",e,t,n),a,s)]}case"Mean":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.mean(gN("x",e,t,n),a,s)]}case"Min":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.min(gN("x",e,t,n),a,s)]}case"Sum":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.sum(gN("x",e,t,n),a,s)]}case"All":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.all(gN("x",e,t,n),a,s)]}case"Any":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.any(gN("x",e,t,n),a,s)]}case"ArgMax":{let a=gN("axis",e,t,n);return[r.argMax(gN("x",e,t,n),a)]}case"ArgMin":{let a=gN("axis",e,t,n);return[r.argMin(gN("x",e,t,n),a)]}case"Prod":{let a=gN("axis",e,t,n),s=gN("keepDims",e,t,n);return[r.prod(gN("x",e,t,n),a,s)]}case"Cumprod":{let a=gN("axis",e,t,n),s=gN("exclusive",e,t,n),i=gN("reverse",e,t,n);return[r.cumprod(gN("x",e,t,n),a,s,i)]}case"Cumsum":{let a=gN("axis",e,t,n),s=gN("exclusive",e,t,n),i=gN("reverse",e,t,n);return[r.cumsum(gN("x",e,t,n),a,s,i)]}case"Bincount":let a=gN("x",e,t,n),s=gN("weights",e,t,n),i=gN("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=gN("x",e,t,n),s=gN("weights",e,t,n),i=gN("size",e,t,n),o=gN("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=gN("n",e,t,n),s=gN("axis",e,t,n),i=gN("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=gN("x",e,t,n),s=gN("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=gN("axis",e,t,n),s=gN("batchDims",e,t,n),i=gN("x",e,t,n),o=gN("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=gN("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=gN("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=gN("axis",e,t,n),s=gN("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=gN("begin",e,t,n),s=gN("size",e,t,n);return[r.slice(gN("x",e,t,n),a,s)]}case"StridedSlice":{let a=gN("begin",e,t,n),s=gN("end",e,t,n),i=gN("strides",e,t,n),o=gN("beginMask",e,t,n),l=gN("endMask",e,t,n),u=gN("ellipsisMask",e,t,n),p=gN("newAxisMask",e,t,n),h=gN("shrinkAxisMask",e,t,n),d=gN("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,p,h)]}case"Pack":return so((()=>{let a=gN("axis",e,t,n),s=gN("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{let t=fa.arraysEqual(e.shape,i);if(!t&&!fa.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{let a=gN("axis",e,t,n),s=gN("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=gN("reps",e,t,n);return[r.tile(gN("x",e,t,n),a)]}case"Split":case"SplitV":{let a=gN("axis",e,t,n),s=gN("numOrSizeSplits",e,t,n),i=gN("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=gN("indices",e,t,n),s=gN("values",e,t,n),i=gN("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=gN("x",e,t,n),s=gN("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=gN("sparseIndices",e,t,n),s=gN("outputShape",e,t,n),i=gN("sparseValues",e,t,n),o=gN("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(gN("indices",e,t,n),gN("values",e,t,n),gN("denseShape",e,t,n),gN("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(gN("inputIndices",e,t,n),gN("inputShape",e,t,n),gN("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(gN("data",e,t,n),gN("indices",e,t,n),gN("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(gN("data",e,t,n),gN("indices",e,t,n),gN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"FFT":return[r.fft(gN("x",e,t,n))];case"IFFT":return[r.ifft(gN("x",e,t,n))];case"RFFT":return[r.rfft(gN("x",e,t,n))];case"IRFFT":return[r.irfft(gN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(gN("data",e,t,n),gN("dataSplits",e,t,n),gN("separator",e,t,n),gN("nGramWidths",e,t,n),gN("leftPad",e,t,n),gN("rightPad",e,t,n),gN("padWidth",e,t,n),gN("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(gN("input",e,t,n),gN("delimiter",e,t,n),gN("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(gN("input",e,t,n),gN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=IT)=>{switch(e.op){case"Cast":return[r.cast(gN("x",e,t,n),gN("dtype",e,t,n))];case"ExpandDims":{let a=gN("axis",e,t,n);return[r.expandDims(gN("x",e,t,n),a)]}case"Squeeze":{let a=gN("axis",e,t,n);return[r.squeeze(gN("x",e,t,n),a)]}case"Reshape":return[r.reshape(gN("x",e,t,n),gN("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(gN("x",e,t,n),gN("padding",e,t,n),gN("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(gN("x",e,t,n),gN("padding",e,t,n),gN("constantValue",e,t,n))];case"SpaceToBatchND":{let a=gN("blockShape",e,t,n),s=gN("paddings",e,t,n);return[r.spaceToBatchND(gN("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=gN("blockShape",e,t,n),s=gN("crops",e,t,n);return[r.batchToSpaceND(gN("x",e,t,n),a,s)]}case"DepthToSpace":{let a=gN("blockSize",e,t,n),s=gN("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(gN("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(gN("x",e,t,n),gN("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(gN("s0",e,t,n),gN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=gN("keyDType",e,t,n),s=gN("valueDType",e,t,n),i=new RT(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=gN("tableHandle",e,t,n,r),s=gN("keys",e,t,n),i=gN("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=gN("tableHandle",e,t,n,r),s=gN("keys",e,t,n),i=gN("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=gN("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":let s=fN(e.op);if(s&&s.customExecutor)return s.customExecutor(new kT(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return fa.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var MT=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function OT(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>vN(e)[0])),p=[];null!=r&&(p=r.map((e=>vN(e.name)[0])));let h=[...t];for(;h.length>0;){let e=h.pop();if((BT(e)||WT(e)||VT(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===p.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var LT=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],zT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],PT=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function BT(e){return LT.indexOf(e.op)>=0}function WT(e){return zT.indexOf(e.op)>=0}function VT(e){return PT.indexOf(e.op)>=0}var UT=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new UT(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=OT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>vN(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[vN(e)[0]])),a=t.map((e=>vN(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return so((()=>{let n=new MT(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=vN(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=DT(t,r,n,this._resourceManager);if(fa.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>yN(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[xN(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=bN(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new MT(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>yN(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[vN(e)[0]])),i=n.map((e=>vN(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:p,syncInputs:h}=OT(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=vN(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==p&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!BT(e)&&!yN(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&gN("isConstant",e.node,r,n)&&([p]=bN(e.node.name,n)),null==r[e.node.name]){let h=DT(e.node,r,n,this._resourceManager);p||([p]=bN(e.node.name,n));let d=n.currentContext;fa.isPromise(h)?u.push(h.then((u=>(r[p]=u,n.currentContext=d,this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[p]=h,this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=bN(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!yN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!yN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=vN(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));fa.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&fa.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=vN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=vN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},GT=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},HT="?tfjs-format=file",jT="model.json",qT=class{constructor(e,t={},n=_i){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new GT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return fa.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new UT(oT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=oT.Instance.transformGraph(e.modelInitializer);this.initializer=new UT(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let e={};return(n instanceof ja?[n]:n).forEach(((t,n)=>e[this.structuredOutputKeys[n]]=t)),e}return n}normalizeInputs(e){if(!(e instanceof ja||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function KT(e,t={},n=_i){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${jT}${HT}`}(e));let r=new qT(e,t,n);return await r.load(),r}function XT(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new qT(e);return t.load(),t}var YT="3.19.0",ZT={};g(ZT,{CSVDataset:()=>U_,Dataset:()=>$_,FileDataSource:()=>nC,TextLineDataset:()=>O_,URLDataSource:()=>rC,array:()=>F_,csv:()=>aC,func:()=>sC,generator:()=>iC,microphone:()=>lC,version_data:()=>uC,webcam:()=>oC,zip:()=>R_});var JT=y(E()),QT=y(E());function e_(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(s_(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=e_(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function t_(e,t=r_){return n_(e,t)}function n_(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(s_(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=n_(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function r_(e){return null===e?null:s_(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function a_(e,t){let n=new Map;e_(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(fa.isPromise(t)){let r=await t;n.set(e,r)}}return e_(e,t,n)}function s_(e){let t=!1;if(Pe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=$();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ja)&&!(e instanceof Promise)&&!t)}function i_(e){return function(e,t){return e_(e,t)}(e,o_)}function o_(e){return e instanceof ja?{value:e.clone(),recurse:!1}:s_(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var l_=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},u_=class extends l_{constructor(){super(u_.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function p_(e){return new f_(e)}function h_(e){return new m_(e)}u_.INITIAL_CAPACITY=32;var d_,c_=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new k_(this,e)}filter(e){return new v_(this,e)}map(e){return new w_(this,e)}mapAsync(e){return new I_(this,e)}serialMapAsync(e){return new I_(this,e).serial()}flatmap(e){return new N_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new x_(this,e,t)}columnMajorBatch(e,t=!0,n=r_){return this.rowMajorBatch(e,t).map((e=>t_(e,n)))}concatenate(e,t){return new T_(p_([this,e]),t)}take(e){return e<0||null==e?this:new b_(this,e)}skip(e){return e<0||null==e?this:new y_(this,e)}prefetch(e){return new C_(this,e)}shuffle(e,t){return new E_(this,e,t)}serial(){return new g_(this)}},f_=class extends c_{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:i_(e),done:!1}}},m_=class extends c_{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},g_=class extends c_{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},y_=class extends c_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;io(e.value)}return this.upstream.next()}},b_=class extends c_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},x_=class extends c_{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},v_=class extends c_{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;io(e.value)}}},w_=class extends c_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=es.getTensorsInContainer(e.value),n=this.transform(e.value),r=es.getTensorsInContainer(n);for(let e of t)es.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},k_=class extends c_{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},I_=class extends c_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=es.getTensorsInContainer(e.value),n=await this.transform(e.value),r=es.getTensorsInContainer(n);for(let e of t)es.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},S_=class extends c_{constructor(){super(),this.outputQueue=new u_,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},N_=class extends S_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=es.getTensorsInContainer(e.value),n=this.transform(e.value),r=es.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)es.isTensorInList(e,r)||e.dispose();return!0}},T_=class extends c_{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(d_||(d_={}));var __=class extends c_{constructor(e,t=d_.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await a_(this.iterators,(function(e){return e instanceof c_?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case d_.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case d_.SHORTEST:return{value:null,done:!0};case d_.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},C_=class extends c_{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new l_(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},E_=class extends C_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=QT.alea(n||fa.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},$_=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return fa.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),A_((async()=>(await r.iterator()).columnMajorBatch(e,t,D_)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,A_((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,A_((async()=>(await n.iterator()).filter((t=>so((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return A_((async()=>(await t.iterator()).map((t=>so((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return A_((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return A_((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,A_((async()=>function(e,t){return new T_(e,t)}(h_((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,A_((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=JT.alea(t||fa.now().toString());return A_((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,A_((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function A_(e,t=null){return new class extends $_{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function F_(e){return A_((async()=>p_(e)),e.length)}function R_(e){if(!s_(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return A_((async()=>function(e,t=d_.FAIL){return new __(e,t)}(await a_(e,(e=>{if(e instanceof $_)return{value:e.iterator(),recurse:!1};if(s_(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),d_.SHORTEST)),t)}function D_(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof ja||fa.isTypedArray(e)}(e[0])?{value:M_(e),recurse:!1}:{value:null,recurse:!0}}function M_(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ja?ud(e):$s(e)}$_.MAX_BUFFER_SIZE=1e4;var O_=class extends $_{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},L_='"',z_=Symbol("out"),P_=Symbol("field"),B_=Symbol("quote"),W_=Symbol("quoteafterquote"),V_=Symbol("quoteinquote"),U_=class extends $_{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new O_(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(fa.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&fa.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(fa.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=z_;for(let t=0;t<a;t++)switch(s){case z_:switch(e.charAt(t)){case L_:r=t+1,s=B_;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=z_;break;default:s=P_,r=t}break;case P_:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=z_,r=t+1;break;case B_:if(e.charAt(t)===L_)s=W_;break;case W_:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=z_,r=t+1;break;case L_:s=B_;break;default:s=V_}break;case V_:if(e.charAt(t)===L_)s=B_}if(s===W_?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},G_=class extends c_{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Pe().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new G_(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(fa.sizeFromShape(t));return n.set(e,n.length-e.length),$s(n,t)}},H_=class extends c_{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=cd([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=fd([r,n,s,a],[1,4])}else this.cropBox=fd([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Pe().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new H_(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&fa.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Eo.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return so((()=>{let t,n=mp(Si(e,"float32"),0);t=Gc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return ru(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},j_=class{},q_=class extends c_{split(e){return new K_(this,e)}},K_=class extends q_{constructor(e,t){super(),this.upstream=e,this.impl=new X_(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},X_=class extends S_{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},Y_=class extends c_{decodeUTF8(){return new Z_(this)}},Z_=class extends q_{constructor(e){super(),this.upstream=e,this.impl=new J_(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},J_=class extends S_{constructor(e){if(super(),this.upstream=e,Pe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=$();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Pe().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},Q_=class extends Y_{constructor(e,t={}){super(),this.file=e,this.options=t,fa.assert(e instanceof Uint8Array||!!Pe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var eC=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function tC(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var nC=class extends j_{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(tC(this.input)&&Pe().get("IS_NODE")){let e=A();this.input=e.readFileSync(this.input.slice(7))}return new Q_(this.input,this.options)}},rC=class extends j_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return tC(this.url)?new nC(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=eC(e));let s=await(n||fa.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new Q_(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function aC(e,t={}){return new U_(new rC(e),t)}function sC(e){let t=h_(e);return A_((async()=>t))}function iC(e){return A_((async()=>{let t=await e();return h_((()=>t.next()))}))}async function oC(e,t){return H_.create(e,t)}async function lC(e){return G_.create(e)}var uC="3.19.0";function pC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&fa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var hC=pm.whereImpl,dC=class extends B{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new P(this,no())}nextDataId(){return dC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Pe().get("IS_NODE")&&lf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&fa.isString(n[0])){let a=n.map((e=>fa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return lf.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>fa.decodeString(e)));return Ii(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,t)}makeOutput(e,t,n){return no().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=fa.now();return e(),{kernelMs:fa.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){pC([e],"where");let t=this.readSync(e.dataId);return hC(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};dC.nextDataId=0;var cC={};function fC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}g(cC,{addImpl:()=>CC,bincountImpl:()=>FC,bincountReduceImpl:()=>RC,ceilImpl:()=>LC,concatImpl:()=>BC,equalImpl:()=>WC,expImpl:()=>GC,expm1Impl:()=>qC,floorImpl:()=>YC,gatherNdImpl:()=>QC,gatherV2Impl:()=>eE,greaterEqualImpl:()=>aE,greaterImpl:()=>tE,lessEqualImpl:()=>pE,lessImpl:()=>oE,linSpaceImpl:()=>cE,logImpl:()=>fE,maxImpl:()=>yE,maximumImpl:()=>bE,minimumImpl:()=>wE,multiplyImpl:()=>SE,negImpl:()=>CE,notEqualImpl:()=>$E,prodImpl:()=>OE,rangeImpl:()=>zE,rsqrtImpl:()=>PE,scatterImpl:()=>VE,sigmoidImpl:()=>UE,simpleAbsImpl:()=>fC,sliceImpl:()=>jE,sparseFillEmptyRowsImpl:()=>XE,sparseReshapeImpl:()=>YE,sparseSegmentReductionImpl:()=>ZE,sqrtImpl:()=>JE,squaredDifferenceImpl:()=>t$,stridedSliceImpl:()=>a$,stringNGramsImpl:()=>i$,stringSplitImpl:()=>l$,stringToHashBucketFastImpl:()=>u$,subImpl:()=>p$,tileImpl:()=>f$,topKImpl:()=>y$,transposeImpl:()=>RE,uniqueImpl:()=>b$});var mC={kernelName:Ge,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;pC(t,"abs");let r=new Float32Array(fa.sizeFromShape(t.shape));return r=fC(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function gC(e){return(t,n,r,a,s)=>{let i=lf.assertAndGetBroadcastShape(t,n),o=i.length,l=fa.computeStrides(i),u=fa.sizeFromShape(i),p=fa.getTypedArrayFromDType(s,u),h=t.length,d=n.length,c=fa.computeStrides(t),f=fa.computeStrides(n),m=lf.getBroadcastDims(t,i),g=lf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<p.length;++t)p[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<p.length;++t){let n=fa.indexToLoc(t,o,l),s=n.slice(-h);m.forEach((e=>s[e]=0));let i=fa.locToIndex(s,h,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=fa.locToIndex(u,d,f);p[t]=e(r[i],a[y])}return[p,i]}}function yC(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var bC={kernelName:gt,backendName:"cpu",kernelFunc:yC};function xC(e,t,n="float32"){if("complex64"===n){return yC({inputs:{real:xC(e,t,"float32"),imag:xC(e,t,"float32")},backend:e})}let r=fa.makeZerosTypedArray(fa.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function vC(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var wC={kernelName:an,backendName:"cpu",kernelFunc:vC};function kC(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var IC={kernelName:Qn,backendName:"cpu",kernelFunc:kC};function SC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return vC({inputs:{x:a},backend:n});let e=xC(n,a.shape,a.dtype),t=SC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=yC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=kC({inputs:{input:a},backend:n}),t=SC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!fa.hasEncodingLoss(a.dtype,s)){let e=vC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=fa.toTypedArray([0],a.dtype),[r,s]=gC(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var NC={kernelName:ct,backendName:"cpu",kernelFunc:SC};function TC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;pC([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,p="string"===s.dtype?lf.fromUint8ToStringArray(l):l,h="string"===s.dtype?lf.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,p,h,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=SC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,p=SC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(p.dataId),d=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=yC({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function _C(e){return(t,n,r,a,s,i)=>{let o=lf.assertAndGetBroadcastShape(t,n),l=fa.sizeFromShape(o),u=o.length,p=fa.computeStrides(o),h=fa.getTypedArrayFromDType("float32",l),d=fa.getTypedArrayFromDType("float32",l),c=lf.getBroadcastDims(t,o),f=lf.getBroadcastDims(n,o),m=lf.mergeRealAndImagArrays(r,a),g=lf.mergeRealAndImagArrays(s,i),y=t.length,b=fa.computeStrides(t),x=n.length,v=fa.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<h.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){let n=fa.indexToLoc(t,u,p),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=fa.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=fa.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}var CC=gC(((e,t)=>e+t)),EC=_C(((e,t,n,r)=>({real:e+n,imag:t+r}))),$C=TC(qe,CC,EC),AC={kernelName:qe,backendName:"cpu",kernelFunc:$C};function FC(e,t,n,r,a){let s=fa.sizeFromShape(r),i=fa.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function RC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Ii([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function DC(e){return(t,n,r)=>{let a=fa.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function MC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(pC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=fa.sizeFromShape(i.shape),p=n||i.dtype,h=fa.getArrayFromDType(p,u);for(let e=0;e<u;++e)h[e]=t(l[e],a);return o.makeTensorInfo(i.shape,p,h)}}function OC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(pC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,p=t(l,u,a);return o.makeTensorInfo(i.shape,u,p)}}var LC=DC((e=>Math.ceil(e))),zC=OC(ft,LC),PC={kernelName:ft,backendName:"cpu",kernelFunc:zC};function BC(e,t,n,r){let a=fa.getArrayFromDType(n,fa.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=fa.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?lf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var WC=gC(((e,t)=>e===t?1:0)),VC=TC(Gt,WC,null,"bool"),UC={kernelName:Gt,backendName:"cpu",kernelFunc:VC},GC=DC((e=>Math.exp(e))),HC=OC(Ht,GC,"float32"),jC={kernelName:Ht,backendName:"cpu",kernelFunc:HC},qC=DC((e=>Math.expm1(e))),KC=OC(qt,qC),XC={kernelName:qt,backendName:"cpu",kernelFunc:KC},YC=DC((e=>Math.floor(e))),ZC=OC(Zt,YC),JC={kernelName:Zt,backendName:"cpu",kernelFunc:ZC};function QC(e,t,n,r,a,s,i,o,l){let u=Ii([r,s],n);for(let n=0;n<r;n++){let r=[],p=0;for(let t=0;t<a;t++){let s=e[n*a+t];p+=s*i[t],r.push(s)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(p*s+e))}return u}function eE(e,t,n){let r=Ii(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var tE=gC(((e,t)=>e>t?1:0)),nE=TC(nn,tE,null,"bool"),rE={kernelName:nn,backendName:"cpu",kernelFunc:nE},aE=gC(((e,t)=>e>=t?1:0)),sE=TC(rn,aE,null,"bool"),iE={kernelName:rn,backendName:"cpu",kernelFunc:sE},oE=gC(((e,t)=>e<t?1:0)),lE=TC(dn,oE,null,"bool"),uE={kernelName:dn,backendName:"cpu",kernelFunc:lE},pE=gC(((e,t)=>e<=t?1:0)),hE=TC(cn,pE,null,"bool"),dE={kernelName:cn,backendName:"cpu",kernelFunc:hE};function cE(e,t,n){let r=(t-e)/(n-1),a=fa.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var fE=DC((e=>Math.log(e))),mE=OC(mn,fE),gE={kernelName:mn,backendName:"cpu",kernelFunc:mE};function yE(e,t,n,r){let a=fa.getTypedArrayFromDType(r,fa.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var bE=gC(((e,t)=>Math.max(e,t))),xE=TC(Tn,bE),vE={kernelName:Tn,backendName:"cpu",kernelFunc:xE},wE=gC(((e,t)=>Math.min(e,t))),kE=TC(Dn,wE),IE={kernelName:Dn,backendName:"cpu",kernelFunc:kE},SE=gC(((e,t)=>e*t)),NE=_C(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),TE=TC(zn,SE,NE),_E={kernelName:zn,backendName:"cpu",kernelFunc:TE};function CE(e,t,n){let r=fa.createScalarValue(-1,n);return SE([],t,r,e,n)}var EE={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;pC(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=CE(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},$E=gC(((e,t)=>e!==t?1:0)),AE=TC(Bn,$E,null,"bool"),FE={kernelName:Bn,backendName:"cpu",kernelFunc:AE};function RE(e,t,n,r,a){let s=t.length,i=fa.sizeFromShape(t),o=fa.computeStrides(t),l=fa.computeStrides(a),u=fa.getTypedArrayFromDType(n,fa.sizeFromShape(a));for(let t=0;t<i;++t){let n=fa.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[fa.locToIndex(a,s,l)]=e[t]}return u}function DE(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;pC(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=RE(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var ME={kernelName:Ur,backendName:"cpu",kernelFunc:DE};function OE(e,t,n,r){let[a,s]=lf.computeOutAndReduceShapes(e,r),i=ns(t,"int32"),o=fa.makeZerosTypedArray(fa.sizeFromShape(a),i),l=fa.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var LE={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;pC(a,"prod");let o=a.shape.length,l=fa.parseAxisParam(s,a.shape),u=lf.getAxesPermutation(l,o),p=l,h=a,d=[];null!=u&&(h=DE({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(h),p=lf.getInnerMostAxes(p.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=OE(h.shape,h.dtype,c,p),y=m;return i&&(y=lf.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function zE(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return fa.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=fa.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var PE=DC((e=>1/Math.sqrt(e))),BE=OC(pr,PE),WE={kernelName:pr,backendName:"cpu",kernelFunc:BE};function VE(e,t,n,r,a,s,i,o,l,u){let p=[r/a,a],h=e.values,d=t.values;if(0===r)return Ii(n,t.dtype);let c=Ii(p,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var UE=DC((e=>1/(1+Math.exp(-e)))),GE=MC(xr,(e=>1/(1+Math.exp(-e)))),HE={kernelName:xr,backendName:"cpu",kernelFunc:GE};function jE(e,t,n,r,a){let s=Vo.isSliceContinous(r,t,n),i=fa.sizeFromShape(n),o=fa.computeStrides(r);if(s){let n=Vo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Ii(r,a,"string"===a?lf.fromUint8ToStringArray(e):e),u=Ii(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?lf.fromStringArrayToUint8(u.values):u.values}function qE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;pC(a,"slice");let[o,l]=Vo.parseSliceParams(a,s,i);Vo.assertParamsValid(a,o,l);let u=jE(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var KE={kernelName:mr,backendName:"cpu",kernelFunc:qE};function XE(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(lf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[fa.getArrayFromDType(n,0),[0,h],fa.getArrayFromDType(a,0),u,p]}let d=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h];if(n<0)throw new Error(lf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(lf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)p[e]=e;return[t,[o,h],n,u,p]}{let t=f[l-1],s=fa.getArrayFromDType(n,t*h),d=fa.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=r[t],p[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,u,p]}}function YE(e,t,n,r,a){let s=fa.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==p)throw new Error(lf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,l.push(1)}else{if(t<0)throw new Error(lf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==p){if(u<=0)throw new Error(lf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(lf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=e}if(fa.sizeFromShape(l)!==s)throw new Error(lf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=fa.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function ZE(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(lf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce(((e,t)=>e*t),1),c=fa.getArrayFromDType(n,d);if(0===o)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(lf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(lf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(lf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(lf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var JE=DC((e=>Math.sqrt(e))),QE=MC(wr,(e=>Math.sqrt(e))),e$={kernelName:wr,backendName:"cpu",kernelFunc:QE},t$=gC(((e,t)=>{let n=e-t;return n*n})),n$=TC(Ar,t$),r$={kernelName:Ar,backendName:"cpu",kernelFunc:n$};function a$(e,t,n,r){let a=Ii(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var s$=class{constructor(e,t,n,r,a,s){this.separator=fa.encodeString(e),this.nGramWidths=t,this.leftPad=fa.encodeString(n),this.rightPad=fa.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<p;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+p-1)*this.separator.length,n[r+i]=new Uint8Array(d);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<p-1;++t)m(e[h+t]),m(this.separator);if(p>0){m(e[h+p-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=fa.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}};function i$(e,t,n,r,a,s,i,o){return new s$(n,r,a,s,i,o).compute(e,t)}function o$(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function l$(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;o$(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=fa.getArrayFromDType("int32",2*s),u=new Array(s),p=[r,i],h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=a[h],++h;return[l,u,p]}function u$(e,t){let n=fa.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=fa.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var p$=gC(((e,t)=>e-t)),h$=_C(((e,t,n,r)=>({real:e-n,imag:t-r}))),d$=TC(Lr,p$,h$),c$={kernelName:Lr,backendName:"cpu",kernelFunc:d$};function f$(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=Ii(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var m$=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function g$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);g$(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(fa.swap(e,n,t),m$(e[r],a)>0&&fa.swap(e,n,r);s<i;){for(fa.swap(e,s,i),s++,i--;m$(e[s],a)<0;)s+=1;for(;m$(e[i],a)>0;)i-=1}0===m$(e[n],a)?fa.swap(e,n,i):(i+=1,fa.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function y$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=fa.getTypedArrayFromDType(n,i*r),u=fa.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(g$(i,r),i=i.slice(0,r)),a&&i.sort(m$);let p=t*r,h=l.subarray(p,p+r),d=u.subarray(p,p+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}let p=t.slice();return p[p.length-1]=r,[Ii(p,n,l),Ii(p,"int32",u)]}function b$(e,t,n,r){let a=fa.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Ua(s,r,e),u=[],p=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(p)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let h=s.slice();h[1]=Object.keys(i).length;let d=new Ua(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}go("cpu",(()=>new dC),1);var x$=MC(Wt,(e=>e>=0?e:Math.exp(e)-1)),v$={kernelName:Wt,backendName:"cpu",kernelFunc:x$};function w$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;pC([a],"leakyRelu");let i=fa.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=fa.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var k$={kernelName:hn,backendName:"cpu",kernelFunc:w$},I$=gC(((e,t)=>e<0?t*e:e));function S$(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;pC([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=I$(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var N$={kernelName:Yn,backendName:"cpu",kernelFunc:S$},T$=MC(tr,(e=>Math.max(0,e))),_$={kernelName:tr,backendName:"cpu",kernelFunc:T$},C$=MC(or,(e=>Math.min(Math.max(0,e),6))),E$={kernelName:or,backendName:"cpu",kernelFunc:C$};function $$(e,t,n,r,a){if("linear"===n)return vC({inputs:{x:t},backend:e});if("relu"===n)return T$({inputs:{x:t},backend:e});if("elu"===n)return x$({inputs:{x:t},backend:e});if("relu6"===n)return C$({inputs:{x:t},backend:e});if("prelu"===n)return S$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return w$({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return GE({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function A$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=fa.sizeFromShape(a.shape),o=fa.inferFromImplicitShape(s,i),l=fa.sizeFromShape(o);fa.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var F$={kernelName:nr,backendName:"cpu",kernelFunc:A$};function R$(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;pC([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=fa.sizeFromShape(f),y=fa.sizeFromShape(m),b=So.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);fa.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,h]:[y,h,c],v=A$({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),w=A$({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,_=n.data.get(w.dataId).values,C=fa.computeStrides(v.shape),E=fa.computeStrides(w.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=Ii([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){let a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*_[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var D$={kernelName:lt,backendName:"cpu",kernelFunc:R$};var M$={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:p}=a,{transposeA:h,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=R$({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:d},backend:s}),u&&(n=$C({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=$$(s,t,c,p,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},O$=MC(He,(e=>Math.acos(e))),L$={kernelName:He,backendName:"cpu",kernelFunc:O$},z$=MC(je,(e=>Math.acosh(e))),P$={kernelName:je,backendName:"cpu",kernelFunc:z$};var B$={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;pC(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=Ii(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var W$={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;pC(a,"all");let o=fa.parseAxisParam(s,a.shape),l=o,u=lf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=DE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=lf.getInnerMostAxes(l.length,a.shape.length)),lf.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=lf.computeOutAndReduceShapes(p.shape,l),c=fa.sizeFromShape(d),f=fa.makeZerosTypedArray(fa.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=A$({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var V$={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;pC(a,"any");let o=fa.parseAxisParam(s,a.shape),l=o,u=lf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=DE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=lf.getInnerMostAxes(l.length,a.shape.length)),lf.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=lf.computeOutAndReduceShapes(p.shape,l),c=fa.sizeFromShape(d),f=fa.makeZerosTypedArray(fa.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=A$({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var U$={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;pC(a,"argMax");let i=fa.parseAxisParam(s,a.shape),o=lf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=DE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=lf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],lf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=lf.computeOutAndReduceShapes(l.shape,i),d=fa.sizeFromShape(p),c=fa.makeZerosTypedArray(d,"int32"),f=fa.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}};var G$={kernelName:Je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;pC(a,"argMin");let i=fa.parseAxisParam(s,a.shape),o=lf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=DE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=lf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],lf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=lf.computeOutAndReduceShapes(l.shape,i),d=fa.sizeFromShape(p),c=fa.makeZerosTypedArray(d,"int32"),f=fa.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}},H$=MC(Qe,(e=>Math.asin(e))),j$={kernelName:Qe,backendName:"cpu",kernelFunc:H$},q$=MC(et,(e=>Math.asinh(e))),K$={kernelName:et,backendName:"cpu",kernelFunc:q$},X$=MC(tt,(e=>Math.atan(e))),Y$={kernelName:tt,backendName:"cpu",kernelFunc:X$},Z$=gC(((e,t)=>Math.atan2(e,t))),J$=TC(rt,Z$),Q$={kernelName:rt,backendName:"cpu",kernelFunc:J$},eA=MC(nt,(e=>Math.atanh(e))),tA={kernelName:nt,backendName:"cpu",kernelFunc:eA};function nA(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ii(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,p+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,p=Math.max(0,i),d=Math.min(a.inWidth,h+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=p;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function rA(e,t,n,r,a=!1,s=!1){let i=Ii(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Ii(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=p;let x=Math.min(r.inWidth,d+h),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=p){let l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function aA(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ii(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,d+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=p;let m=Math.min(a.inHeight,c+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(a.inWidth,f+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<_;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=p){let i=a+n*r[2];for(let n=o;n<c;n+=h){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var sA={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pC(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;fa.assert(lf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=lf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&fa.arraysEqual(p.inShape,p.outShape))u=vC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=fa.computeStrides(a.shape),r=nA(e,a.shape,a.dtype,t,p,"avg");u=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return u}};var iA={kernelName:it,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;pC(a,"avgPool3d");let p=lf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=aA(n.data.get(a.dataId).values,a.shape,a.dtype,fa.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};var oA={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;pC([a,s],"avgPool3DGrad");let p=lf.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,w=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=v-1-p.padInfo.front,S=k-1-p.padInfo.left,N=w-1-p.padInfo.top,T=Ii(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=p.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}T.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var lA={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;pC([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=lf.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,v=y-1-p.padInfo.top,w=Ii(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=Ii(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/h;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=p.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var uA={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;fa.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),fa.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),fa.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),pC([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let p=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,y=c.length,b=d.length,x=h.length,v=0,w=0,k=0,I=0;for(let e=0;e<p.length;++e)m[e]=f[v++]+(p[e]-h[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var pA={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;pC([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=lf.getReshaped(a.shape,s,o),u=lf.getPermuted(l.length,s.length),p=lf.getReshapedPermuted(a.shape,s,o),h=lf.getSliceBeginCoords(i,s.length),d=lf.getSliceSize(p,i,s.length),c=A$({inputs:{x:a},backend:n,attrs:{shape:l}}),f=DE({inputs:{x:c},backend:n,attrs:{perm:u}}),m=A$({inputs:{x:f},backend:n,attrs:{shape:p}}),g=qE({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var hA={kernelName:pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=FC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var dA={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=lf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},cA=MC(mt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fA={kernelName:mt,backendName:"cpu",kernelFunc:cA},mA={kernelName:yt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(fa.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function gA(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var yA={kernelName:on,backendName:"cpu",kernelFunc:gA};function bA(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=fa.parseAxisParam(a,t[0].shape)[0],i=lf.computeOutShape(t.map((e=>e.shape)),s);if(0===fa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>fa.sizeFromShape(e.shape)>0));if(1===o.length)return vC({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(lf.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>kC({inputs:{input:e},backend:n}))),t=o.map((e=>gA({inputs:{input:e},backend:n}))),r=bA({inputs:e,backend:n,attrs:{axis:s}}),a=bA({inputs:t,backend:n,attrs:{axis:s}}),i=yC({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=fa.sizeFromShape(e.shape.slice(s));return A$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),p=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=lf.computeOutShape(u.map((e=>e.shape)),1);let h=1===u[0].shape[0],d=BC(p,i,t[0].dtype,h),c=lf.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var xA={kernelName:bt,backendName:"cpu",kernelFunc:bA};function vA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;pC([a,s],"conv2d");let h=lf.convertConv2DDataFormat(l),d=lf.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ua(d.outShape,a.dtype),w=fa.computeStrides(a.shape),k=fa.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],_=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<d.outHeight;++e){let r=n+e*C,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var wA={kernelName:xt,backendName:"cpu",kernelFunc:vA};var kA={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;pC([a,s],"conv2dBackpropFilter");let h=lf.convertConv2DDataFormat(l),d=lf.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ua(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ua(a.shape,a.dtype,w),S=new Ua(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let p=t;p<n;++p){let t=e+p*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,p,e,o):I.get(u,i,t,n)*S.get(u,o,p,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var IA={kernelName:wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;pC([a,s],"conv2dBackpropInput");let h=fa.computeStrides(s.shape),d=fa.computeStrides(a.shape),c=lf.convertConv2DDataFormat(u),f=lf.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new Ua(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),p=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<C;++e){p+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=p}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var SA={kernelName:kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;pC([a,s],"conv3d");let u=lf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ua(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=fa.computeStrides(a.shape),N=fa.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<p;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var NA={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;pC([a,s],"conv3dBackpropFilterV2");let u=fa.computeStrides(a.shape),p=fa.computeStrides(s.shape),h=lf.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ua(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=p,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(h.outHeight,(h.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),p=r*k+o;for(let o=0;o<h.inChannels;++o){let m=o*I+p;for(let p=0;p<h.outChannels;++p){let g=0;for(let m=0;m<h.batchSize;++m){let h=m*$,y=m*N;for(let m=t;m<n;++m){let t=(e+m*d-D)*A+h,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-M)*R+s+o]*S[t+p]}}}}x[m+p]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var TA={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;pC([a],"conv3dBackpropInputV2");let u=fa.computeStrides(a.shape),p=fa.computeStrides(s.shape),h=lf.computeConv3DInfo(l,s.shape,o,1,i),d=new Ua(h.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=p,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=$-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let p=0;p<M;++p){let h=p-H,d=Math.max(0,Math.ceil(h/V)),C=Math.min(P,(A+h)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<C;++i){let o=x*e+v*n+w*r+k*i,l=S*(E-1-a)+N*($-1-s)+T*(A-1-(i*V-h))+_*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*p+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},_A=MC(Nt,(e=>Math.cos(e))),CA={kernelName:Nt,backendName:"cpu",kernelFunc:_A},EA=MC(Tt,(e=>Math.cosh(e))),$A={kernelName:Tt,backendName:"cpu",kernelFunc:EA};var AA={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,h,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Ii([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=fa.computeStrides(a.shape),k=fa.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=p)continue;let o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let p=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(p<0||p>h-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(p),a=Math.ceil(p),o=p-n;for(let l=0;l<g;l++){let p=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(p<0||p>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let h=Math.floor(p),m=Math.ceil(p),b=p-h;for(let r=0;r<c;r++){let s=r+h*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let p=v[s];s=r+h*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(p-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(p);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var FA={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;pC(a,"cumprod");let l=lf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=DE({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=lf.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ns(u.dtype,"int32"),d=fa.makeOnesTypedArray(fa.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let r=m(e,t-1);d[n]=i?c[r]*d[r]:c[n]*d[r]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=DE({inputs:{x:g},backend:n,attrs:{perm:lf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var RA={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;pC(a,"cumsum");let l=lf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=DE({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=lf.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ns(u.dtype,"int32"),d=fa.makeZerosTypedArray(fa.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=DE({inputs:{x:g},backend:n,attrs:{perm:lf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var DA={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=FC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=RC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var MA={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;fa.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],h=l*s,d=u*s,c=p/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+p*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,c],a.dtype,m)}};function OA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;pC([a,s],"depthwiseConv2DNative");let p=fa.computeStrides(a.shape),h=fa.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),fa.assert(lf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=lf.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new Ua(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*p[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-v;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*h[0],i=t+n*p[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*h[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var LA={kernelName:Ft,backendName:"cpu",kernelFunc:OA};var zA={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;pC([a,s],"depthwiseConv2dNativeBackpropFilter");let h=lf.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Ua(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ua(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ua(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(h.outWidth,(h.inWidth+y-r)/c);for(let i=0;i<h.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<h.batchSize;++l)for(let p=t;p<n;++p){let t=e+p*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,p,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var PA={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;pC([a,s],"depthwiseConv2DNativeBackpropInput");let h=fa.computeStrides(a.shape),d=fa.computeStrides(s.shape),c=lf.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new Ua(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),p=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=S*(C-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e){p+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=p}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var BA={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=fa.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ii([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},WA={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,p=r.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=lf.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=fa.sizeFromShape(T),C=T.length,E=fa.getArrayFromDType(r.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*N;if(c>=0&&c<m){let i=fa.locToIndex([e,s,c,o],p,fa.computeStrides(r.shape)),f=fa.locToIndex([t,n,o],d,fa.computeStrides(a.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[fa.locToIndex([e,t,s,o],C,fa.computeStrides(T))]=l}}}return{dataId:l.write(fa.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},VA={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=fa.toNestedArray(r.shape,u.data.get(r.dataId).values),h=fa.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=lf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);fa.assert(s.rank===N.length,(()=>`Error in ${zt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=fa.toNestedArray(N,u.data.get(s.dataId).values),_=fa.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=p[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=t,l=n)}}}_[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(fa.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},UA={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=fa.toNestedArray(r.shape,u.data.get(r.dataId).values),h=fa.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=lf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);fa.assert(s.rank===N.length,(()=>`Error in ${Lt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=fa.toNestedArray(N,u.data.get(s.dataId).values),_=fa.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=p[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=r,l=u)}}}_[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(fa.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function GA(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;pC(s,"sum"),t="bool"===s.dtype?SC({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):vC({inputs:{x:s},backend:r});let l=t.shape.length,u=fa.parseAxisParam(i,t.shape),p=lf.getAxesPermutation(u,l),h=u,d=t;null!=p&&(d=DE({inputs:{x:t},backend:r,attrs:{perm:p}}),h=lf.getInnerMostAxes(h.length,l)),lf.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=lf.computeOutAndReduceShapes(d.shape,h),m=xC(r,c,lf.upcastType(d.dtype,"int32")),g=fa.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=A$({inputs:{x:m},backend:r,attrs:{shape:lf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=p&&r.disposeIntermediateTensorInfo(d),m}var HA={kernelName:kr,backendName:"cpu",kernelFunc:GA};var jA={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=lf.decodeEinsumEquation(a,s.length);lf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=lf.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of p[e]){let e,{permutationIndices:r,expandDims:a}=lf.getEinsumPermutation(c,l[t]);lf.isIdentityPermutation(r)?e=s[t]:(e=DE({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);fa.arraysEqual(e.shape,i)||(e=A$({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=TE({inputs:{a:e,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=GA({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};var qA={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;pC([r,a],"eluGrad");let s=new Float32Array(fa.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},KA=lf.ERF_P,XA=lf.ERF_A1,YA=lf.ERF_A2,ZA=lf.ERF_A3,JA=lf.ERF_A4,QA=lf.ERF_A5,eF=MC(Ut,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+KA*n);return t*(1-((((QA*r+JA)*r+ZA)*r+YA)*r+XA)*r*Math.exp(-n*n))})),tF={kernelName:Ut,backendName:"cpu",kernelFunc:eF};function nF(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(fa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),A$({inputs:{x:a},backend:n,attrs:{shape:o}})}var rF={kernelName:jt,backendName:"cpu",kernelFunc:nF},aF=gC(((e,t)=>e/t)),sF=TC(Pt,aF),iF={kernelName:Pt,backendName:"cpu",kernelFunc:sF};function oF(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=fa.sizeFromShape(u),h=fa.getTypedArrayFromDType("float32",p),d=fa.getTypedArrayFromDType("float32",p);for(let e=0;e<a;e++){let r=qE({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=qE({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=yC({inputs:{real:r,imag:a},backend:n}),{real:u,imag:p}=lF(i,t,n),c=lf.mergeRealAndImagArrays(u,p);for(let t=0;t<s;t++){let n=lf.getComplexWithIndex(c,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=yC({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function lF(e,t,n){let r=fa.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return!(e&e-1)}(r)){let a=uF(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",fa.createScalarValue(r,"float32")),i=vC({inputs:{x:s},backend:n}),l=iF.kernelFunc({inputs:{a:e,b:s},backend:n}),u=iF.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:p,imag:h}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=lf.exponent(a*r,t,n),l=lf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),lf.assignToTypedArray(r,s,i,a)}return r}(lf.mergeRealAndImagArrays(s,i),r,t);return lf.splitRealAndImagArrays(e)}}function uF(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=lf.mergeRealAndImagArrays(e,t),i=n/2,o=lf.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=a.makeTensorInfo(p,"float32",l),d=a.makeTensorInfo(p,"float32",u),c=yC({inputs:{real:h,imag:d},backend:a}),f=lf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=yC({inputs:{real:b,imag:x},backend:a}),w=uF(l,u,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=yC({inputs:{real:N,imag:T},backend:a}),C=uF(m,g,i,r,a),E=C.real,$=C.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=yC({inputs:{real:F,imag:R},backend:a}),M=lf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=yC({inputs:{real:L,imag:z},backend:a}),B=TE({inputs:{a:P,b:D},backend:a}),W=$C({inputs:{a:_,b:B},backend:a}),V=d$({inputs:{a:_,b:B},backend:a}),U=kC({inputs:{input:W},backend:a}),G=kC({inputs:{input:V},backend:a}),H=gA({inputs:{input:W},backend:a}),j=gA({inputs:{input:V},backend:a}),q=bA({inputs:[U,G],backend:a,attrs:{axis:0}}),K=bA({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var pF={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=fa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=A$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=oF(i,!1,n),l=A$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function hF(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||fa.inferDtype(a),o=fa.getArrayFromDType(i,fa.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var dF={kernelName:Xt,backendName:"cpu",kernelFunc:hF};var cF={kernelName:Yt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=fa.getTypedArrayFromDType(r.dtype,fa.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,p=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,h=p[o];if(i>=0&&i<l){h=p[t+n+i*u+a]}s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fF=gC(((e,t)=>Math.floor(e/t))),mF=TC(Jt,fF,null,"int32"),gF={kernelName:Jt,backendName:"cpu",kernelFunc:mF};var yF={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=vA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let e=A$({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=$C({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=$C({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=A$({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=$$(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=$$(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var bF={kernelName:ea,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=OA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;m=$C({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=$$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var xF={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=fa.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,h]=lf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=QC(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,p,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};var vF={kernelName:en,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;pC([a,s],"gatherV2");let l=fa.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];fa.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let h=o;null==o&&(h=0);let d=fa.sizeFromShape(s.shape),c=lf.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=A$({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=A$({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=eE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var wF={kernelName:sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=fa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=A$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=oF(i,!0,n),l=A$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},kF=MC(ln,(e=>Number.isFinite(e)?1:0),"bool"),IF={kernelName:ln,backendName:"cpu",kernelFunc:kF},SF=MC(un,(e=>Math.abs(e)===1/0?1:0),"bool"),NF={kernelName:un,backendName:"cpu",kernelFunc:SF},TF=MC(pn,(e=>Number.isNaN(e)?1:0),"bool"),_F={kernelName:pn,backendName:"cpu",kernelFunc:TF};var CF={kernelName:fn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=cE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},EF=MC(gn,(e=>Math.log1p(e))),$F={kernelName:gn,backendName:"cpu",kernelFunc:EF},AF=gC(((e,t)=>e&&t)),FF=TC(yn,AF,null,"bool"),RF={kernelName:yn,backendName:"cpu",kernelFunc:FF},DF=MC(bn,(e=>e?0:1),"bool"),MF={kernelName:bn,backendName:"cpu",kernelFunc:DF},OF=gC(((e,t)=>e||t)),LF=TC(xn,OF,null,"bool"),zF={kernelName:xn,backendName:"cpu",kernelFunc:LF};var PF={kernelName:In,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;pC(a,"LRN");let u=a.shape[3],p=u-1,h=n.data.get(a.dataId).values,d=fa.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,p),a=0;for(;n<=r;n++){let e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=h[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var BF={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;pC(i,"LRNGrad");let h=fa.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*p*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-p)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function WF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,p=fa.parseAxisParam(s,l),h=p,d=lf.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=RE(c,l,a.dtype,d,e),h=lf.getInnerMostAxes(h.length,u),l=e}pC(a,"max"),lf.assertAxesAreInnerMostDims("max",h,u);let[f,m]=lf.computeOutAndReduceShapes(l,h),g=yE(c,fa.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=lf.expandShapeToKeepDim(f,p)),{dataId:y,shape:b,dtype:a.dtype}}var VF={kernelName:Nn,backendName:"cpu",kernelFunc:WF};var UF={kernelName:_n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pC(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;fa.assert(lf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=lf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&fa.arraysEqual(p.inShape,p.outShape))u=vC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=fa.computeStrides(a.shape),r=nA(e,a.shape,a.dtype,t,p,"max");u=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return u}};var GF={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;pC(a,"maxPool3d");let p=lf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=aA(n.data.get(a.dataId).values,a.shape,a.dtype,fa.computeStrides(a.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};var HF={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;pC([a,s],"maxPool3DGrad");let p=lf.computePool3DInfo(s.shape,i,o,1,l,u),h=function(e,t){let n=Ii(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,p+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,h+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*p*h+a*p+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),p),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.dilationDepth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterDepth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=b-1-p.padInfo.front,k=v-1-p.padInfo.left,I=x-1-p.padInfo.top,S=Ii(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-h.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=N.get(e,r,s,u,t)*d)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var jF={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;pC([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=lf.computePool2DInfo(o.shape,l,u,1,p,h),c=n.data.get(o.dataId).values,f=Ii(d.outShape,o.dtype,rA(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ii(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ii(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var qF={kernelName:An,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;pC(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,p=lf.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=function(e,t,n,r,a){let s=nA(e,0,n,fa.computeStrides(t),a,"max"),i=rA(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,p),c=l.write(h,p.outShape,r.dtype),f=l.write(d,p.outShape,r.dtype);return[{dataId:c,shape:p.outShape,dtype:r.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};var KF={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=fa.parseAxisParam(s,a.shape),l=lf.computeOutAndReduceShapes(a.shape,o)[1],u=fa.sizeFromShape(l),p=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=SC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(d);let c=sF({inputs:{a:d,b:h},backend:n});p.push(c);let f=GA({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var XF={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;pC(a,"min");let o=fa.parseAxisParam(s,a.shape),l=o,u=lf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=DE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=lf.getInnerMostAxes(l.length,a.shape.length)),lf.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=lf.computeOutAndReduceShapes(p.shape,l),c=fa.sizeFromShape(d),f=fa.makeZerosTypedArray(fa.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=A$({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var YF={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;pC(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),p="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,c=fa.computeStrides(a.shape),f=fa.sizeFromShape(o),m=o.length,g=fa.computeStrides(o),y=fa.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=fa.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+p);t=t.map(((e,t)=>e-l[t]));let n=fa.locToIndex(t,d,c);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},ZF=gC(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),JF=TC(On,ZF),QF={kernelName:On,backendName:"cpu",kernelFunc:JF},eR=y(E());function tR(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=fa.parseAxisParam([o],a.shape),u=WF({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=lf.expandShapeToKeepDim(u.shape,l),h=A$({inputs:{x:u},backend:n,attrs:{shape:p}}),d=d$({inputs:{a:a,b:h},backend:n}),c=HC({inputs:{x:d},backend:n}),f=GA({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=A$({inputs:{x:f},backend:n,attrs:{shape:p}}),g=sF({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var nR={kernelName:Nr,backendName:"cpu",kernelFunc:tR};var rR={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;pC(a,"multinomial");let l=o?a:tR({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],c=fa.makeZerosTypedArray(fa.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*p,n=new Float32Array(p-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];let r=eR.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},aR=pm.nonMaxSuppressionV3Impl;var sR={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;pC(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h}=aR(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},iR=pm.nonMaxSuppressionV4Impl;var oR={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;pC(a,"NonMaxSuppressionPadded");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=iR(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},lR=pm.nonMaxSuppressionV5Impl;var uR={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;pC(a,"NonMaxSuppressionWithScore");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=lR(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var pR={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;pC(a,"oneHot");let l=fa.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let p=n.data.get(a.dataId).values;for(let e=0;e<l;++e)p[e]>=0&&p[e]<s&&(u[e*s+p[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function hR(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=kC({inputs:{input:r},backend:n}),t=hR({inputs:{x:e},backend:n}),a=gA({inputs:{input:r},backend:n}),s=hR({inputs:{x:a},backend:n}),i=yC({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return hF({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var dR={kernelName:Kr,backendName:"cpu",kernelFunc:hR};var cR={kernelName:Gn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=kC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=gA({inputs:{input:a},backend:r}),i=hR({inputs:{x:s},backend:r}),o=yC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return hF({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function fR(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return nF({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{fa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),fa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=bA({inputs:t.map((e=>{let t=nF({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var mR={kernelName:jn,backendName:"cpu",kernelFunc:fR};var gR={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;pC(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,p=fa.sizeFromShape(a.shape),h=a.shape.length,d=fa.computeStrides(a.shape),c=fa.sizeFromShape(o),f=o.length,m=fa.computeStrides(o),g=fa.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<p;e++){let t=fa.indexToLoc(e,h,d).map(((e,t)=>e+l[t]));g[fa.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},yR=gC(((e,t)=>Math.pow(e,t))),bR=TC(Xn,yR),xR={kernelName:Xn,backendName:"cpu",kernelFunc:bR};var vR={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=zE(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},wR=MC(er,(e=>1/e)),kR={kernelName:er,backendName:"cpu",kernelFunc:wR};var IR={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;pC(a,"resizeBilinear");let l=fa.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(fa.sizeFromShape([h,u,p,f])),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),p=o+n*l[2],h=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[p+e],n=m[h+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,u,p,f],"float32",g)}};var SR={kernelName:ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;pC([s,a],"resizeBilinearGrad");let o=fa.computeStrides(a.shape),[l,u,p,h]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*p*h),m=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<h;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,p,u,h],"float32",f)}};var NR={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;pC(a,"resizeNearestNeighbor");let l=fa.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*p*f),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<h;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<p;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,p,f],a.dtype,g)}};var TR={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;pC([s,a],"resizeNearestNeighborGrad");let o=fa.computeStrides(a.shape),l=fa.computeStrides(s.shape),[u,p,h,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*p*h*d),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&f>1?h-1:h],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(p-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var _R={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;pC(a,"reverse");let i=a.shape.length,o=fa.parseAxisParam(s,a.shape);if(0===i)return vC({inputs:{x:a},backend:n});let l=new Ua(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},CR={kernelName:Zr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=fa.getTypedArrayFromDType(r.dtype,fa.sizeFromShape(r.shape)),[u,p,h,d]=r.shape,[c,f]=lf.getImageCenter(i,p,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*h*p*d;for(let e=0;e<p;e++){let n=e*(h*d);for(let r=0;r<h;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<p){k=y[t+w*(h*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ER=MC(ur,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),$R={kernelName:ur,backendName:"cpu",kernelFunc:ER};var AR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=lf.calculateShapes(s,a,i),d=VE(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,p,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function FR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function RR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var DR={kernelName:dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=fa.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?FR(n,t[e+l]):RR(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};var MR={kernelName:cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;pC([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=ns(a.dtype,s.dtype),h=fa.makeZerosTypedArray(fa.sizeFromShape(a.shape),p),d=0,c=0===i||i>1||1===a.shape.length?1:fa.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(a.shape,p,h)}},OR=lf.SELU_SCALEALPHA,LR=lf.SELU_SCALE,zR=MC(fr,(e=>e>=0?LR*e:OR*(Math.exp(e)-1))),PR={kernelName:fr,backendName:"cpu",kernelFunc:zR},BR=MC(br,(e=>e<0?-1:e>0?1:0)),WR={kernelName:br,backendName:"cpu",kernelFunc:BR},VR=MC(gr,(e=>Math.sin(e))),UR={kernelName:gr,backendName:"cpu",kernelFunc:VR},GR=MC(yr,(e=>Math.sinh(e))),HR={kernelName:yr,backendName:"cpu",kernelFunc:GR},jR=Math.log(1.1920928955078125e-7)+2,qR=MC(vr,(e=>{let t,n=e>-jR,r=e<jR,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),KR={kernelName:vr,backendName:"cpu",kernelFunc:qR};var XR={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;pC([a],"spaceToBatchND");let o=fa.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=gR.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=lf.getReshaped(u.shape,s,o,!1),h=lf.getPermuted(p.length,s.length,!1),d=lf.getReshapedPermuted(u.shape,s,o,!1),c=A$({inputs:{x:u},backend:n,attrs:{shape:p}}),f=DE({inputs:{x:c},backend:n,attrs:{perm:h}}),m=A$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var YR={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[h,d,c,f,m]=XE(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var ZR={kernelName:_r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,h]=YE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var JR={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=ZE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}};var QR={kernelName:Er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=ZE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}};var eD={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=lf.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":t=VE(m,r.bufferSync(i),l,c,h,p,u,d,Boolean(r.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":t=VE(m,r.bufferSync(i),l,c,h,p,u,d,r.data.get(o.dataId).values[0],f);break;case"string":t=VE(m,r.bufferSync(i),l,c,h,p,u,d,fa.decodeString(r.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}};var tD={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=fa.parseAxisParam(i,a.shape)[0],l=lf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=qE({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},nD={kernelName:Fr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;pC(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rD=MC(Xr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),aD={kernelName:Xr,backendName:"cpu",kernelFunc:rD};var sD={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r;pC(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Vo.sliceInfo(a.shape,s,i,o,l,u,p,h,d);if(g)c=A$({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){fa.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=Vo.computeOutShape(x,v,w),t=qE({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=A$({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=a$(f,n.bufferSync(a),w,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var iD={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.data.get(p.dataId).values,c=n.data.get(h.dataId).values,[f,m]=i$(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var oD={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,h]=l$(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var lD={kernelName:Or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=u$(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},uD=MC(zr,(e=>Math.tan(e))),pD={kernelName:zr,backendName:"cpu",kernelFunc:uD},hD=MC(Pr,(e=>Math.tanh(e)));var dD={kernelName:Br,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;pC(a,"tile");let i=f$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var cD={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;pC(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=y$(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var fD={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=null!=u?u:[h,d],g=[p,f,m,c],y=fa.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=fa.getTypedArrayFromDType(a.dtype,fa.sizeFromShape(g));w.fill(l);let k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<p;++e){let t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let p=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=mD(p,d,o),m=mD(c,h,o);switch(i){case"nearest":s=yD(k,h,d,b,x,v,e,m,f,a,l);break;case"bilinear":s=bD(k,h,d,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function mD(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return fa.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return fa.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return fa.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function gD(e,t,n,r,a,s,i,o,l,u,p){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:p}function yD(e,t,n,r,a,s,i,o,l,u,p){return gD(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,p)}function bD(e,t,n,r,a,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1;return(c-o)*((f-l)*gD(e,t,n,r,a,s,i,h,d,u,p)+(l-d)*gD(e,t,n,r,a,s,i,h,f,u,p))+(o-h)*((f-l)*gD(e,t,n,r,a,s,i,c,d,u,p)+(l-d)*gD(e,t,n,r,a,s,i,c,f,u,p))}var xD={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;pC(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=b$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var vD={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let p=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){p[s]=e;let t=qE({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});d[e]=A$({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};var wD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;pC(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,p=s;for(let e=0;e<u;++e){let t=nF({inputs:{input:p},backend:n,attrs:{dim:e+1}});p=t,l.push(t)}for(let e=0;e<i;++e){let t=fa.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=VC({inputs:{a:r,b:p},backend:n}),i=SC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=TE({inputs:{a:i,b:a},backend:n}),h=GA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(i),l.push(u),l.push(h)}let h=fR({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},kD=[M$,mC,L$,P$,AC,B$,W$,V$,U$,G$,j$,K$,Y$,Q$,tA,sA,iA,oA,lA,D$,uA,pA,hA,dA,NC,PC,fA,bC,mA,xA,wA,kA,IA,SA,NA,TA,CA,$A,AA,FA,RA,DA,MA,LA,zA,PA,BA,WA,VA,UA,jA,v$,qA,UC,tF,jC,rF,XC,pF,dF,cF,JC,gF,yF,bF,xF,vF,rE,iE,wC,wF,yA,IF,NF,_F,k$,uE,dE,CF,gE,$F,RF,MF,zF,PF,BF,VF,vE,UF,GF,HF,jF,qF,KF,XF,IE,YF,QF,rR,_E,EE,sR,oR,uR,FE,pR,cR,mR,gR,xR,N$,LE,vR,IC,iF,kR,_$,E$,F$,IR,SR,NR,TR,_R,CR,$R,WE,AR,DR,MR,PR,HE,WR,UR,HR,KE,nR,KR,XR,YR,ZR,JR,QR,eD,tD,e$,nD,r$,aD,sD,iD,oD,lD,c$,HA,pD,{kernelName:Pr,backendName:"cpu",kernelFunc:hD},dD,cD,fD,ME,xD,vD,wD,dR];for(let e of kD)la(e);var ID={};g(ID,{assertNotComplex:()=>FM,bindCanvasToFramebuffer:()=>lM,bindColorTextureToFramebuffer:()=>uM,bindTextureToProgramUniformSampler:()=>oM,bindTextureUnit:()=>rM,bindVertexBufferToProgramAttribute:()=>nM,callAndCheck:()=>MD,canBeRepresented:()=>zD,createFragmentShader:()=>VD,createFramebuffer:()=>tM,createProgram:()=>qD,createStaticIndexBuffer:()=>ZD,createStaticVertexBuffer:()=>YD,createTexture:()=>QD,createVertexShader:()=>WD,getBatchDim:()=>mM,getExtensionOrThrow:()=>BD,getFramebufferErrorMessage:()=>dM,getMaxTexturesInShader:()=>SM,getNumChannels:()=>JD,getProgramUniformLocation:()=>iM,getProgramUniformLocationOrThrow:()=>sM,getRowsCols:()=>gM,getShapeAs3D:()=>yM,getTextureShapeFromLogicalShape:()=>bM,getWebGLDisjointQueryTimerVersion:()=>NM,getWebGLErrorMessage:()=>PD,getWebGLMaxTextureSize:()=>wM,hasExtension:()=>TM,isCapableOfRenderingToFloatTexture:()=>CM,isDownloadFloatTextureEnabled:()=>EM,isReshapeFree:()=>vM,isWebGLFenceEnabled:()=>AM,isWebGLVersionEnabled:()=>_M,linkProgram:()=>KD,logShaderSourceAndInfoLog:()=>jD,resetMaxTextureSize:()=>kM,resetMaxTexturesInShader:()=>IM,unbindColorTextureFromFramebuffer:()=>pM,unbindTextureUnit:()=>aM,validateFramebuffer:()=>hM,validateProgram:()=>XD,validateTextureSize:()=>eM});var SD,ND,TD,_D={},CD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ED(e,t){_D[e]=t}function $D(e,t){if(!(e in _D)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete _D[e]}),!1),1===e?n.getContext("webgl",CD)||n.getContext("experimental-webgl",CD):n.getContext("webgl2",CD)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;_D[e]=n}let n=_D[e];return null==n||n.isContextLost()?(delete _D[e],$D(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),_D[e])}function AD(e,t){return[t,e]}function FD(e){let t=fa.sizeFromShape(e),n=Math.ceil(t/4);return fa.sizeToSquarishShape(n)}function RD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function DD(e,t){let n,r,a,s,i,o,l,u,p,h,d=e;return 2===Pe().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,p=d.HALF_FLOAT,h=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:h}}function MD(e,t){let n=t();return Pe().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+PD(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(SD||(SD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ND||(ND={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(TD||(TD={}));var OD=5.96e-8,LD=65504;function zD(e){return!!(Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||OD<Math.abs(e)&&Math.abs(e)<LD)}function PD(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function BD(e,t){return cM(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function WD(e,t){let n=cM(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(MD(e,(()=>e.shaderSource(n,t))),MD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function VD(e,t){let n=cM(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(MD(e,(()=>e.shaderSource(n,t))),MD(e,(()=>e.compileShader(n))),Pe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw jD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var UD,GD,HD=/ERROR: [0-9]+:([0-9]+):/g;function jD(e,t){let n=HD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>fa.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${fa.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function qD(e){return cM(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function KD(e,t){if(MD(e,(()=>e.linkProgram(t))),!Pe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function XD(e,t){if(MD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function YD(e,t){let n=cM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function ZD(e,t){let n=cM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),MD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function JD(){return 2===Pe().getNumber("WEBGL_VERSION")?1:4}function QD(e){return cM(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function eM(e,t){let n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function tM(e){return cM(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function nM(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),MD(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),MD(e,(()=>e.enableVertexAttribArray(o))),!0)}function rM(e,t,n){fM(e,n),MD(e,(()=>e.activeTexture(e.TEXTURE0+n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function aM(e,t){fM(e,t),MD(e,(()=>e.activeTexture(e.TEXTURE0+t))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function sM(e,t,n){return cM(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function iM(e,t,n){return e.getUniformLocation(t,n)}function oM(e,t,n,r){MD(e,(()=>rM(e,t,r))),MD(e,(()=>e.uniform1i(n,r)))}function lM(e){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),MD(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),MD(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function uM(e,t,n){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),MD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function pM(e,t){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),MD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function hM(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+dM(e,t))}function dM(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function cM(e,t,n){let r=MD(e,(()=>t()));if(null==r)throw new Error(n);return r}function fM(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function mM(e,t=2){return fa.sizeFromShape(e.slice(0,e.length-t))}function gM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function yM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[mM(e),...gM(e)]),t}function bM(e,t=!1){let n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?fa.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=fa.squeezeShape(e).newShape);let r=fa.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=mM(e),n=2,a=2;return e.length&&([n,a]=gM(e)),r=t*(n/2)*(a/2),fa.sizeToSquarishShape(r).map((e=>2*e))}return fa.sizeToSquarishShape(r)}function xM(e){return e%2==0}function vM(e,t){if(e=e.slice(-2),t=t.slice(-2),fa.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||xM(n)&&xM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&xM(e[0])&&xM(t[0])}function wM(e){if(null==UD){let t=$D(e);UD=t.getParameter(t.MAX_TEXTURE_SIZE)}return UD}function kM(){UD=null}function IM(){GD=null}function SM(e){if(null==GD){let t=$D(e);GD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,GD)}function NM(e){if(0===e)return 0;let t,n=$D(e);return t=TM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:TM(n,"EXT_disjoint_timer_query")?1:0,t}function TM(e,t){return null!=e.getExtension(t)}function _M(e){try{if(null!=$D(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function CM(e){if(0===e)return!1;let t=$D(e);if(1===e){if(!TM(t,"OES_texture_float"))return!1}else if(!TM(t,"EXT_color_buffer_float"))return!1;return $M(t)}function EM(e){if(0===e)return!1;let t=$D(e);if(1!==e){if(TM(t,"EXT_color_buffer_float"))return $M(t);let e="EXT_color_buffer_half_float";if(TM(t,e)){let n=t.getExtension(e);return function(e,t){let n=DD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!TM(t,"OES_texture_float")||!TM(t,"WEBGL_color_buffer_float"))&&$M(t)}function $M(e){let t=DD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function AM(e){return 2===e&&null!=$D(e).fenceSync}function FM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&fa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var RM=Pe();function DM(){let e,t,n,r,a,s,i,o,l,u;return 2===Pe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function MM(e,t,n="index"){let r=fa.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function OM(e,t,n="index"){let r=fa.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function LM(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function zM(e){let t=fa.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}RM.registerFlag("HAS_WEBGL",(()=>RM.getNumber("WEBGL_VERSION")>0)),RM.registerFlag("WEBGL_VERSION",(()=>_M(2)?2:_M(1)?1:0)),RM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),RM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===RM.get("WEBGL_VERSION"))),RM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),RM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),RM.registerFlag("WEBGL_PACK",(()=>RM.getBool("HAS_WEBGL"))),RM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_CLIP",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_PACK_REDUCE",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_CONV_IM2COL",(()=>RM.getBool("WEBGL_PACK"))),RM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>wM(RM.getNumber("WEBGL_VERSION")))),RM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>SM(RM.getNumber("WEBGL_VERSION")))),RM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=RM.getNumber("WEBGL_VERSION");return 0===e?0:NM(e)})),RM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>RM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!gs.isMobile())),RM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>CM(RM.getNumber("WEBGL_VERSION")))),RM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!RM.getBool("WEBGL_FORCE_F16_TEXTURES")&&RM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),RM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>EM(RM.getNumber("WEBGL_VERSION")))),RM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>AM(RM.getNumber("WEBGL_VERSION")))),RM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>RM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),RM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),RM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>gs.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),RM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),RM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),RM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),RM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var PM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:BM}=lf;function WM(e,t,n){let r=[];if(e.forEach((e=>{let t=fa.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=JM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?UM(e,r):VM(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=BM(e.shapeInfo.logicalShape,t.logicalShape),u=ZM(o),p=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", ");let c="return outputValue;",f=1===fa.sizeFromShape(e.shapeInfo.logicalShape),m=1===fa.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&fa.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,p=ZM(l),h=BM(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${p} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=DM(),p=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${GM}\n    ${HM}\n    ${jM}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return KM();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(fa.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return KM();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return fa.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${OM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=MM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${OM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=MM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=MM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=MM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=qM),[h,p,s,i,a,o,n.userCode].join("\n")}function VM(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=XM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${YM(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=XM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&fa.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=fa.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${VM(QM(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${eO(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${YM(e)}\n      }\n    `;let u=s[0],p=s[1],h=XM(r);return 1===p?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=fa.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${VM(QM(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${eO(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${YM(e)}\n      }\n    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=XM(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=fa.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${VM(QM(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${eO(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${YM(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=XM(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=fa.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${VM(QM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${eO(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${YM(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];if(c===o&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=XM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=fa.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${VM(QM(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${eO(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${YM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===p&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=XM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function UM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=DM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=DM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=DM();if(null!=s&&fa.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${UM(QM(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${eO(s,r)});\n        }\n      `}let o=DM();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2),h=p*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${p}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=DM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var GM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",HM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function KM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function XM(e){return`offset${e}`}function YM(e){let t=e.name,n=fa.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ZM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function JM(e,t,n){let{newShape:r,keptDims:a}=fa.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!fa.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function QM(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function eO(e,t){return t.map((t=>e[t])).join(", ")}function tO(e,t,n){let r,a,s,i={},o={},l={},u=[],p=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Pe().getNumber("WEBGL_VERSION")&&(p=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,d),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:p,nanLoc:h,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function nO(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!fa.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!fa.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function rO(e){return Pe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var aO=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=SD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=DM();this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?OM(["r","c","d"],e):MM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},sO=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=SD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=DM();this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?OM(["r","c","d"],e):MM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},iO=class{constructor(e){this.variableNames=["A"],this.outTexUsage=ND.DOWNLOAD;let t=DM();this.outputShape=e,this.userCode=`\n      ${PM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},oO=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ND.DOWNLOAD;let t=DM();this.outputShape=e,this.userCode=`\n      ${PM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},lO=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=DM();this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},uO=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=DM();this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},pO={};function hO(e){let t=DM();return WD(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function dO(e){return YD(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function cO(e){return ZD(e,new Uint16Array([0,1,2,2,1,3]))}function fO(e,t,n,r,a,s){eM(t,n);let i=QD(e),o=e.TEXTURE_2D;return MD(e,(()=>e.bindTexture(o,i))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Pe().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):MD(e,(()=>e.texStorage2D(o,1,r,t,n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function mO(e){return e.internalFormatFloat}function gO(e,t,n,r){let[a,s]=AD(t,n);return fO(e,a,s,mO(r),r.textureFormatFloat,e.FLOAT)}function yO(e){return e.internalFormatHalfFloat}function bO(e,t,n,r){let[a,s]=AD(t,n);return fO(e,a,s,yO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function xO(e){return e.downloadTextureFormat}function vO(e,t,n,r){let[a,s]=AD(t,n);return fO(e,a,s,xO(r),e.RGBA,e.UNSIGNED_BYTE)}function wO(e){return e.internalFormatPackedFloat}function kO(e,t,n,r){let[a,s]=RD(t,n);return fO(e,a,s,wO(r),e.RGBA,e.FLOAT)}function IO(e){return e.internalFormatPackedHalfFloat}function SO(e,t,n,r){let[a,s]=RD(t,n);return fO(e,a,s,IO(r),e.RGBA,r.textureTypeHalfFloat)}function NO(e,t,n){return MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),nM(e,t,"clipSpacePos",n,3,20,0)&&nM(e,t,"uv",n,2,20,12)}function TO(e,t,n,r,a,s){let i,o,l;MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Pe().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function _O(e,t,n){MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Pe().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Pe().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function CO(e,t,n,r){let a=e.createBuffer();MD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return MD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),MD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),MD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function EO(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function $O(e,t,n,r){let[a,s]=AD(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return MD(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function AO(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=RD(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function FO(e,t,n){let r=new Float32Array(t*n*4);return MD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}g(pO,{bindVertexProgramAttributeStreams:()=>NO,createBufferFromOutputTexture:()=>CO,createFloat16MatrixTexture:()=>bO,createFloat16PackedMatrixTexture:()=>SO,createFloat32MatrixTexture:()=>gO,createIndexBuffer:()=>cO,createPackedMatrixTexture:()=>kO,createUnsignedBytesMatrixTexture:()=>vO,createVertexBuffer:()=>dO,createVertexShader:()=>hO,downloadByteEncodedFloatMatrixFromOutputTexture:()=>$O,downloadFloat32MatrixFromBuffer:()=>EO,downloadMatrixFromPackedOutputTexture:()=>FO,downloadPackedMatrixFromBuffer:()=>AO,getInternalFormatForFloat16MatrixTexture:()=>yO,getInternalFormatForFloat16PackedMatrixTexture:()=>IO,getInternalFormatForFloat32MatrixTexture:()=>mO,getInternalFormatForPackedMatrixTexture:()=>wO,getInternalFormatForUnsignedBytesMatrixTexture:()=>xO,uploadDenseMatrixToTexture:()=>TO,uploadPixelDataToTexture:()=>_O});var RO=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Pe().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,ED(t,e)):this.gl=$D(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Pe().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=BD(this.gl,e),TM(this.gl,t))this.textureHalfFloatExtension=BD(this.gl,t);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),TM(this.gl,r))this.colorBufferHalfFloatExtension=BD(this.gl,r);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",TM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!TM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=dO(this.gl),this.indexBuffer=cO(this.gl),this.framebuffer=tM(this.gl),this.textureConfig=DD(this.gl,this.textureHalfFloatExtension)}get debug(){return Pe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;MD(e,(()=>e.finish())),MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),MD(e,(()=>e.deleteFramebuffer(this.framebuffer))),MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),MD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),MD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),gO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),bO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),vO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_O(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),TO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),SO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),kO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(pM(this.gl,this.framebuffer),this.outputTexture=null),MD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>$O(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return AO(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return EO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=CO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Pe().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>FO(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=hO(t));let n=qD(t);return MD(t,(()=>t.attachShader(n,this.vertexShader))),MD(t,(()=>t.attachShader(n,e))),KD(t,n),this.debug&&XD(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=NO(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&MD(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&XD(this.gl,this.program),MD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?sM(this.gl,e,t):iM(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),MD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),oM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=RD(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&XD(this.gl,this.program),hM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),MD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),MD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=BD(this.gl,2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await fa.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&fa.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),uM(this.gl,e,this.framebuffer),this.debug&&hM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(uM(this.gl,this.outputTexture,this.framebuffer),this.debug&&hM(this.gl)):pM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;uM(r,e,this.framebuffer),this.debug&&hM(r),this.outputTexture=e,MD(r,(()=>r.viewport(0,0,t,n))),MD(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),MD(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:DO,bincountImpl:MO,bincountReduceImpl:OO,ceilImpl:LO,concatImpl:zO,equalImpl:PO,expImpl:BO,expm1Impl:WO,floorImpl:VO,gatherNdImpl:UO,gatherV2Impl:GO,greaterImpl:HO,greaterEqualImpl:jO,lessImpl:qO,lessEqualImpl:KO,linSpaceImpl:XO,logImpl:YO,maxImpl:ZO,maximumImpl:JO,minimumImpl:QO,multiplyImpl:eL,negImpl:tL,notEqualImpl:nL,prodImpl:rL,rangeImpl:aL,rsqrtImpl:sL,scatterImpl:iL,sigmoidImpl:oL,simpleAbsImpl:lL,sliceImpl:uL,sparseFillEmptyRowsImpl:pL,sparseReshapeImpl:hL,sparseSegmentReductionImpl:dL,sqrtImpl:cL,stridedSliceImpl:fL,stringNGramsImpl:mL,stringSplitImpl:gL,stringToHashBucketFastImpl:yL,subImpl:bL,tileImpl:xL,topKImpl:vL,transposeImpl:wL,uniqueImpl:kL}=cC;function IL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function SL(e,t){return 1===t?[e]:IL(e,t)}var NL=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=rO(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=SL("rc",this.rank),t=ZM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},TL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?LM(["r","c","d"],"inputShape"):MM(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};var _L=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=EL(t,n),a=$L(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=CL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===TD.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===TD.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===TD.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===TD.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===TD.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=EL(n,r),s=$L(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=CL(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Pe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function CL(e,t,n,r,a){let s,i=function(e,t){switch(e){case TD.PACKED_2X2_FLOAT32:return wO(t);case TD.PACKED_2X2_FLOAT16:return IO(t);case TD.UNPACKED_FLOAT32:return mO(t);case TD.UNPACKED_FLOAT16:return yO(t);case TD.PACKED_4X1_UNSIGNED_BYTE:return xO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=RD(e[0],e[1]);s=t*n}else{let[t,n]=AD(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function EL(e,t){if(e===ND.UPLOAD)return TD.PACKED_2X2_FLOAT32;if(e===ND.RENDER||null==e)return function(e){return Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TD.PACKED_2X2_FLOAT32:TD.UNPACKED_FLOAT32:e?TD.PACKED_2X2_FLOAT16:TD.UNPACKED_FLOAT16}(t);if(e===ND.DOWNLOAD||e===ND.PIXELS)return TD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function $L(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var AL=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},FL="if (isnan(x)) return x;",RL="return abs(x);",DL=FL+"\n  return (x < 0.0) ? 0.0 : x;\n",ML=FL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",OL="return x;",LL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},zL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length);let t=e.length,n=SL("rc",t),r=ZM(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},PL=pm.whereImpl,BL={};var WL=Pe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var VL=class extends B{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Pe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof RO)t=e;else{let n=$D(Pe().getNumber("WEBGL_VERSION"),e);t=new RO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=$D(Pe().getNumber("WEBGL_VERSION"));t=new RO(e),this.binaryCache=function(e){return e in BL||(BL[e]={}),BL[e]}(Pe().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _L(this.gpgpu),this.numMBBeforeWarning=null==Pe().global.screen?1024:Pe().global.screen.height*Pe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new P(this,no())}nextDataId(){return VL.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Pe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Pe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:ND.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Pe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:ND.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new LL(i,OL):new AL(i,OL);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,p=null!=this.activeTimers;if(p&&(l=fa.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=lf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=fa.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new LL(r,OL):new AL(r,OL);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Pe().getBool("DEBUG")&&!Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Pe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,p=null;if("complex64"!==s&&Pe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...FD(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=lf.mergeRealAndImagArrays(t,n)}else if(null==p)u=this.getValuesFromTexture(e);else{let e=fa.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){let e=this.gpgpu.gl;MD(e,(()=>e.deleteBuffer(p)))}let h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&no().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new LL(a,OL):new AL(a,OL);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=no().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:p},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>fa.decodeString(e)));return Ii(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!zD(n))throw Pe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=fa.sizeFromShape(t);if(Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...FD(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Pe().getBool("WEBGL_PACK")&&!0===r,i=s?yM(t):t,o=s?new oO(i):new iO(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=fa.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=fa.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=fa.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:fa.now(),endMs:null}}endTimer(e){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=fa.now(),e)}async getQueryTime(e){if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=WL){return Pe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&fa.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){lf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return PL(e.shape,t)}packedUnaryOp(e,t,n){let r=new LL(e.shape,t),a=this.compileAndRun(r,[e],n);return no().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=lL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,RL,e.dtype);let t=new AL(e.shape,RL),n=this.compileAndRun(t,[e]);return no().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&fa.isString(n[0])){let a=n.map((e=>fa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return no().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new zL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new NL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[mM(e.shape),...gM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[mM(t),...gM(t)],s=new TL(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=fa.sizeFromShape(a),n=t[0]*t[1]*4;fa.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=yM(a);i=r?new sO(o):new aO(o);let l=[null!=t?t:FD(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===SD.DENSE){let t=null!=s?s:FD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===fa.sizeFromShape(i.shape))return o.values=fa.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&fa.sizeFromShape(t.shape)<=Pe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!vM(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let p,h={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=JM(e.packedInputs,t.shape,s),u="",p="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=fa.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else p=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&fa.arraysEqual(t.shape,s),f=1===fa.sizeFromShape(t.shape),m=lf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&fa.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${p}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Pe().getNumber("WEBGL_VERSION")}`,s}(e,u,h),c=this.getAndSaveBinary(d,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=WM(a,i,t),l=VD(e.gl,o),u=e.createProgram(l);return Pe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},tO(e,t,u))}(this.gpgpu,e,u,h))),f=null!=this.activeTimers;f&&(p=this.startTimer()),Pe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(nO(t.inShapeInfos,n),nO([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Pe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=JM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(fa.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=fa.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,h,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));let m=Pe().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=fa.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Pe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Pe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=so((()=>{if(!Pe().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Pe().getBool("DEBUG");Pe().set("DEBUG",!1);let t=this.abs(op(1e-8)).dataSync()[0];if(Pe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=fa.now());let p=t.texShape;if(null==p&&(p=bM(n,o),t.texShape=p),null!=a){let e,s=yM(n),i=p[1],h=p[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,h]=RD(p[0],p[1])),e=o?new uO(s,d):new lO(s,d);let c=d?[h,i]:p,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?ND.PIXELS:ND.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);let g=[[h,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Pe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=fa.now()-l)}else{let e=this.acquireTexture(p,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*fa.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await of(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(jD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=tO(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};VL.nextDataId=0;var UL="3.19.0";function GL(){Pe().set("WEBGL_FORCE_F16_TEXTURES",!0)}gs.isBrowser()&&go("webgl",(()=>new VL),2);var HL={forceHalfFloat:GL},jL="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",qL=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=lf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=rO(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},KL="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",XL=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=lf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=rO(a);let s="";if(r)if(0===a||1===fa.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${ZM(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=SL("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function YL(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var ZL={kernelName:an,backendName:"webgl",kernelFunc:YL};function JL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=YL({inputs:{x:r},backend:n}),l=YL({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var QL={kernelName:gt,backendName:"webgl",kernelFunc:JL},ez="return (a < 0.) ? b * a : a;",tz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var nz={kernelName:hn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",fa.createScalarValue(s,"float32")),o=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new XL(tz,a.shape,i.shape):new qL(ez,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},rz="return (a < 0.) ? b * a : a;",az="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var sz={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new XL(az,r.shape,a.shape):new qL(rz,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},iz="if (isnan(x)) return x;";function oz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new LL(o.shape,t):new AL(o.shape,e),l.runWebGLProgram(i,[o],u)}}function lz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(r&&"complex64"===l.dtype){let t=p.texData.get(l.dataId),n=p.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new qL(e,l.shape,u.shape);return p.runWebGLProgram(i,[a,s],ns(n.dtype,r.dtype))})),s=JL({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),s}let h,d=s||ns(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||p.shouldExecuteOnCPU([l,u]))&&null!=a){let e=p.texData.get(l.dataId).values,t=p.texData.get(u.dataId).values,n="string"===l.dtype?lf.fromUint8ToStringArray(e):e,r="string"===l.dtype?lf.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,d),o=p.makeTensorInfo(i,d);return p.texData.get(o.dataId).values=s,o}return h=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new XL(t,l.shape,u.shape,n):new qL(e,l.shape,u.shape),p.runWebGLProgram(h,[l,u],d)}}function uz(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":DL;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":ML;if("prelu"===e)return t?az:rz;if("leakyrelu"===e)return t?tz:ez;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var pz=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=rO(this.outputShape.length);let u=r?e[1]:e[2],p=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${p}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${p}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},hz="return areal * breal - aimag * bimag;",dz="return areal * bimag + aimag * breal;",cz=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=lf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},fz="return a * b;";function mz(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=lf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new cz(hz,a.shape,s.shape),i=new cz(dz,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),p=JL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),p}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=eL(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new XL(fz,a.shape,s.shape):new qL(fz,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var gz={kernelName:zn,backendName:"webgl",kernelFunc:mz};function yz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=fa.sizeFromShape(a.shape),l=fa.inferFromImplicitShape(s,o),u=fa.sizeFromShape(l);fa.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let p=i.texData.get(a.dataId);return!p.isPacked||vM(a.shape,l)||null!==p.texture&&vM(p.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[mM(e.shape),...gM(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[mM(t),...gM(t)],i=new TL(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var bz={kernelName:nr,backendName:"webgl",kernelFunc:yz},xz=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${fa.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},vz=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function wz(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=lf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:p,outSize:h}=a[i];o="mean"===n?0===i?new xz({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},u):new xz({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h}):new vz({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var kz=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=ZM(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};var Iz=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ZM(this.rank),a=IL("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function Sz(e,t,n){let r=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iz(e.shape,t):new kz(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Nz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=fa.parseAxisParam(a,e.shape),o=i,l=lf.getAxesPermutation(o,s),u=null!=l,p=e;u&&(p=Sz(e,l,r),o=lf.getInnerMostAxes(o.length,s)),lf.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=lf.computeOutAndReduceShapes(p.shape,o),c=h;n&&(c=lf.expandShapeToKeepDim(h,i));let f=fa.sizeFromShape(d),m=yz({inputs:{x:p},attrs:{shape:[fa.sizeFromShape(e.shape)/f,f]},backend:r}),g=wz(m,rs(e.dtype),"sum",r),y=yz({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(p),y}(a,s,i,n)}var Tz={kernelName:kr,backendName:"webgl",kernelFunc:Nz};function _z(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=wL(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=Sz(s,i,o);return t}var Cz={kernelName:Ur,backendName:"webgl",kernelFunc:_z};function Ez({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=fa.sizeFromShape(m),b=fa.sizeFromShape(g),x=So.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);fa.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let v,w=n?[y,h,c]:[y,c,h],k=r?[b,f,d]:[b,d,f],I=yz({inputs:{x:e},backend:a,attrs:{shape:w}}),S=yz({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),_=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?uz(l,!0):null;if((1===c||1===f)&&_>1e3&&!1===(C||E||$||null!=A)){let e=I,t=S;n&&(e=_z({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=_z({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1===f,i=e;1!==f&&(i=yz({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(i));let o=1===f?2:1,l=t;s&&(l=yz({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(l));let u=mz({inputs:{a:i,b:l},backend:a});v=Nz({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let l=ns(e.dtype,t.dtype),u=new pz(w,k,[T,c,f],n,r,C,A,E,$),p=[I,S];if(null!=s&&p.push(s),E&&p.push(i),$){let e=a.makeTensorInfo([],"float32",fa.createScalarValue(o,"float32"));p.push(e),N.push(e)}v=a.runWebGLProgram(u,p,l)}let F=yz({inputs:{x:v},backend:a,attrs:{shape:x}});N.push(v);for(let e of N)a.disposeIntermediateTensorInfo(e);return F}var $z={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r;return Ez({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}},Az="return abs(x);";var Fz={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=lL(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LL(a.shape,Az):new AL(a.shape,Az),r.runWebGLProgram(t,[a],a.dtype)}},Rz=oz({opSnippet:FL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Dz={kernelName:He,backendName:"webgl",kernelFunc:Rz},Mz=oz({opSnippet:FL+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Oz={kernelName:je,backendName:"webgl",kernelFunc:Mz},Lz="return a + b;",zz=lz({opSnippet:Lz,packedOpSnippet:Lz,supportsComplex:!0,cpuKernelImpl:DO}),Pz={kernelName:qe,backendName:"webgl",kernelFunc:zz},Bz=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},Wz=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};var Vz={kernelName:Ke,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return YL({inputs:{x:a[0]},backend:r});if(a.length>Pe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>ns(e,t))),i=a.map((e=>e.shape)),o=Pe().getBool("WEBGL_PACK")?new Wz(a[0].shape,i):new Bz(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var Uz={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=fa.parseAxisParam(s,a.shape),u=l,p=lf.getAxesPermutation(u,o),h=a;null!=p&&(h=_z({inputs:{x:a},backend:n,attrs:{perm:p}}),u=lf.getInnerMostAxes(u.length,o)),lf.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=lf.computeOutAndReduceShapes(h.shape,u),m=yz({inputs:{x:h},backend:n,attrs:{shape:[-1,fa.sizeFromShape(f)]}}),g=wz(m,m.dtype,"all",n);if(i){d=yz({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(c,l)}})}else d=yz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}};var Gz={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=fa.parseAxisParam(s,a.shape),u=l,p=lf.getAxesPermutation(u,o),h=a;null!=p&&(h=_z({inputs:{x:a},backend:n,attrs:{perm:p}}),u=lf.getInnerMostAxes(u.length,o)),lf.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=lf.computeOutAndReduceShapes(h.shape,u),m=yz({inputs:{x:h},backend:n,attrs:{shape:[-1,fa.sizeFromShape(f)]}}),g=wz(m,m.dtype,"any",n);if(i){d=yz({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(c,l)}})}else d=yz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}},Hz=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},jz=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,fa.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,p=ZM(u),h=SL("coords",u);if(1===s){o=u+1;let e=ZM(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${p} sourceLocR = coords;\n        ++${h[u-1]};\n        ${p} sourceLocG = coords;\n        ++${h[u-2]};\n        ${p} sourceLocA = coords;\n        --${h[u-1]};\n        ${p} sourceLocB = coords;\n        --${h[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=SL("sourceLocR",o-1).concat("inIdx.r"),g=SL("sourceLocG",o-1).concat("inIdx.g"),y=SL("sourceLocB",o-1).concat("inIdx.b"),b=SL("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${p} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function qz(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=lf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new Hz(o,n,null==r),u=[t];null!=r&&u.push(r);let p=e.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let h=qz(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function Kz(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=lf.computeOptimalWindowSize(s),o=new jz(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=Kz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Xz(e,t,n,r){let a=[n];if(lf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Pe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=lf.computeOutAndReduceShapes(i.shape,a),u=fa.sizeFromShape(l),p=yz({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(p);let h=qz(e,p,r);n.push(h);let d=yz({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Kz(e,t,r)}var Yz={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=fa.parseAxisParam(s,a.shape),o=lf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=_z({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=lf.getInnerMostAxes(i.length,l.shape.length)),lf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=Xz(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};var Zz={kernelName:Je,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=fa.parseAxisParam(s,a.shape),o=lf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=_z({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=lf.getInnerMostAxes(i.length,l.shape.length)),lf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=Xz(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Jz=oz({opSnippet:FL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Qz={kernelName:Qe,backendName:"webgl",kernelFunc:Jz},eP=oz({opSnippet:FL+"return log(x + sqrt(x * x + 1.0));"}),tP={kernelName:et,backendName:"webgl",kernelFunc:eP},nP=oz({opSnippet:FL+"\n  return atan(x);\n"}),rP={kernelName:tt,backendName:"webgl",kernelFunc:nP},aP=lz({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),sP={kernelName:rt,backendName:"webgl",kernelFunc:aP},iP=oz({opSnippet:FL+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),oP={kernelName:nt,backendName:"webgl",kernelFunc:iP},lP=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},uP=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${p}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var pP={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;FM(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;fa.assert(lf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=lf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&fa.arraysEqual(u.inShape,u.outShape))return YL({inputs:{x:a},backend:n});let p=new lP(u,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var hP={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=lf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new uP(p,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},dP=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${p});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},cP=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=p-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var fP={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=lf.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),d=new cP(h);return n.runWebGLProgram(d,[a],i.dtype)}};var mP={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;FM([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=lf.computePool2DInfo(i.shape,o,l,1,u),h=new dP(p);return n.runWebGLProgram(h,[a],i.dtype)}};var gP={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return Ez({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},yP=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],lf.assertAndGetBroadcastShape(e,t),lf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(lf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(lf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},bP=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],lf.assertAndGetBroadcastShape(e,t),lf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(lf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(lf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},xP={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;fa.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),fa.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),fa.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],p=null;null!=i&&(p=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));let d=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new bP(r.shape,a.shape,s.shape,p,h,l):new yP(r.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}},vP=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ZM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return wP.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${wP[t]} = start[${t}] + coords.${wP[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},wP=["x","y","z","w","u","v"];var kP=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ZM(this.rank),n=SL("coords",this.rank),r=SL("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function IP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Vo.parseSliceParams(a,s,i);if(Vo.assertParamsValid(a,o,l),0===fa.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=uL(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),p=Vo.isSliceContinous(a.shape,o,l);if(u||!p){let e=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kP(l):new vP(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Vo.computeFlatOffset(t,fa.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var SP={kernelName:mr,backendName:"webgl",kernelFunc:IP},NP={kernelName:ut,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;fa.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=lf.getReshaped(a.shape,s,o),u=lf.getPermuted(l.length,s.length),p=lf.getReshapedPermuted(a.shape,s,o),h=lf.getSliceBeginCoords(i,s.length),d=lf.getSliceSize(p,i,s.length),c=[],f=yz({inputs:{x:a},backend:n,attrs:{shape:l}}),m=_z({inputs:{x:f},backend:n,attrs:{perm:u}}),g=yz({inputs:{x:m},backend:n,attrs:{shape:p}}),y=IP({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var TP={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=MO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var _P={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=lf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},CP=lz({opSnippet:"return float(a != b);",cpuKernelImpl:nL,dtype:"bool"}),EP={kernelName:Bn,backendName:"webgl",kernelFunc:CP};function $P(e){let{inputs:t,backend:n}=e,{input:r}=t;return YL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var AP={kernelName:Qn,backendName:"webgl",kernelFunc:$P};var FP={kernelName:ct,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return YL({inputs:{x:s},backend:r});let t=ah(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=JL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=$P({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!fa.hasEncodingLoss(s.dtype,i)){let e=YL({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new AL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",fa.getTypedArrayFromDType("bool",1)),t=CP({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},RP="return ceil(x);",DP=oz({opSnippet:RP,packedOpSnippet:RP,cpuKernelImpl:LO}),MP={kernelName:ft,backendName:"webgl",kernelFunc:DP},OP=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},LP=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};var zP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Pe().getBool("WEBGL_PACK_CLIP")?new LP(s.shape):new OP(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}},PP=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function BP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var WP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new PP(r.shape),i=[BP(r,a.complexTensorInfos.real),BP(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},VP=class{constructor(e){this.outputShape=[],this.outputShape=lf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},UP=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=lf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=ZM(r),s=SL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${GP(i,l,t)}),\n            vec2(${GP(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${GP(i,l,c)}),\n          vec2(${GP(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function GP(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function HP(e){let{inputs:t,backend:n}=e,{input:r}=t;return YL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var jP={kernelName:on,backendName:"webgl",kernelFunc:HP};function qP(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>$P({inputs:{input:e},backend:n}))),a=e.map((e=>HP({inputs:{input:e},backend:n}))),s=qP(r,t,n),i=qP(a,t,n),o=JL({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=fa.sizeFromShape(e.shape.slice(t));return yz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=lf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=zO(s,i,r,o),u=lf.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}let s=Pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>s){let r=[];for(let a=0;a<e.length;a+=s){let i=e.slice(a,a+s);r.push(qP(i,t,n))}let a=qP(r,t,n);for(let e of r)n.disposeIntermediateTensorInfo(e);return a}if(Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new UP(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:i,outShape:o}=function(e,t,n){let r=lf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>yz({inputs:{x:e},attrs:{shape:[-1,fa.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new VP(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));let p=yz({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),p}function KP(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=fa.parseAxisParam(a,t[0].shape)[0],i=lf.computeOutShape(t.map((e=>e.shape)),s);if(0===fa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>fa.sizeFromShape(e.shape)>0));if(1===o.length)return YL({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return lf.assertParamsConsistent(l,s),qP(o,s,n)}var XP={kernelName:bt,backendName:"webgl",kernelFunc:KP},YP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},ZP=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${p}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},JP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=rO(this.outputShape.length);let{dataFormat:n}=t,r=DM(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function QP(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function eB({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,p=r.texData.get(e.dataId),h=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=[];if(null!=s){let e=QP(s.shape,f);null!=e&&(s=yz({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if(null!=a){let e=QP(a.shape,f);null!=e&&(a=yz({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if((1!==d&&1!==c||!(h>1e3))&&p.isPacked&&f&&null!=p.texture&&u[2]%2!=0&&fa.arraysEqual(p.shape.slice(-3),u.slice(-3))){let h=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,fa.assert(vM(p.shape,d.shape),(()=>`packed reshape ${p.shape} to ${d.shape} isn't free`));let f=yz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);let y=Ez({a:d,b:f,backend:r,transposeA:false,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);fa.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),p.shape=c,b.shape=n.outShape,l=YL({inputs:{x:y},backend:r}),l.shape=n.outShape,g.push(y)}else{let u=n.outHeight*n.outWidth,p=yz({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),h=yz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Ez({a:f?p:h,b:f?h:p,transposeA:!f,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=yz({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(p),g.push(h),g.push(d)}for(let e of g)r.disposeIntermediateTensorInfo(e);return l}function tB({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*p,g=d*h,y=[n.batchSize,m,g],b=[];if(null!=s){let e=QP(s.shape,f);null!=e&&(s=yz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=QP(a.shape,f);null!=e&&(a=yz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}let x=yz({inputs:{x:t},backend:r,attrs:{shape:[1,m,fa.sizeFromShape(t.shape)/m]}});b.push(x);let v=new JP(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),I=yz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,_=o?uz(o,!0):null,C=new pz(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,_,N,T),E=f?[I,x]:[x,I];if(a&&E.push(a),N&&E.push(s),T){let e=r.makeTensorInfo([],"float32",fa.createScalarValue(i,"float32"));E.push(e),b.push(e)}let $=r.runWebGLProgram(C,E,"float32"),A=yz({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});b.push($);for(let e of b)r.disposeIntermediateTensorInfo(e);return A}var nB={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:p,dimRoundingMode:h}=a,d=lf.convertConv2DDataFormat(u),c=lf.computeConv2DInfo(s.shape,i.shape,o,p,l,h,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Pe().getBool("WEBGL_CONV_IM2COL"))t=tB({x:s,filter:i,convInfo:c,backend:r});else{let e=new YP(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=eB({x:s,filter:i,convInfo:c,backend:r});let f=yz({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},rB=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},aB=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${p}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},sB=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},iB=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var oB={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,h=lf.convertConv2DDataFormat(l),d=lf.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),c=new rB(d);return n.runWebGLProgram(c,[a,s],"float32")}};var lB={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,h=lf.convertConv2DDataFormat(u),d=lf.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h),c=new aB(d);return n.runWebGLProgram(c,[a,s],"float32")}};var uB={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=lf.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new ZP(u);return n.runWebGLProgram(p,[a,s],"float32")}};var pB={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=lf.computeConv3DInfo(a.shape,l,i,1,o),p=new sB(u);return n.runWebGLProgram(p,[a,s],"float32")}};var hB,dB={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=lf.computeConv3DInfo(l,s.shape,o,1,i),p=new iB(u);return n.runWebGLProgram(p,[a,s],"float32")}},cB=oz({opSnippet:iz+"\n  return cos(x);\n"}),fB={kernelName:Nt,backendName:"webgl",kernelFunc:cB},mB=oz({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),gB={kernelName:Tt,backendName:"webgl",kernelFunc:mB},yB=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=n;this.outputShape=[u,p,h,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=p>1?[""+(i-1)/(p-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},bB={kernelName:Et,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new yB(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(hB||(hB={}));var xB=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===hB.Prod?"1.0":"0.0",i=n?s:`getX(${vB(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ZM(a)} coords = getOutputCoords();\n        int end = ${wB(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${wB(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${vB(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function vB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function wB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kB(e,t,n,r,a,s){let i=t.shape.length,o=lf.getAxesPermutation([r],i),l=t;null!=o&&(l=_z({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=lf.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],h=YL({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){let r=new xB(e,l.shape,!1,s),a=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new xB(e,l.shape,a,s),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=_z({inputs:{x:h},backend:n,attrs:{perm:lf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}var IB={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return kB(hB.Prod,a,n,s,i,o)}};var SB={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return kB(hB.Sum,a,n,s,i,o)}};var NB={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=MO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=OO(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},TB=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var _B={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,p=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h=new TB("NHWC"===i?[o,l,u,p]:[o,p,l,u],s,i);return n.runWebGLProgram(h,[a],a.dtype)}},CB=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rO(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${p}\n        ${u}\n        setOutput(result);\n      }\n    `}},EB=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rO(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<p;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<p;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){let t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<p)){let e=i%2==0?fa.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<p&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<p&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<p&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<p&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var $B={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;null==p&&(p=[1,1]),fa.assert(lf.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let h,d=lf.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0);h=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new EB(d):new CB(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}},AB=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},FB=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var RB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,h=lf.computeConv2DInfo(a.shape,p,i,o,l,u,!0),d=new AB(h);return n.runWebGLProgram(d,[a,s],"float32")}};var DB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,h=lf.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new FB(h);return n.runWebGLProgram(d,[a,s],"float32")}},MB=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};var OB={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=fa.sizeFromShape(r.shape),i=yz({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new MB(s),l=n.runWebGLProgram(o,[i],i.dtype),u=yz({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},LB=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};var zB={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,p=lf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new LB(p);t=r.runWebGLProgram(h,[s,i],"float32");let d=yz({inputs:{x:t},backend:r,attrs:{shape:p.outShape}});return r.disposeIntermediateTensorInfo(t),d}};var PB={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=lf.decodeEinsumEquation(a,s.length);lf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=lf.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of p[e]){let e,{permutationIndices:r,expandDims:a}=lf.getEinsumPermutation(c,l[t]);lf.isIdentityPermutation(r)?e=s[t]:(e=_z({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);fa.arraysEqual(e.shape,i)||(e=yz({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=mz({inputs:{a:e,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Nz({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},BB=oz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),WB={kernelName:Wt,backendName:"webgl",kernelFunc:BB},VB={kernelName:Vt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new XL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new qL("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},UB=lz({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:PO}),GB={kernelName:Gt,backendName:"webgl",kernelFunc:UB},HB=oz({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${lf.ERF_P};\n  float a1 = ${lf.ERF_A1};\n  float a2 = ${lf.ERF_A2};\n  float a3 = ${lf.ERF_A3};\n  float a4 = ${lf.ERF_A4};\n  float a5 = ${lf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),jB={kernelName:Ut,backendName:"webgl",kernelFunc:HB},qB=oz({opSnippet:iz+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:BO,dtype:"float32"}),KB={kernelName:Ht,backendName:"webgl",kernelFunc:qB};function XB(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(fa.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),yz({inputs:{x:s},backend:r,attrs:{shape:o}})}var YB={kernelName:jt,backendName:"webgl",kernelFunc:XB},ZB="return exp(x) - 1.0;",JB=oz({opSnippet:ZB,packedOpSnippet:ZB,cpuKernelImpl:WO}),QB={kernelName:qt,backendName:"webgl",kernelFunc:JB},eW=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function tW(e,t,n){let r=n.texData.get(e.dataId),a=fa.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=yz({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new eW("real",o,t),u=new eW("imag",o,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,p,"float32"),d=n.runWebGLProgram(u,p,"float32"),c=JL({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);let f=yz({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var nW={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return tW(r,!1,n)}},rW=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function aW(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||fa.inferDtype(a),"string"===s){let e=fa.getArrayFromDType(s,fa.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new rW(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var sW,iW={kernelName:Xt,backendName:"webgl",kernelFunc:aW},oW=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},lW={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new oW(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},uW="return floor(x);",pW=oz({opSnippet:uW,packedOpSnippet:uW,cpuKernelImpl:VO}),hW={kernelName:Zt,backendName:"webgl",kernelFunc:pW},dW=lz({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cW={kernelName:Jt,backendName:"webgl",kernelFunc:dW},fW=class{constructor(e){this.variableNames=["A"];let t=DM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},mW=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=DM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},gW={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],h=[u,l,s];(o||i)&&(null==sW&&(sW=document.createElement("canvas").getContext("2d")),sW.canvas.width=l,sW.canvas.height=u,sW.drawImage(a,0,0,l,u),a=sW.canvas);let d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=ND.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Pe().getBool("WEBGL_PACK")?new mW(h):new fW(h),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}};var yW={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:p,dataFormat:h,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=lf.convertConv2DDataFormat(h),y=lf.computeConv2DInfo(s.shape,i.shape,u,d,p,c,!1,g),b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Pe().getBool("WEBGL_CONV_IM2COL"))t=tB({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?uz(f,!1):null,p=new YP(y,e,u,n,a),d=[s,i],c=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=yz({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(e&&d.push(c(o,h)),n&&d.push(c(l,h)),a){let e=r.makeTensorInfo([],"float32",fa.createScalarValue(m,"float32"));d.push(e),b.push(e)}t=r.runWebGLProgram(p,d,"float32")}else t=eB({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let x=yz({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),x}};var bW={kernelName:ea,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=r,f=[],m=p;null==m&&(m=[1,1]),fa.assert(lf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=lf.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),b=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?uz(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",fa.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new EB(y,w,x,k,I):new CB(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},xW=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=ZM(t.length),s=ZM(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=ZM(r.length),l=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${l};\n            flattenIndex += index * ${i};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};var vW={kernelName:tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=fa.sizeFromShape(r.shape),[l,u,p,h]=lf.prepareAndValidate(r,a),d=yz({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=yz({inputs:{x:r},backend:n,attrs:{shape:[fa.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=UO(e,t,r.dtype,u,i,p,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new xW(i,h,[u,p],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=yz({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},wW=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ZM(this.rank),r=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function kW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=fa.parseAxisParam(i,a.shape)[0];if(Pe().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];fa.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=lf.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=fa.sizeFromShape(s.shape),h=[],d=yz({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=yz({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=GO(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new wW(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let y=yz({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var IW={kernelName:en,backendName:"webgl",kernelFunc:kW},SW=lz({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:HO,dtype:"bool"}),NW={kernelName:nn,backendName:"webgl",kernelFunc:SW},TW=lz({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:jO}),_W={kernelName:rn,backendName:"webgl",kernelFunc:TW};var CW={kernelName:sn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return tW(r,!0,n)}},EW=oz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),$W={kernelName:ln,backendName:"webgl",kernelFunc:EW},AW=oz({opSnippet:"return float(isinf(x));",dtype:"bool"}),FW={kernelName:un,backendName:"webgl",kernelFunc:AW},RW=oz({opSnippet:"return float(isnan(x));",dtype:"bool"}),DW={kernelName:pn,backendName:"webgl",kernelFunc:RW},MW=lz({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:qO,dtype:"bool"}),OW={kernelName:dn,backendName:"webgl",kernelFunc:MW},LW=lz({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:KO,dtype:"bool"}),zW={kernelName:cn,backendName:"webgl",kernelFunc:LW};var PW={kernelName:fn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=XO(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},BW=oz({opSnippet:iz+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:YO}),WW={kernelName:mn,backendName:"webgl",kernelFunc:BW},VW=oz({opSnippet:iz+"\n  return log(1.0 + x);\n"}),UW={kernelName:gn,backendName:"webgl",kernelFunc:VW},GW=lz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),HW={kernelName:yn,backendName:"webgl",kernelFunc:GW},jW=oz({opSnippet:"return float(!(x >= 1.0));"}),qW={kernelName:bn,backendName:"webgl",kernelFunc:jW},KW=lz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),XW={kernelName:xn,backendName:"webgl",kernelFunc:KW},YW=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},ZW=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},JW={kernelName:In,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new ZW(a.shape,s,i,o,l):new YW(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},QW=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},eV={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,h=new QW(a.shape,o,l,u,p);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function tV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=fa.parseAxisParam(s,a.shape),u=l,p=lf.getAxesPermutation(u,o),h=null!=p,d=n.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[p[e]];let r=wL(e,a.shape,a.dtype,p,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=Sz(a,p,n);u=lf.getInnerMostAxes(u.length,o)}lf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=lf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=lf.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=ZO(e,fa.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=fa.sizeFromShape(t),s=yz({inputs:{x:e},attrs:{shape:[fa.sizeFromShape(e.shape)/a,a]},backend:r}),i=wz(s,e.dtype,"max",r),o=yz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return h&&n.disposeIntermediateTensorInfo(c),f}var nV={kernelName:Nn,backendName:"webgl",kernelFunc:tV},rV=lz({opSnippet:jL+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+KL+"\n  return result;\n",cpuKernelImpl:JO}),aV={kernelName:Tn,backendName:"webgl",kernelFunc:rV};var sV={kernelName:_n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;FM(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;fa.assert(lf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=lf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&fa.arraysEqual(u.inShape,u.outShape))return YL({inputs:{x:a},backend:n});let p=new lP(u,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var iV={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,p=lf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new uP(p,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},oV=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},lV=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var uV={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=lf.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),d=new uP(h,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new lV(h),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var pV={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;FM([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=lf.computePool2DInfo(o.shape,l,u,1,p,h),c=new lP(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new oV(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var hV={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;fa.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];fa.assert(lf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let p=lf.computePool2DInfo(r.shape,a,s,u,i),[h,d]=function(e,t,n,r){let a=new lP(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new lP(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,p,l);return[h,d]}};var dV={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=fa.parseAxisParam(s,r.shape),u=l,p=lf.getAxesPermutation(u,o),h=null!=p,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(h){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];let n=wL(e,r.shape,r.dtype,p,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=Sz(r,p,i);c.push(f),u=lf.getInnerMostAxes(u.length,o)}lf.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=lf.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=lf.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=fa.sizeFromShape(t),s=yz({inputs:{x:e},attrs:{shape:[fa.sizeFromShape(e.shape)/a,a]},backend:r}),i=wz(s,"float32","mean",r),o=yz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var cV={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=fa.parseAxisParam(s,a.shape),u=l,p=lf.getAxesPermutation(u,o),h=a;null!=p&&(h=_z({inputs:{x:a},backend:n,attrs:{perm:p}}),u=lf.getInnerMostAxes(u.length,a.shape.length)),lf.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=lf.computeOutAndReduceShapes(h.shape,u),m=yz({inputs:{x:h},backend:n,attrs:{shape:[-1,fa.sizeFromShape(f)]}}),g=wz(m,m.dtype,"min",n);if(i){d=yz({inputs:{x:g},backend:n,attrs:{shape:lf.expandShapeToKeepDim(c,l)}})}else d=yz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}},fV=lz({opSnippet:jL+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+KL+"\n  return result;\n",cpuKernelImpl:QO}),mV={kernelName:Dn,backendName:"webgl",kernelFunc:fV},gV=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=ZM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},yV=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=ZM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=SL("rc",r),l=SL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${p});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${p});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},bV={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yV(r.shape,a,s):new gV(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},xV=lz({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+KL+"\n  return result;\n"}),vV={kernelName:On,backendName:"webgl",kernelFunc:xV},wV=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},kV=lz({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),IV={kernelName:Pt,backendName:"webgl",kernelFunc:kV},SV="return a - b;",NV=lz({opSnippet:SV,packedOpSnippet:SV,supportsComplex:!0,cpuKernelImpl:bL}),TV={kernelName:Lr,backendName:"webgl",kernelFunc:NV};function _V(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=fa.parseAxisParam([s],a.shape),o=tV({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=lf.expandShapeToKeepDim(o.shape,i),u=yz({inputs:{x:o},backend:n,attrs:{shape:l}}),p=NV({inputs:{a:a,b:u},backend:n}),h=qB({inputs:{x:p},backend:n}),d=Nz({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=yz({inputs:{x:d},backend:n,attrs:{shape:l}}),f=kV({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var CV={kernelName:Nr,backendName:"webgl",kernelFunc:_V};var EV={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:_V({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new wV(u,p,s),d=[[i]],c=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}},$V=FL+"\n  return -x;\n";var AV={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=tL(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LL(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new AL(a.shape,$V),r.runWebGLProgram(t,[a],a.dtype)}},FV=pm.nonMaxSuppressionV3Impl;var RV={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){lf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=FV(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},DV=pm.nonMaxSuppressionV4Impl;var MV={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){lf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=DV(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},OV=pm.nonMaxSuppressionV5Impl;var LV={kernelName:Un,backendName:"webgl",kernelFunc:function(e){lf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=OV(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},zV=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},PV={kernelName:Hn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=fa.sizeFromShape(a.shape),u=new zV(l,s,i,o),p=yz({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[p],a.dtype);n.disposeIntermediateTensorInfo(p);let d=yz({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function BV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=$P({inputs:{input:r},backend:n}),t=BV({inputs:{x:e},backend:n}),a=HP({inputs:{input:r},backend:n}),s=BV({inputs:{x:a},backend:n}),i=JL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return aW({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var WV={kernelName:Kr,backendName:"webgl",kernelFunc:BV};var VV={kernelName:Gn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=$P({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=HP({inputs:{input:a},backend:r}),i=BV({inputs:{x:s},backend:r}),o=JL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return aW({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var UV={kernelName:jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return XB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{fa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),fa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=KP({inputs:t.map((e=>{let t=XB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},GV=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=ZM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},HV=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=ZM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=SL("rc",r),l=SL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${p});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},jV=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===fa.sizeFromShape(a.shape)){return aW({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HV(a.shape,s,i):new GV(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},qV={kernelName:qn,backendName:"webgl",kernelFunc:jV},KV=lz({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+KL+"\n  return result;\n"}),XV={kernelName:Xn,backendName:"webgl",kernelFunc:KV};var YV={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],p=fa.parseAxisParam(i,s.shape),h=p,d=lf.getAxesPermutation(h,l),c=s;if(null!=d&&(c=_z({inputs:{x:s},backend:r,attrs:{perm:d}}),h=lf.getInnerMostAxes(h.length,l),u.push(c)),lf.assertAxesAreInnerMostDims("prod",h,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=rL(c.shape,c.dtype,e,h);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=lf.computeOutAndReduceShapes(c.shape,h),a=fa.sizeFromShape(n),i=yz({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=wz(i,rs(s.dtype),"prod",r);t=yz({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=lf.expandShapeToKeepDim(t.shape,p);t=yz({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},ZV=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=aL(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},JV={kernelName:Jn,backendName:"webgl",kernelFunc:ZV},QV=oz({opSnippet:"return 1.0 / x;"}),eU={kernelName:er,backendName:"webgl",kernelFunc:QV},tU=oz({opSnippet:FL+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),nU={kernelName:tr,backendName:"webgl",kernelFunc:tU},rU=oz({opSnippet:FL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),aU={kernelName:or,backendName:"webgl",kernelFunc:rU},sU=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},iU=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};var oU={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new iU(a.shape,l,u,s,i):new sU(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}},lU=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var uU={kernelName:ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new lU(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},pU=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},hU=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};var dU={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hU(a.shape,l,u,s,i):new pU(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},cU=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var fU={kernelName:ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new cU(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},mU=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=ZM(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}},gU=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=SL("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ZM(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};var yU={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=fa.parseAxisParam(s,a.shape);if(0===i)return YL({inputs:{x:a},backend:n});let l=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gU(a.shape,o):new mU(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},bU=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},xU={kernelName:Zr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new bU(r.shape,s),[u,p]=lf.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},vU=oz({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),wU={kernelName:ur,backendName:"webgl",kernelFunc:vU},kU=oz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sL}),IU={kernelName:pr,backendName:"webgl",kernelFunc:kU},SU=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=ZM(a.length),l=ZM(s.length),u="";1===n?u="i":2===n&&(u="i, j");let p=`getIndices(${u})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let d=`getUpdates(${h})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var NU={kernelName:hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=lf.calculateShapes(s,a,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c=yz({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=yz({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new SU(l,o,c.shape.length,f.shape.length,p,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=yz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},TU=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Pe().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};var _U={kernelName:dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new TU(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}},CU=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=ZM(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};var EU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new CU(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ns(a.dtype,s.dtype))}},$U=oz({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${lf.SELU_SCALEALPHA};\n  float scale = ${lf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),AU={kernelName:fr,backendName:"webgl",kernelFunc:$U},FU=oz({opSnippet:iz+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:oL}),RU={kernelName:xr,backendName:"webgl",kernelFunc:FU},DU=oz({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),MU={kernelName:br,backendName:"webgl",kernelFunc:DU},OU=oz({opSnippet:iz+"\n  return sin(x);\n"}),LU={kernelName:gr,backendName:"webgl",kernelFunc:OU},zU=oz({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),PU={kernelName:yr,backendName:"webgl",kernelFunc:zU},BU=oz({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),WU={kernelName:vr,backendName:"webgl",kernelFunc:BU},VU={kernelName:Ir,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;fa.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],p=jV({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=lf.getReshaped(p.shape,s,o,!1),d=lf.getPermuted(h.length,s.length,!1),c=lf.getReshapedPermuted(p.shape,s,o,!1),f=yz({inputs:{x:p},backend:n,attrs:{shape:h}}),m=_z({inputs:{x:f},backend:n,attrs:{perm:d}}),g=yz({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var UU={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[h,d,c,f,m]=pL(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var GU={kernelName:_r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,h]=hL(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var HU={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=dL(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}};var jU={kernelName:Er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=dL(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}};var qU={kernelName:$r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=lf.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=fa.decodeString(n.readSync(i.dataId)[0]),f=iL(e,t,o,d,p,u,l,h,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new SU(u,l,a.shape.length,s.shape.length,h,[d,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=yz({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};var KU={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=fa.parseAxisParam(i,a.shape)[0],l=lf.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=IP({inputs:{x:a},backend:n,attrs:{begin:p,size:t}});return p[o]+=e,r}))}},XU="return sqrt(x);",YU=oz({opSnippet:XU,packedOpSnippet:XU,cpuKernelImpl:cL}),ZU={kernelName:wr,backendName:"webgl",kernelFunc:YU},JU=oz({opSnippet:"return x * x;"}),QU={kernelName:Fr,backendName:"webgl",kernelFunc:JU},eG="return (a - b) * (a - b);",tG=lz({opSnippet:eG,packedOpSnippet:eG}),nG={kernelName:Ar,backendName:"webgl",kernelFunc:tG};var rG={kernelName:Xr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=FL+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new AL(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},aG=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=ZM(n.length),s=ZM(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};var sG={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Vo.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=yz({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){fa.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Vo.computeOutShape(x,v,w),n=IP({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=yz({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=Ii(s.shape,s.dtype,e),a=fL(f,n,w,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new aG(x,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=yz({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var iG={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.readSync(p.dataId),c=n.readSync(h.dataId),[f,m]=mL(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var oG={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,h]=gL(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var lG={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=yL(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},uG=oz({opSnippet:"return tan(x);"}),pG={kernelName:zr,backendName:"webgl",kernelFunc:uG},hG=oz({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),dG={kernelName:Pr,backendName:"webgl",kernelFunc:hG},cG=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=ZM(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function fG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>fa.decodeString(e))):e,r=Ii(a.shape,a.dtype,t),i=xL(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new cG(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var mG={kernelName:Br,backendName:"webgl",kernelFunc:fG},gG=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},yG=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function bG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function xG(e){let t=1;for(;t<e;)t*=2;return t}var vG={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Pe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Pe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let e=n.readSync(a.dataId),[t,r]=vL(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[a,aW({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,c=d?n.unpackTensor(a):a,f=fa.sizeFromShape(u)/p,m=yz({inputs:{x:c},attrs:{shape:[f,p]},backend:n});d&&bG(n,c);let g=xG(s),y=xG(p),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{let a=x(),s=new gG(r),i=[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),bG(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new yG([f,e/2]),a=[[p],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),bG(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=IP({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),bG(n,w);let k=kW({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});bG(n,m);let I=u.slice(0,-1);I.push(s),w=b,b=yz({inputs:{x:b},attrs:{shape:I},backend:n}),bG(n,w);let S=k;return k=yz({inputs:{x:k},attrs:{shape:I},backend:n}),bG(n,S),[k,b]}},wG=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};var kG={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[f,m]=null!=u?u:[h,d],g=new wG(h,d,i,o,l,[p,f,m,c]);return n.runWebGLProgram(g,[a,s],"float32")}};var IG={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;FM(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=kL(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var SG={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let e=0;e<o;e++)e!==s&&(u[p++]=i.shape[e]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=IP({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=yz({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},NG=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};var TG,_G,CG,EG={kernelName:jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=lf.getAxesPermutation([u],o),h=a;null!=p&&(h=_z({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(h),u=lf.getInnerMostAxes(1,o)[0]);let d=lf.segment_util.computeOutShape(h.shape,u,i),c=fa.sizeFromShape([h.shape[u]]),f=yz({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=rs(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=lf.segment_util.segOpComputeOptimalWindowSize(o,s),p=new NG({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(p,[e,r],a);if(l.push(h),h.shape[1]===s)return h;let d=ZV({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=fG({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(c),g(h,t,c,a,s)},y=yz({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=p){l.push(y);let e=lf.getUndoAxesPermutation(p);b=_z({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},$G=[$z,Fz,Dz,Oz,Pz,Vz,Uz,Gz,Yz,Zz,Qz,tP,rP,sP,oP,pP,hP,fP,mP,gP,xP,NP,TP,_P,FP,MP,zP,QL,WP,XP,nB,oB,lB,uB,pB,dB,fB,gB,bB,IB,SB,NB,_B,$B,RB,DB,OB,zB,PB,WB,VB,GB,jB,KB,YB,QB,nW,iW,lW,hW,cW,gW,yW,bW,vW,IW,NW,_W,ZL,CW,jP,$W,FW,DW,nz,OW,zW,PW,WW,UW,HW,qW,XW,JW,eV,nV,aV,sV,iV,uV,pV,hV,dV,cV,mV,bV,vV,EV,gz,AV,RV,MV,LV,EP,PV,VV,UV,qV,XV,sz,YV,JV,AP,IV,eU,nU,aU,bz,oU,uU,dU,fU,yU,xU,wU,IU,NU,_U,EU,AU,RU,MU,LU,PU,SP,CV,WU,VU,UU,GU,HU,jU,qU,KU,ZU,QU,nG,rG,sG,iG,oG,lG,TV,Tz,pG,dG,mG,vG,kG,Cz,IG,SG,EG,WV];for(let e of $G)la(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(TG||(TG={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(_G||(_G={}));var AG={kernelName:Jr,backendName:"wasm",setupFunc:function(e){CG=e.wasm.cwrap(Jr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=_G[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=So.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return CG(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,h||0,w),v}};function FG(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===fa.sizeFromShape(i.shape)||n(s,TG[a.dtype],o),i}}}var RG=FG(Ge);function DG(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,p=lf.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(p,u);if(0===fa.sizeFromShape(p))return h;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,TG[s.dtype],f),h}}}var MG,OG=DG(qe);var LG={kernelName:Ke,backendName:"wasm",setupFunc:function(e){MG=e.wasm.cwrap(Ke,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===fa.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return MG(s,a.length,TG[r.dtype],i),r}};function zG(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var PG,BG={kernelName:an,backendName:"wasm",kernelFunc:zG};function WG(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=zG({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return PG(p,c,l.shape.length,TG[l.dtype],h,d,s.length),u}var VG,UG={kernelName:Ur,backendName:"wasm",kernelFunc:WG,setupFunc:function(e){PG=e.wasm.cwrap(Ur,null,["number","array","number","number","number","array","number"])}};function GG(e,t,n){let r=e.shape,a=e.shape.length,s=fa.parseAxisParam(t,r),i=s,o=lf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=lf.getInnerMostAxes(i.length,a),l=WG({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var HG,jG={kernelName:Xe,backendName:"wasm",setupFunc:function(e){VG=e.wasm.cwrap(Xe,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=GG(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;lf.assertAxesAreInnerMostDims("all",p,c);let[f,m]=lf.computeOutAndReduceShapes(l.shape,p),g=fa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==fa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;VG(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=lf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var qG,KG={kernelName:Ye,backendName:"wasm",setupFunc:function(e){HG=e.wasm.cwrap(Ye,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=GG(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;lf.assertAxesAreInnerMostDims("any",p,c);let[f,m]=lf.computeOutAndReduceShapes(l.shape,p),g=fa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==fa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;HG(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=lf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var XG,YG={kernelName:Ze,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:p,inputWasTransposed:h}=GG(s,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=fa.sizeFromShape(c.shape),g=l.shape[p[0]];return qG(o,TG[l.dtype],m,g,f),h&&t.disposeData(u.dataId),c},setupFunc:function(e){qG=e.wasm.cwrap(Ze,null,["number","number","number","number","number"])}};var ZG={kernelName:at,backendName:"wasm",setupFunc:function(e){XG=e.wasm.cwrap(at,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=lf.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let v=r.makeOutput(p.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return XG(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,w),v}};function JG(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=fa.sizeFromShape(r.shape),i=fa.inferFromImplicitShape(a,s);return fa.assert(s===fa.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var QG,eH={kernelName:nr,backendName:"wasm",kernelFunc:JG};var tH={kernelName:lt,backendName:"wasm",setupFunc:function(e){QG=e.wasm.cwrap(lt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=fa.sizeFromShape(f),y=fa.sizeFromShape(m),b=So.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);fa.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,h]:[y,h,c],v=JG({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),w=JG({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return QG(k,E,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),_.shape=b,_}};function nH(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Vo.parseSliceParams(t,n,r),o=Vo.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=fa.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let e=Vo.computeFlatOffset(s,p);return"string"===t.dtype?h.stringBytes=l.slice(e,e+fa.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+fa.sizeFromShape(i))),u}if("string"===t.dtype){let e=jE(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,p[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],h=l+s[1];for(let a=o;a<p;a++)for(let o=l;o<h;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,p[0],p[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<d;l++)for(let u=p;u<c;u++){let p=s*t+l*n+u*r+f;a.set(e.subarray(p,p+i[3]),o),o+=i[3]}}(l,p[0],p[1],p[2],d,s,i);else{let e=jE(l,s,i,t.shape,t.dtype);d.set(e)}return u}var rH={kernelName:mr,backendName:"wasm",kernelFunc:nH};var aH={kernelName:ut,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=lf.getReshaped(a.shape,s,o),u=lf.getPermuted(l.length,s.length),p=lf.getReshapedPermuted(a.shape,s,o),h=lf.getSliceBeginCoords(i,s.length),d=lf.getSliceSize(p,i,s.length),c=JG({inputs:{x:a},backend:n,attrs:{shape:l}}),f=WG({inputs:{x:c},backend:n,attrs:{perm:u}}),m=nH({inputs:{x:JG({inputs:{x:f},backend:n,attrs:{shape:p}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function sH(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var iH,oH={kernelName:ct,backendName:"wasm",kernelFunc:sH},lH=FG(ft);var uH={kernelName:mt,backendName:"wasm",setupFunc:function(e){iH=e.wasm.cwrap(mt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return iH(o,s,i,u),l}};function pH(e){let{inputs:t,backend:n}=e,r=fa.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=lf.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>fa.sizeFromShape(e.shape)>0));if(1===s.length)return zG({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===fa.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(lf.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=fa.sizeFromShape(e.shape.slice(r));return JG({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=lf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=BC(o,a,t[0].dtype,l),p=lf.computeOutShape(s.map((e=>e.shape)),r);return i.shape=p,n.dataIdMap.get(i.dataId).stringBytes=lf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=fa.sizeFromShape(s[0].shape.slice(0,r)),u=0,p=s.map((e=>{let t=fa.sizeFromShape(e.shape.slice(r));return u+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<h.length;n++){let r=p[n],a=e*r,s=h[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var hH,dH={kernelName:bt,backendName:"wasm",kernelFunc:pH};var cH,fH={kernelName:xt,backendName:"wasm",setupFunc:function(e){hH=e.wasm.cwrap(xt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=n,c=lf.convertConv2DDataFormat(d),f=lf.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return hH(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,_,w,k,I,S,N,T,E),C}};var mH,gH,yH={kernelName:wt,backendName:"wasm",setupFunc:function(e){cH=e.wasm.cwrap(wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,h=lf.convertConv2DDataFormat(l),d=lf.computeConv2DInfo(p,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,_=fa.computeStrides(d.inShape),C=fa.computeStrides(a.shape),[E,$,A]=fa.computeStrides(s.shape),F=_[0],R=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return cH(V,U,c,f,m,y,b,g,v,w,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}},bH=FG(Nt),xH=FG(Tt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(mH||(mH={}));var vH,wH={kernelName:Et,backendName:"wasm",setupFunc:function(e){gH=e.wasm.cwrap(Et,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:p}=r,h=u.shape[0],[d,c]=o,f=[h,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=sH({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(p.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return gH(g,y,b,h,w,d,c,mH[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var kH,IH={kernelName:_t,backendName:"wasm",setupFunc:function(e){vH=e.wasm.cwrap(_t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;fa.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=lf.getAxesPermutation([s],l),p=a;null!==u&&(p=WG({inputs:{x:a},attrs:{perm:u},backend:n}));let h=lf.getInnerMostAxes(1,l)[0];lf.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;vH(f,i?1:0,o?1:0,c,m,TG[a.dtype]);let g=d;if(null!==u){g=WG({inputs:{x:d},attrs:{perm:lf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}};var SH,NH={kernelName:Ct,backendName:"wasm",setupFunc:function(e){kH=e.wasm.cwrap(Ct,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;fa.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=lf.getAxesPermutation([s],l),p=a;null!==u&&(p=WG({inputs:{x:a},attrs:{perm:u},backend:n}));let h=lf.getInnerMostAxes(1,l)[0];lf.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;kH(f,i?1:0,o?1:0,c,m,TG[a.dtype]);let g=d;if(null!==u){g=WG({inputs:{x:d},attrs:{perm:lf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}};var TH,_H={kernelName:At,backendName:"wasm",setupFunc:function(e){SH=e.wasm.cwrap(At,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,p=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,p]:[o,p,l,u],d=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(fa.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(fa.computeStrides(h)).buffer),y=t.dataIdMap.get(d.dataId).id;return SH(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),d}};var CH={kernelName:Ft,backendName:"wasm",setupFunc:function(e){TH=e.wasm.cwrap(Ft,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=n,d=null==u?[1,1]:u,c=lf.computeConv2DInfo(a.shape,s.shape,l,d,p,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return TH(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),_}},EH=FG(Wt),$H=DG(Gt,0,"bool"),AH=FG(Ht,"float32");function FH(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(fa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),JG({inputs:{x:a},backend:r,attrs:{shape:o}})}var RH={kernelName:jt,backendName:"wasm",kernelFunc:FH};function DH(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var MH,OH={kernelName:Xt,backendName:"wasm",kernelFunc:DH};var LH,zH={kernelName:Yt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return MH(s,o,l,u,p,i),a},setupFunc:function(e){MH=e.wasm.cwrap(Yt,null,["number","number","number","number","number","number"])}},PH=FG(Zt),BH=DG(Jt);var WH,VH={kernelName:Qt,backendName:"wasm",setupFunc:function(e){LH=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===fa.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return LH(p,h,d,c,f,a,g),m}};var UH,GH={kernelName:Qr,backendName:"wasm",setupFunc:function(e){WH=e.wasm.cwrap(Qr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=lf.computeConv2DInfo(a.shape,s.shape,l,p,u,d),g=_G[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return WH(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var HH,jH={kernelName:ea,backendName:"wasm",setupFunc:function(e){UH=e.wasm.cwrap(ea,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=lf.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!0),g=_G[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return UH(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var qH,KH={kernelName:tn,backendName:"wasm",setupFunc:function(e){HH=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Oo.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let p=a.shape,h=p[p.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return HH(d,TG[r.dtype],c,i,h,o,f,m),u}};var XH,YH={kernelName:en,backendName:"wasm",setupFunc:function(e){qH=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=fa.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];fa.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let h=lf.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=JG({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=fa.sizeFromShape(s.shape),f=JG({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===fa.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(fa.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(fa.computeStrides(m)).buffer);return qH(b,TG[a.dtype],w,y,x,h.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},ZH=DG(nn,0,"bool"),JH=DG(rn,0,"bool");var QH,ej={kernelName:hn,backendName:"wasm",setupFunc:function(e){XH=e.wasm.cwrap(hn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==fa.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;XH(a,TG[t.dtype],n,e)}return s}},tj=DG(dn,0,"bool"),nj=DG(cn,0,"bool"),rj=FG(mn),aj=DG(yn,0,"bool"),sj=FG(bn),ij=DG(xn,0,"bool"),oj=DG(vn,0,"bool");var lj,uj={kernelName:Nn,backendName:"wasm",setupFunc:function(e){QH=e.wasm.cwrap(Nn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=GG(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;lf.assertAxesAreInnerMostDims("max",p,c);let[f,m]=lf.computeOutAndReduceShapes(l.shape,p),g=fa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==fa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;QH(o,TG[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=lf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},pj=DG(Tn);var hj,dj={kernelName:_n,backendName:"wasm",setupFunc:function(e){lj=e.wasm.cwrap(_n,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;fa.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=lf.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,v=p.strideWidth,w=p.inChannels,k=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(p.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return lj(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,v,w,k,S),I}};var cj,fj={kernelName:Fn,backendName:"wasm",setupFunc:function(e){hj=e.wasm.cwrap(Fn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=GG(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=lf.getInnerMostAxes(f.length,u.shape.length))}lf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=lf.computeOutAndReduceShapes(u.shape,f),y=fa.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=sH({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==fa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;hj(l,y,e)}if(c&&t.disposeData(p.dataId),s){let e=lf.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var mj,gj,yj={kernelName:Rn,backendName:"wasm",setupFunc:function(e){cj=e.wasm.cwrap(Rn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=GG(i,a,t);if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let f=u.shape.length;lf.assertAxesAreInnerMostDims("min",h,f);let[m,g]=lf.computeOutAndReduceShapes(u.shape,h),y=fa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==fa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;cj(l,TG[i.dtype],y,e)}if(c&&t.disposeData(p.dataId),s){let e=lf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},bj=DG(Dn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(mj||(mj={}));var xj,vj={kernelName:Mn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return gj(i,u,t.shape.length,TG[t.dtype],d,c,mj[a],l),o},setupFunc:function(e){gj=e.wasm.cwrap(Mn,null,["number","array","number","number","array","array","number","number"])}},wj=DG(zn),kj=FG(Pn);function Ij(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var Sj,Nj={kernelName:Wn,backendName:"wasm",setupFunc:function(e){xj=e.wasm.cwrap(Wn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=xj(u,p,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=Ij(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var Tj,_j={kernelName:Vn,backendName:"wasm",setupFunc:function(e){Sj=e.wasm.cwrap(Vn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=Sj(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ij(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var Cj,Ej={kernelName:Un,backendName:"wasm",setupFunc:function(e){Tj=e.wasm.cwrap(Un,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=Tj(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ij(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},$j=DG(Bn,0,"bool");var Aj={kernelName:Hn,backendName:"wasm",setupFunc:function(e){Cj=e.wasm.cwrap(Hn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(a.dataId).id;return Cj(p,s,i,o,u),l}};var Fj={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var Rj,Dj={kernelName:jn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FH({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{fa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),fa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=pH({inputs:t.map((e=>{let t=FH({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var Mj,Oj={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===fa.sizeFromShape(t.shape))return DH({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return Rj(i,u,t.shape.length,TG[t.dtype],d,c,a,l),o},setupFunc:function(e){Rj=e.wasm.cwrap(qn,null,["number","array","number","number","array","array","number","number"])}},Lj=DG(Xn);var zj,Pj={kernelName:Yn,backendName:"wasm",setupFunc:function(e){Mj=e.wasm.cwrap(Yn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=sH({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(p.dataId).id;return Mj(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),p}};var Bj,Wj={kernelName:Zn,backendName:"wasm",setupFunc:function(e){zj=e.wasm.cwrap(Zn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=GG(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=lf.getInnerMostAxes(f.length,u.shape.length))}lf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=lf.computeOutAndReduceShapes(u.shape,f),y=fa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==fa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;zj(l,y,TG[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=lf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},Vj={kernelName:Jn,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=zE(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Uj=DG(Pt),Gj=FG(tr),Hj=FG(or);var jj,qj={kernelName:sr,backendName:"wasm",setupFunc:function(e){Bj=e.wasm.cwrap(sr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,p]=l,[h,d,c,f]=s.shape,m=[h,u,p,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=sH({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===fa.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return Bj(y,h,d,c,f,u,p,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var Kj,Xj={kernelName:rr,backendName:"wasm",setupFunc:function(e){jj=e.wasm.cwrap(rr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,f=[p,l,u,c],m=t.makeOutput(f,"float32");if(0===fa.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=sH({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return jj(b,p,h,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}};var Yj,Zj={kernelName:lr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=fa.parseAxisParam(s,a.shape);if(0===a.shape.length)return zG({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);Kj(l,p,i.length,h,a.shape.length,u);let d=JG({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){Kj=e.wasm.cwrap(lr,null,["number","array","number","array","number","number"])}};var Jj,Qj={kernelName:Zr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,c,f]=a.shape,[m,g]=lf.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return Yj(u,h,d,c,f,s,m,g,b,y.length,p),l},setupFunc:function(e){Yj=e.wasm.cwrap(Zr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},eq=FG(ur),tq=FG(pr);var nq,rq={kernelName:hr,backendName:"wasm",setupFunc:function(e){Jj=e.wasm.cwrap(hr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===fa.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=zo.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return Jj(c,f,TG[s.dtype],l,u,p,m,d,g),o}};var aq,sq={kernelName:cr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,h=r.shape.length,d=a.shape.length,c=0===h||h>1||1===d?1:fa.sizeFromShape(a.shape.slice(1));return nq(i,o,l,c,p),u},setupFunc:function(e){nq=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var iq,oq={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){aq=e.wasm.cwrap(xr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===fa.sizeFromShape(a.shape)||aq(r,s),a}},lq=FG(gr);var uq={kernelName:Nr,backendName:"wasm",setupFunc:function(e){iq=e.wasm.cwrap(Nr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=fa.sizeFromShape(n.shape)/o;return 0===fa.sizeFromShape(s.shape)||iq(a,i,o,l),s}};var pq,hq={kernelName:Ir,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=fa.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=Oj.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=lf.getReshaped(u.shape,s,o,!1),h=lf.getPermuted(p.length,s.length,!1),d=lf.getReshapedPermuted(u.shape,s,o,!1),c=JG({inputs:{x:u},backend:n,attrs:{shape:p}}),f=WG({inputs:{x:c},backend:n,attrs:{perm:h}}),m=JG({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var dq,cq={kernelName:Tr,backendName:"wasm",setupFunc:function(e){pq=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],p=n.readSync(i.dataId)[0],h=[l+p,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([p],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=pq(d,c,TG[s.dtype],l,p,u,f,g,b,v,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=lf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=lf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=lf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let _=m,C=y;return N!==h[0]&&(_=nH({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=nH({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,w]}};var fq,mq={kernelName:_r,backendName:"wasm",setupFunc:function(e){dq=e.wasm.cwrap(_r,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=fa.sizeFromShape(s.shape),h=t.makeOutput([u,p],r.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;dq(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=lf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=lf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=lf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=lf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=lf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(y);return[h,c]}};function gq(e){fq=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function yq(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(lf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(p,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;fq(h,TG[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=lf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=lf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=lf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=lf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var bq={kernelName:Cr,backendName:"wasm",setupFunc:gq,kernelFunc:function(e){return yq(e,!0)}};var xq={kernelName:Er,backendName:"wasm",setupFunc:gq,kernelFunc:function(e){return yq(e,!1)}};var vq,wq={kernelName:Sr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=fa.parseAxisParam(i,a.shape)[0],l=lf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let n=nH({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},kq=FG(wr),Iq=FG(Fr),Sq=DG(Ar);var Nq,Tq={kernelName:Xr,backendName:"wasm",setupFunc:function(e){vq=e.wasm.cwrap(Xr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return vq(i,a,TG[s.dtype],l),o}};var _q={kernelName:Rr,backendName:"wasm",setupFunc:function(e){Nq=e.wasm.cwrap(Rr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Vo.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=JG({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){fa.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Vo.computeOutShape(x,v,w),r=nH({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=JG({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(fa.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),p=new Uint8Array(new Int32Array(fa.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;Nq(r,a,s.shape.length,i,o,l,u,p,f.length,h),t=JG({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}};var Cq={kernelName:Dr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=i$(d,c,i,o,l,u,p,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};var Eq={kernelName:Mr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,h]=l$(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string");t.dataIdMap.get(f.dataId).stringBytes=p;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(h),[c,f,m]}};var $q,Aq={kernelName:Or,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=u$(t.readSync(a.dataId),s),o=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},Fq=DG(Lr);var Rq,Dq={kernelName:kr,backendName:"wasm",setupFunc:function(e){$q=e.wasm.cwrap(kr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=GG(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=lf.getInnerMostAxes(f.length,u.shape.length))}lf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=lf.computeOutAndReduceShapes(u.shape,f),y=fa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==fa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;$q(l,y,TG[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=lf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},Mq=FG(zr),Oq=FG(Pr);var Lq,zq={kernelName:Br,backendName:"wasm",setupFunc:function(e){Rq=e.wasm.cwrap(Br,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(p.dataId).id;return Rq(s,l,a.shape.length,u,o.length,TG[p.dtype],h),p}};var Pq,Bq={kernelName:Wr,backendName:"wasm",setupFunc:function(e){Lq=e.wasm.cwrap(Wr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return Lq(i,o,r.shape.length,TG[r.dtype],a,s,p,d),[u,h]}};var Wq={kernelName:Vr,backendName:"wasm",setupFunc:function(e){Pq=e.wasm.cwrap(Vr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:p}=a,[h,d,c,f]=s.shape,[m,g]=null!=p?p:[d,c],y=[h,m,g,f],b=new Uint8Array(new Int32Array(fa.computeStrides(s.shape)).buffer),x=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(x.dataId).id,w=n.dataIdMap.get(s.dataId).id,k=n.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return Pq(w,k,i.shape[0]>1,h,m,g,f,c,d,b,s.shape.length-1,I,t,u,v),x}};var Vq={kernelName:Hr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let p=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<p.length;e++)h[s]=e,p[e]=nH({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return p.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var Uq={kernelName:Kr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},Gq=[AG,RG,OG,LG,jG,KG,YG,ZG,tH,aH,oH,lH,uH,dH,fH,yH,bH,xH,wH,IH,NH,_H,CH,EH,$H,AH,RH,OH,zH,PH,BH,VH,GH,jH,KH,YH,ZH,JH,BG,ej,tj,nj,rj,aj,sj,ij,oj,uj,pj,dj,fj,yj,bj,vj,wj,kj,Nj,_j,Ej,$j,Aj,Fj,Dj,Oj,Lj,Pj,Wj,Vj,Uj,Gj,Hj,eH,qj,Xj,Zj,Qj,eq,tq,rq,sq,oq,lq,rH,uq,hq,cq,mq,bq,xq,wq,kq,Iq,Sq,Tq,_q,Cq,Eq,Aq,Fq,Dq,Mq,Oq,zq,Bq,Wq,UG,Vq,Uq];for(let e of Gq)la(e);var Hq=Pe();Hq.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Hq.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Hq.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var jq=y(O()),qq=y(L()),Kq=y(z()),Xq=jq.default||jq,Yq=Kq.default||Kq,Zq=class extends B{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(lK),uK=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new P(this,no())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=fa.now();return e(),{kernelMs:fa.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=fa.sizeFromShape(n),o=i*fa.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||fa.sizeFromShape(s);let o=fa.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=fa.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=fa.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Jq(e,t,n){if(null!=tK)return tK;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=rK&&null!=rK[r]?rK[r]:n+r}async function Qq(){let[e,t]=await Promise.all([Pe().getAsync("WASM_HAS_SIMD_SUPPORT"),Pe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=qq.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Jq(e,t,null!=nK?nK:r):r+n}};sK&&(a.instantiateWasm=function(e){return(t,n)=>(fa.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(Jq(e,t,null!=nK?nK:"")));let s,i=!1;a.onAbort=()=>{i||aK||(aK=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==tK?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Xq.toString()],{type:"text/javascript"}),s=Xq(a)):s=Yq(a),s.then((e=>{i=!0,aK=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}var eK=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],tK=null,nK=null,rK={},aK=!1,sK=!1;function iK(e,t=!1){if(eo("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),aK)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");tK=e,sK=t}function oK(e,t=!1){if(aK)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)nK=e;else{rK=e;let t=eK.filter((e=>null==rK[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}sK=t}var lK=-1,uK=-1;function pK(e){lK=e}function hK(){if(-1===uK)throw new Error("WASM backend not initialized.");return uK}var dK="3.19.0";go("wasm",(async()=>{let{wasm:e}=await Qq();return new Zq(e)}),2);var cK={tfjs:"3.19.0","tfjs-core":"3.19.0","tfjs-data":"3.19.0","tfjs-layers":"3.19.0","tfjs-converter":"3.19.0","tfjs-backend-cpu":"3.19.0","tfjs-backend-webgl":"3.19.0","tfjs-backend-wasm":"3.19.0"},fK={};function mK(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}i(fK,{AnchorPosition:()=>cX,DrawBox:()=>yX,DrawBoxOptions:()=>gX,DrawFaceLandmarks:()=>mY,DrawFaceLandmarksOptions:()=>fY,DrawTextField:()=>mX,DrawTextFieldOptions:()=>fX,drawContour:()=>mK,drawDetections:()=>bX,drawFaceExpressions:()=>hY,drawFaceLandmarks:()=>gY});var gK={};i(gK,{computeReshapedDimensions:()=>_K,getCenterPoint:()=>CK,isDimensions:()=>TK,isEven:()=>SK,isFloat:()=>IK,isTensor:()=>bK,isTensor1D:()=>xK,isTensor2D:()=>vK,isTensor3D:()=>wK,isTensor4D:()=>kK,isValidNumber:()=>$K,isValidProbablitiy:()=>AK,range:()=>EK,round:()=>NK});var yK=class{constructor(e,t){if(!$K(e)||!$K(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new yK(1/this.width,1/this.height)}};function bK(e,t){return e instanceof ja&&e.shape.length===t}function xK(e){return bK(e,1)}function vK(e){return bK(e,2)}function wK(e){return bK(e,3)}function kK(e){return bK(e,4)}function IK(e){return e%1!=0}function SK(e){return e%2==0}function NK(e,t=2){let n=10**t;return Math.floor(e*n)/n}function TK(e){return e&&e.width&&e.height}function _K({width:e,height:t},n){let r=n/Math.max(t,e);return new yK(Math.round(e*r),Math.round(t*r))}function CK(e){return e.reduce(((e,t)=>e.add(t)),new FK(0,0)).div(new FK(e.length,e.length))}function EK(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function $K(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function AK(e){return $K(e)&&e>=0&&e<=1}var FK=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new FK(this.x+e.x,this.y+e.y)}sub(e){return new FK(this.x-e.x,this.y-e.y)}mul(e){return new FK(this.x*e.x,this.y*e.y)}div(e){return new FK(this.x/e.x,this.y/e.y)}abs(){return new FK(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new FK(Math.floor(this.x),Math.floor(this.y))}},RK=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every($K)}static assertIsValidBox(e,t,n=!1){if(!RK.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every($K),a=[n.x,n.y,n.width,n.height].every($K);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];RK.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new FK(this.left,this.top)}get topRight(){return new FK(this.right,this.top)}get bottomLeft(){return new FK(this.left,this.bottom)}get bottomRight(){return new FK(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new RK({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new RK({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new RK({x:e,y:t,width:n,height:r})}rescale(e){let t=TK(e)?e.width:e,n=TK(e)?e.height:e;return new RK({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new RK({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,p=Math.min(l,e-i),h=Math.min(u,t-o);return new RK({x:i,y:o,width:p,height:h}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new RK({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new RK({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},DK=class extends RK{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},MK=class{constructor(e,t,n,r,a){this._imageDims=new yK(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new RK(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new RK(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new MK(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},OK=class extends MK{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new OK(n,r,a)}};function LK(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function zK(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new DK(r,a,s,i)}function PK(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(LK(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function BK(e,t){return so((()=>{let[n,r,a]=t,s=xp([...e.shape.slice(0,3),1],n,"float32"),i=xp([...e.shape.slice(0,3),1],r,"float32"),o=xp([...e.shape.slice(0,3),1],a,"float32"),l=iu([s,i,o],3);return Up(e,l)}))}function WK(e,t=!1){return so((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,xp(n,0,"float32")},l=o(s),u=a-l.shape[i],p=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Si(e,"float32")));return iu(p,i)}))}function VK(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function UK(e){return 1/(1+Math.exp(-e))}function GK(e){return Math.log(e/(1-e))}var HK,jK=class extends RK{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},qK=class{constructor(e,t,n=new FK(0,0)){let{width:r,height:a}=t;this._imgDims=new yK(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new FK(r,a)).add(n)))}get shift(){return new FK(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new FK(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new FK(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof OK?e.box.floor():new RK(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=CK(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new jK(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=zK(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},KK=class extends qK{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],CK([e[3],e[4]])]}},XK=class extends qK{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(CK)}},YK=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${NK(this.distance)})`:""}`}},ZK=class extends RK{constructor(e,t){super(e),this._label=t}static assertIsValidLabeledBox(e,t){if(RK.assertIsValidBox(e,t),!$K(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}get label(){return this._label}},JK=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new JK(e.label,t)}},QK=class extends ZK{constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}static assertIsValidPredictedBox(e,t){if(ZK.assertIsValidLabeledBox(e,t),!AK(e.score)||!AK(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}get score(){return this._score}get classScore(){return this._classScore}};function eX(e){return e.detection instanceof OK}function tX(e,t){return{...e,detection:t}}function nX(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function rX(){return"object"==typeof global&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function aX(e){let t="";if(!e&&rX())try{e=s("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function sX(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=aX();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function iX(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function oX(e){HK=e}function lX(){return iX()?oX(nX()):rX()?oX(sX()):null}var uX={getEnv:function(){if(!HK)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return HK},setEnv:oX,initialize:lX,createBrowserEnv:nX,createFileSystem:aX,createNodejsEnv:sX,monkeyPatch:function(e){if(HK||lX(),!HK)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=HK.Canvas,Image:n=HK.Image}=e;HK.Canvas=t,HK.Image=n,HK.createCanvasElement=e.createCanvasElement||(()=>new t),HK.createImageElement=e.createImageElement||(()=>new n),HK.ImageData=e.ImageData||HK.ImageData,HK.Video=e.Video||HK.Video,HK.fetch=e.fetch||HK.fetch,HK.readFile=e.readFile||HK.readFile},isBrowser:iX,isNodejs:rX};function pX(e){return uX.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function hX(e){let{Canvas:t,CanvasRenderingContext2D:n}=uX.getEnv();if(e instanceof n)return e;let r=pX(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}lX();var dX,cX=((dX=cX||{}).TOP_LEFT="TOP_LEFT",dX.TOP_RIGHT="TOP_RIGHT",dX.BOTTOM_LEFT="BOTTOM_LEFT",dX.BOTTOM_RIGHT="BOTTOM_RIGHT",dX),fX=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},mX=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof mX?e.text:e,this.anchor=t,this.options=new fX(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=pX(e),n=hX(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let p=this.getUpperLeft(n,t);n.fillRect(p.x,p.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+p.x,a=o+p.y+(t+1)*s;n.fillText(e,r,a)}))}},gX=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new fX({...s,...a})}},yX=class{constructor(e,t={}){this.box=new RK(e),this.options=new gX(t)}draw(e){let t=hX(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new mX([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function bX(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof OK?t.score:eX(t)?t.detection.score:void 0,r=t instanceof OK?t.box:eX(t)?t.detection.box:new RK(t),a=n?`${NK(n)}`:void 0;new yX(r,{label:a}).draw(e)}))}function xX(e){let{Image:t,Video:n}=uX.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function vX(e){return new Promise(((t,n)=>{function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof uX.getEnv().Canvas||xX(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}function wX(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=uX.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function kX(e){let{Image:t,Video:n}=uX.getEnv();return e instanceof t?new yK(e.naturalWidth,e.naturalHeight):e instanceof n?new yK(e.videoWidth,e.videoHeight):new yK(e.width,e.height)}function IX({width:e,height:t}){let{createCanvasElement:n}=uX.getEnv(),r=n();return r.width=e,r.height=t,r}function SX(e,t){let{ImageData:n}=uX.getEnv();if(!(e instanceof n||xX(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||kX(e),s=IX({width:r,height:a});return e instanceof n?hX(s).putImageData(e,0,0):hX(s).drawImage(e,0,0,r,a),s}async function NX(e,t){let n=t||uX.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(kK(e)?1:0),i=so((()=>e.as3D(r,a,s).toInt()));return await Eo.toPixels(i,n),i.dispose(),n}function TX(e){let{Image:t,Canvas:n,Video:r}=uX.getEnv();return e instanceof t||e instanceof n||e instanceof r}function _X(e,t,n=!1){let{Image:r,Canvas:a}=uX.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return IX({width:1,height:1});let s=kX(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=IX({width:t,height:t}),p=e instanceof a?e:SX(e),h=Math.abs(o-l)/2,d=n&&o<l?h:0,c=n&&l<o?h:0;return p.width>0&&p.height>0&&hX(u).drawImage(p,d,c,o,l),u}var CX=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(wK(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(kK(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof uX.getEnv().Canvas?e:SX(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return EK(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return _K({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,so((()=>{let n=EK(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof ja){let n=kK(r)?r:mp(r);return n=WK(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=Gc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof uX.getEnv().Canvas)return Eo.fromPixels(_X(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return ud(n.map((e=>Si(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function EX(e){if(e instanceof CX)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(pX);return r.forEach(((e,r)=>{if(!TX(e)&&!wK(e)&&!kK(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(kK(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>TX(e)&&vX(e)))),new CX(r,Array.isArray(e))}async function $X(e,t){let{Canvas:n}=uX.getEnv(),r=e;if(!(e instanceof n)){let t=await EX(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await NX(a)}let a=hX(r);return t.map((e=>e instanceof OK?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=IX({width:n,height:r});return n>0&&r>0&&hX(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function AX(e,t){if(!wK(e)&&!kK(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(kK(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return so((()=>{let[n,r,a]=e.shape.slice(kK(e)?1:0);return t.map((e=>e instanceof OK?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>Qh(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function FX(e,t){let{fetch:n}=uX.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function RX(e){let t=await FX(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return wX(n)}async function DX(e){return(await FX(e)).json()}async function MX(e){return new Float32Array(await(await FX(e)).arrayBuffer())}async function OX(e){let t=await FX(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return function(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=uX.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()}))}(n)}function LX(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function zX(e,t){let{manifestUri:n,modelBaseUri:r}=LX(e,t),a=await DX(n);return _i.loadWeights(a,r)}function PX(e,t,n=!1){let{width:r,height:a}=n?kX(t):t;return e.width=r,e.height=a,{width:r,height:a}}var BX=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Ka))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Ka)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=$s(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await zX(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=uX.getEnv(),{manifestUri:n,modelBaseUri:r}=LX(e,this.getDefaultModelName()),a=_i.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof ja))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function WX(e,t,n){return so((()=>{let r=jh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Tl(r,t.bias),r}))}function VX(e,t,n=!1){return so((()=>{let r=Oh(n?Tl(Tu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):WX(e,t.conv0,[2,2])),a=WX(r,t.conv1,[1,1]),s=WX(Oh(Tl(r,a)),t.conv2,[1,1]);return Oh(Tl(r,Tl(a,s)))}))}function UX(e,t,n=!1,r=!0){return so((()=>{let a=Oh(n?Tl(Tu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):WX(e,t.conv0,r?[2,2]:[1,1])),s=WX(a,t.conv1,[1,1]),i=WX(Oh(Tl(a,s)),t.conv2,[1,1]),o=WX(Oh(Tl(a,Tl(s,i))),t.conv3,[1,1]);return Oh(Tl(a,Tl(s,Tl(i,o))))}))}function GX(e,t,n="same",r=!1){return so((()=>{let a=Tl(Tu(e,t.filters,[1,1],n),t.bias);return r?Oh(a):a}))}function HX(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function jX(e,t){return(n,r,a,s)=>{let i=md(e(n*r*a*a),[a,a,n,r]),o=cd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function qX(e,t){return(n,r,a)=>{let s=fd(e(n*r),[n,r]),i=cd(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var KX=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function XX(e,t){return(n,r,a)=>{let s=md(e(9*n),[3,3,n,1]),i=md(e(n*r),[1,1,n,r]),o=cd(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new KX(s,i,o)}}function YX(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new KX(n,r,a)}}function ZX(e,t){return(n,r,a)=>{let s=e[n];if(!bK(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function JX(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function QX(e,t){let n=jX(e,t),r=XX(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function eY(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function tY(e,t){let n=ZX(e,t),r=eY(n),a=YX(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var nY=class extends BX{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return so((()=>{let n=UX(BK(Si(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=UX(n,t.dense1),n=UX(n,t.dense2),n=UX(n,t.dense3),n=au(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await EX(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=tY(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return HX(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=JX(e),{extractDenseBlock4Params:a}=QX(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function rY(e,t){return so((()=>Tl(Xi(e,t.weights),t.bias)))}function aY(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var sY=class extends BX{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return so((()=>{let n=e instanceof CX?this.faceFeatureExtractor.forwardInput(e):e;return rY(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=JX(e),i=qX(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=aY(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=ZX(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return HX(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},iY=["neutral","happy","sad","angry","fearful","disgusted","surprised"],oY=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);iY.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return iY.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},lY=class extends sY{constructor(e=new nY){super("FaceExpressionNet",e)}forwardInput(e){return so((()=>td(this.runNet(e))))}async forward(e){return this.forwardInput(await EX(e))}async predictExpressions(e){let t=await EX(e),n=await this.forwardInput(t),r=await Promise.all(kd(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new oY(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function uY(e){return e.expressions instanceof oY}function pY(e,t){return{...e,expressions:t}}function hY(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof oY?t:uY(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=eX(t)?t.detection.box.bottomLeft:r||new FK(0,0);new mX(s.map((e=>`${e.expression} (${NK(e.probability)})`)),i).draw(e)}))}function dY(e){return eX(e)&&e.landmarks instanceof qK&&e.unshiftedLandmarks instanceof qK&&e.alignedRect instanceof OK}function cY(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new OK(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;let r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var fY=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},mY=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new fY(t)}draw(e){let t=hX(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof XK&&(t.strokeStyle=s,t.lineWidth=a,mK(t,this.faceLandmarks.getJawOutline()),mK(t,this.faceLandmarks.getLeftEyeBrow()),mK(t,this.faceLandmarks.getRightEyeBrow()),mK(t,this.faceLandmarks.getNose()),mK(t,this.faceLandmarks.getLeftEye(),!0),mK(t,this.faceLandmarks.getRightEye(),!0),mK(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function gY(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof qK?t:dY(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new mY(n).draw(e)}))}function yY(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=JX(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=jX(e,t),r=XX(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},p={};EK(t,0,1).forEach((e=>{p[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:p,exit_flow:h}}}function bY(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=ZX(e,t),r=eY(n),a=YX(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};EK(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return HX(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function xY(e,t,n){return Tl(Tu(e,t.filters,n,"same"),t.bias)}function vY(e,t,n=!0){let r=n?Oh(e):e;return r=WX(r,t.separable_conv0,[1,1]),r=WX(Oh(r),t.separable_conv1,[1,1]),r=Qp(r,[3,3],[2,2],"same"),r=Tl(r,xY(e,t.expansion_conv,[2,2])),r}var wY=class extends BX{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return so((()=>{let n=BK(Si(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=Oh(xY(n,t.entry_flow.conv_in,[2,2]));return r=vY(r,t.entry_flow.reduction_block_0,!1),r=vY(r,t.entry_flow.reduction_block_1),EK(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=WX(Oh(e),t.separable_conv0,[1,1]);return n=WX(Oh(n),t.separable_conv1,[1,1]),n=WX(Oh(n),t.separable_conv2,[1,1]),n=Tl(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=vY(r,t.exit_flow.reduction_block),r=Oh(WX(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await EX(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return bY(e,this._numMainBlocks)}extractParams(e){return yY(e,this._numMainBlocks)}};var kY,IY=((kY=IY||{}).FEMALE="female",kY.MALE="male",kY),SY=class extends BX{constructor(e=new wY(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return so((()=>{let n=e instanceof CX?this.faceFeatureExtractor.forwardInput(e):e,r=au(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:rY(r,t.fc.age).as1D(),gender:rY(r,t.fc.gender)}}))}forwardInput(e){return so((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:td(n)}}))}async forward(e){return this.forwardInput(await EX(e))}async predictAgeAndGender(e){let t=await EX(e),n=await this.forwardInput(t),r=kd(n.age),a=kd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=JX(e),a=qX(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=aY(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=ZX(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return HX(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},NY=class extends sY{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return so((()=>{let n=(e,t)=>ud([xp([68],e,"float32"),xp([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(xp([a,136],t,"float32")).sub(ud(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(ud(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return so((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await EX(e))}async detectLandmarks(e){let t=await EX(e),n=so((()=>kd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>SK(t))),s=r.filter(((e,t)=>!SK(t)));return new XK(Array(68).fill(0).map(((e,t)=>new FK(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},TY=class extends NY{constructor(e=new nY){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var _Y=class extends BX{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return so((()=>{let n=VX(BK(Si(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=VX(n,t.dense1),n=VX(n,t.dense2),n=au(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await EX(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=tY(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return HX(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=JX(e),{extractDenseBlock3Params:a}=QX(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},CY=class extends NY{constructor(e=new _Y){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},EY=class extends TY{};function $Y(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=Tu(e,s,n,a);return o=Tl(o,i),o=function(e,t){return Tl(El(e,t.weights),t.biases)}(o,t.scale),r?Oh(o):o}function AY(e,t){return $Y(e,t,[1,1],!1)}function FY(e,t){return $Y(e,t,[2,2],!0,"valid")}function RY(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(IK(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return so((()=>ko(md(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=cd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=cd(e(n)),s=cd(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function DY(e,t){let n=ZX(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function MY(e,t){let n=function(e,t){return $Y(e,t,[1,1],!0)}(e,t.conv1);return n=AY(n,t.conv2),n=Tl(n,e),n=Oh(n),n}function OY(e,t){let n=FY(e,t.conv1);n=AY(n,t.conv2);let r=au(e,2,2,"valid"),a=ah(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=ah(e);n=iu([n,t],1);let r=[...n.shape];r[2]=1;let a=ah(r);n=iu([n,a],2)}return r=s?iu([r,a],3):r,n=Tl(r,n),n=Oh(n),n}var LY=class extends BX{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return so((()=>{let n=FY(BK(Si(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Qp(n,3,2,"valid"),n=MY(n,t.conv32_1),n=MY(n,t.conv32_2),n=MY(n,t.conv32_3),n=OY(n,t.conv64_down),n=MY(n,t.conv64_1),n=MY(n,t.conv64_2),n=MY(n,t.conv64_3),n=OY(n,t.conv128_down),n=MY(n,t.conv128_1),n=MY(n,t.conv128_2),n=OY(n,t.conv256_down),n=MY(n,t.conv256_1),n=MY(n,t.conv256_2),n=OY(n,t.conv256_down_out);let r=n.mean([1,2]);return Xi(r,t.fc)}))}async forward(e){return this.forwardInput(await EX(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await EX(e),r=so((()=>kd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=DY(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!vK(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:h,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return HX(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=JX(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=RY(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=so((()=>ko(fd(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:h,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function zY(e){let t=new LY;return t.extractWeights(e),t}function PY(e,t){return{...e,descriptor:t}}function BY(e){return"number"==typeof e.age}function WY(e,t){return{...e,age:t}}function VY(e){return("male"===e.gender||"female"===e.gender)&&AK(e.genderProbability)}function UY(e,t,n){return{...e,gender:t,genderProbability:n}}function GY(e,t){function n(n,r,a,s,i){let o=md(e(n*r*a*a),[a,a,n,r]),l=cd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=md(e(9*n),[3,3,n,1]),s=cd(e(n)),i=cd(e(n)),o=cd(e(n)),l=cd(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function HY(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=ZX(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!wK(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return HX(e,t),{params:s,paramMappings:t}}function jY(e,t,n){return so((()=>{let r=Tu(e,t.filters,n,"same");return r=Tl(r,t.batch_norm_offset),wu(r,0,6)}))}function qY(e,t){return so((()=>{let n,r=jY(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return so((()=>{let r=Pu(e,t.filters,n,"same");return r=cu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),wu(r,0,6)}))}(r,e.depthwise_conv,s),r=jY(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function KY(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(p-l)*(h-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,p),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function XY(e,t){let{sizes:n,centers:r}=function(e){let t=kd(ko(e,[1,0])),n=[Up(t[2],t[0]),Up(t[3],t[1])];return{sizes:n,centers:[Tl(t[0],Cl(n[0],2)),Tl(t[1],Cl(n[1],2))]}}(e),a=kd(ko(t,[1,0])),s=Cl(El(fp(Cl(a[2],5)),n[0]),2),i=Tl(El(Cl(a[0],10),n[0]),r[0]),o=Cl(El(fp(Cl(a[3],5)),n[1]),2),l=Tl(El(Cl(a[1],10),n[1]),r[1]);return ko(ud([Up(i,s),Up(l,o),Tl(i,s),Tl(l,o)]),[1,0])}function YY(e,t){return so((()=>{let n=e.shape[0];return{boxPredictionEncoding:ru(GX(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:ru(GX(e,t.class_predictor),[n,-1,3])}}))}var ZY=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},JY=class extends BX{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return so((()=>{let n=Si(e.toBatchTensor(512,!1),"float32"),r=qY(Up(Cl(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return so((()=>{let r=jY(e,n.conv_0,[1,1]),a=jY(r,n.conv_1,[2,2]),s=jY(a,n.conv_2,[1,1]),i=jY(s,n.conv_3,[2,2]),o=jY(i,n.conv_4,[1,1]),l=jY(o,n.conv_5,[2,2]),u=jY(l,n.conv_6,[1,1]),p=jY(u,n.conv_7,[2,2]),h=YY(t,n.box_predictor_0),d=YY(e,n.box_predictor_1),c=YY(a,n.box_predictor_2),f=YY(i,n.box_predictor_3),m=YY(l,n.box_predictor_4),g=YY(p,n.box_predictor_5);return{boxPredictions:iu([h.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:iu([h.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return so((()=>{let r=e.shape[0],a=XY(ru(yp(n.extra_dim,[r,1,1]),[-1,4]),ru(e,[-1,4]));a=ru(a,[r,a.shape[0]/r,4]);let s=ou(lu(t,[0,0,1],[-1,-1,-1])),i=lu(s,[0,0,0],[-1,-1,1]);return i=ru(i,[r,i.shape[1]]),{boxes:kd(a),scores:kd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await EX(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new ZY(t),a=await EX(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(l.dataSync()),p=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=KY(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/h.width,f=d/h.height,m=o.arraySync(),g=p.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new OK(u[e],new jK(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return HY(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=JX(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=GY(n,t),i=a(),o=s(),l={extra_dim:$o(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};function QY(e){let t=new JY;return t.extractWeights(e),t}function eZ(e){return QY(e)}var tZ=class extends JY{},nZ=[new FK(.738768,.874946),new FK(2.42204,2.65704),new FK(4.30971,7.04493),new FK(10.246,4.59428),new FK(12.6868,11.8741)],rZ=[new FK(1.603231,2.094468),new FK(6.041143,7.080126),new FK(2.882459,3.518061),new FK(4.266906,5.178857),new FK(9.041765,10.66308)],aZ=[117.001,114.697,97.404],sZ=e=>"number"==typeof e;function iZ(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!sZ(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>sZ(e.x)&&sZ(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(sZ)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function oZ(e){return so((()=>{let t=El(e,op(.10000000149011612));return Tl(Oh(Up(e,t)),t)}))}function lZ(e,t){return so((()=>{let n=gh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Tu(n,t.conv.filters,[1,1],"valid"),n=Up(n,t.bn.sub),n=El(n,t.bn.truediv),n=Tl(n,t.conv.bias),oZ(n)}))}function uZ(e,t){return so((()=>{let n=gh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=jh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Tl(n,t.bias),oZ(n)}))}function pZ(e,t){let n=jX(e,t);let r=XX(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=cd(e(n)),s=cd(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function hZ(e,t){let n=ZX(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:YX(n)}}var dZ=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},cZ=class extends BX{constructor(e){super("TinyYolov2"),iZ(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=lZ(e,t.conv0);return n=Qp(n,[2,2],[2,2],"same"),n=lZ(n,t.conv1),n=Qp(n,[2,2],[2,2],"same"),n=lZ(n,t.conv2),n=Qp(n,[2,2],[2,2],"same"),n=lZ(n,t.conv3),n=Qp(n,[2,2],[2,2],"same"),n=lZ(n,t.conv4),n=Qp(n,[2,2],[2,2],"same"),n=lZ(n,t.conv5),n=Qp(n,[2,2],[1,1],"same"),n=lZ(n,t.conv6),n=lZ(n,t.conv7),GX(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?oZ(GX(e,t.conv0,"valid",!1)):uZ(e,t.conv0);return n=Qp(n,[2,2],[2,2],"same"),n=uZ(n,t.conv1),n=Qp(n,[2,2],[2,2],"same"),n=uZ(n,t.conv2),n=Qp(n,[2,2],[2,2],"same"),n=uZ(n,t.conv3),n=Qp(n,[2,2],[2,2],"same"),n=uZ(n,t.conv4),n=Qp(n,[2,2],[2,2],"same"),n=uZ(n,t.conv5),n=Qp(n,[2,2],[1,1],"same"),n=t.conv6?uZ(n,t.conv6):n,n=t.conv7?uZ(n,t.conv7):n,GX(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return so((()=>{let r=Si(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?BK(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await EX(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new dZ(t),a=await EX(e),s=await this.forwardInput(a,n),i=so((()=>kd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),p=l.map((e=>e.score)),h=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return PK(u.map((e=>e.rescale(n))),p,this.config.iouThreshold,!0).map((e=>new MK(p[e],h[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=hZ(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return HX(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||cZ.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=JX(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}=pZ(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,h,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):p(e,s,"conv0"),conv1:p(s,i,"conv1"),conv2:p(i,o,"conv2"),conv3:p(o,u,"conv3"),conv4:p(u,h,"conv4"),conv5:p(h,d,"conv5"),conv6:c?p(d,c,"conv6"):void 0,conv7:f?p(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,p,h,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,p,"conv4"),conv5:u(p,h,"conv5"),conv6:u(h,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[p,h,d]=so((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?td(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):op(0)]})),c=[],f=await h.array(),m=await p.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=UK(f[e][t][r][0]);if(!n||a>n){let n=(t+UK(m[e][t][r][0]))/l*i,s=(e+UK(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,p=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,h=n-u/2,f=s-p/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new DK(h,f,h+u,f+p),score:a,classScore:a*y,label:b,...g})}}return p.dispose(),h.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},fZ=cZ;fZ.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var mZ=class extends fZ{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:rZ,meanRgb:aZ}:{anchors:nZ,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new OK(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function gZ(e,t=!0){let n=new mZ(t);return n.extractWeights(e),n}var yZ=class extends dZ{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},bZ=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function xZ(e,t,n,r,a=({alignedRect:e})=>e){let s=e.map((e=>dY(e)?a(e):e.detection)),i=r||(t instanceof ja?await AX(t,s):await $X(t,s)),o=await n(i);return i.forEach((e=>e instanceof ja&&e.dispose())),o}async function vZ(e,t,n,r,a){return xZ([e],t,(async e=>n(e[0])),r,a)}var wZ=[new FK(1.603231,2.094468),new FK(6.041143,7.080126),new FK(2.882459,3.518061),new FK(4.266906,5.178857),new FK(9.041765,10.66308)],kZ=[117.001,114.697,97.404],IZ=class extends fZ{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:wZ,meanRgb:kZ,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new OK(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},SZ={ssdMobilenetv1:new JY,tinyFaceDetector:new IZ,tinyYolov2:new mZ,faceLandmark68Net:new TY,faceLandmark68TinyNet:new CY,faceRecognitionNet:new LY,faceExpressionNet:new lY,ageGenderNet:new SY},NZ=(e,t)=>SZ.ssdMobilenetv1.locateFaces(e,t),TZ=(e,t)=>SZ.tinyFaceDetector.locateFaces(e,t),_Z=(e,t)=>SZ.tinyYolov2.locateFaces(e,t),CZ=e=>SZ.faceLandmark68Net.detectLandmarks(e),EZ=e=>SZ.faceLandmark68TinyNet.detectLandmarks(e),$Z=e=>SZ.faceRecognitionNet.computeFaceDescriptor(e),AZ=e=>SZ.faceExpressionNet.predictExpressions(e),FZ=e=>SZ.ageGenderNet.predictAgeAndGender(e),RZ=e=>SZ.ssdMobilenetv1.load(e),DZ=e=>SZ.tinyFaceDetector.load(e),MZ=e=>SZ.tinyYolov2.load(e),OZ=e=>SZ.faceLandmark68Net.load(e),LZ=e=>SZ.faceLandmark68TinyNet.load(e),zZ=e=>SZ.faceRecognitionNet.load(e),PZ=e=>SZ.faceExpressionNet.load(e),BZ=e=>SZ.ageGenderNet.load(e),WZ=RZ,VZ=NZ,UZ=CZ,GZ=class extends bZ{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},HZ=class extends GZ{async run(){let e=await this.parentTask,t=await xZ(e,this.input,(async e=>Promise.all(e.map((e=>SZ.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>pY(e,t[n])))}withAgeAndGender(){return new YZ(this,this.input)}},jZ=class extends GZ{async run(){let e=await this.parentTask;if(e)return pY(e,await vZ(e,this.input,(e=>SZ.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new ZZ(this,this.input)}},qZ=class extends HZ{withAgeAndGender(){return new JZ(this,this.input)}withFaceDescriptors(){return new tJ(this,this.input)}},KZ=class extends jZ{withAgeAndGender(){return new QZ(this,this.input)}withFaceDescriptor(){return new nJ(this,this.input)}},XZ=class extends bZ{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},YZ=class extends XZ{async run(){let e=await this.parentTask,t=await xZ(e,this.input,(async e=>Promise.all(e.map((e=>SZ.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return WY(UY(e,a,s),r)}))}withFaceExpressions(){return new HZ(this,this.input)}},ZZ=class extends XZ{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await vZ(e,this.input,(e=>SZ.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return WY(UY(e,n,r),t)}withFaceExpressions(){return new jZ(this,this.input)}},JZ=class extends YZ{withFaceExpressions(){return new qZ(this,this.input)}withFaceDescriptors(){return new tJ(this,this.input)}},QZ=class extends ZZ{withFaceExpressions(){return new KZ(this,this.input)}withFaceDescriptor(){return new nJ(this,this.input)}},eJ=class extends bZ{constructor(e,t){super(),this.parentTask=e,this.input=t}},tJ=class extends eJ{async run(){let e=await this.parentTask;return(await xZ(e,this.input,(e=>Promise.all(e.map((e=>SZ.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>PY(e[n],t)))}withFaceExpressions(){return new qZ(this,this.input)}withAgeAndGender(){return new JZ(this,this.input)}},nJ=class extends eJ{async run(){let e=await this.parentTask;if(e)return PY(e,await vZ(e,this.input,(e=>SZ.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new KZ(this,this.input)}withAgeAndGender(){return new QZ(this,this.input)}},rJ=class extends bZ{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?SZ.faceLandmark68TinyNet:SZ.faceLandmark68Net}},aJ=class extends rJ{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof ja?await AX(this.input,t):await $X(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof ja&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>cY(e,r[t])))}withFaceExpressions(){return new qZ(this,this.input)}withAgeAndGender(){return new JZ(this,this.input)}withFaceDescriptors(){return new tJ(this,this.input)}},sJ=class extends rJ{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof ja?await AX(this.input,[t]):await $X(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof ja&&e.dispose())),cY(e,r)}withFaceExpressions(){return new KZ(this,this.input)}withAgeAndGender(){return new QZ(this,this.input)}withFaceDescriptor(){return new nJ(this,this.input)}},iJ=class extends bZ{constructor(e,t=new ZY){super(),this.input=e,this.options=t}},oJ=class extends iJ{async run(){let e,{input:t,options:n}=this;if(n instanceof yZ)e=SZ.tinyFaceDetector.locateFaces(t,n);else if(n instanceof ZY)e=SZ.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof dZ))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=SZ.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>tX({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new aJ(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new HZ(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new YZ(this.runAndExtendWithFaceDetections(),this.input)}},lJ=class extends iJ{async run(){let e=await new oJ(this.input,this.options),t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{let t=await this.run();e(t?tX({},t):void 0)}))}withFaceLandmarks(e=!1){return new sJ(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new jZ(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new ZZ(this.runAndExtendWithFaceDetection(),this.input)}};function uJ(e,t=new ZY){return new lJ(e,t)}function pJ(e,t=new ZY){return new oJ(e,t)}async function hJ(e,t){return pJ(e,new ZY(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function dJ(e,t={}){return pJ(e,new dZ(t)).withFaceLandmarks().withFaceDescriptors()}var cJ=hJ;function fJ(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}var mJ=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof JK)return e;if(e instanceof Float32Array)return new JK(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new JK(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>fJ(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new YK(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new YK("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>JK.fromJSON(e)));return new mJ(t,e.distanceThreshold)}};function gJ(e){let t=new IZ;return t.extractWeights(e),t}function yJ(e,t){let{width:n,height:r}=new yK(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>yJ(e,{width:n,height:r})));if(dY(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return cY(tX(e,t),a)}return eX(e)?tX(e,e.detection.forSize(n,r)):e instanceof qK||e instanceof OK?e.forSize(n,r):e}var bJ="1.7.2";return(e=>((e,s,i,o)=>{if(s&&"object"==typeof s||"function"==typeof s)for(let l of r(s))!a.call(e,l)&&l!==i&&t(e,l,{get:()=>s[l],enumerable:!(o=n(s,l))||o.enumerable});return e})(t({},"__esModule",{value:!0}),e))(o)})();
//# sourceMappingURL=/sm/8187def377c9238e97a47f3408cb6b16a7d6928bfcdc36e720528894c3d08e01.map